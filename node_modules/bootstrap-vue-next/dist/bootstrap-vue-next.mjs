var Dn = Object.defineProperty;
var jn = (e, t, a) => t in e ? Dn(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a;
var xe = (e, t, a) => (jn(e, typeof t != "symbol" ? t + "" : t, a), a);
import { unref as i, computed as d, ref as H, shallowRef as Ia, watch as ce, getCurrentScope as Ql, onScopeDispose as eo, shallowReadonly as pt, watchEffect as je, readonly as ke, isRef as Ct, getCurrentInstance as Fa, onMounted as Ye, nextTick as _e, reactive as ct, inject as Pe, toRef as u, onActivated as qn, defineComponent as N, onBeforeUnmount as to, openBlock as p, createElementBlock as A, Fragment as fe, createElementVNode as K, renderSlot as x, normalizeProps as $e, guardReactiveProps as Ae, createBlock as M, Teleport as La, mergeProps as Q, normalizeClass as R, normalizeStyle as Le, createTextVNode as se, toDisplayString as Y, createCommentVNode as Z, createApp as Gn, h as de, provide as Ze, resolveDynamicComponent as le, withCtx as D, createVNode as ye, toHandlers as Wn, Transition as ao, useSlots as Ee, resolveComponent as lo, withModifiers as ft, renderList as Be, withKeys as Pt, withDirectives as st, vShow as na, isReactive as Un, onUnmounted as Kn, useAttrs as oo, vModelCheckbox as Xn, vModelRadio as Jn, vModelSelect as Yn, createSlots as no } from "vue";
const Zn = (e) => typeof e == "boolean" || e === "" || e === "true" || e === "false", so = (e) => typeof e == "boolean" ? e : e === "" ? !0 : e === "true";
class Xe {
  constructor(t, a = {}) {
    xe(this, "cancelable", !0);
    xe(this, "componentId", null);
    xe(this, "_defaultPrevented", !1);
    xe(this, "eventType", "");
    xe(this, "nativeEvent", null);
    xe(this, "_preventDefault");
    xe(this, "relatedTarget", null);
    xe(this, "target", null);
    if (!t)
      throw new TypeError(
        `Failed to construct '${this.constructor.name}'. 1 argument required, ${arguments.length} given.`
      );
    Object.assign(this, Xe.Defaults, a, { eventType: t }), this._preventDefault = function() {
      this.cancelable && (this.defaultPrevented = !0);
    };
  }
  // Readable by everyone,
  // But only overwritten by inherrited constructors
  get defaultPrevented() {
    return this._defaultPrevented;
  }
  set defaultPrevented(t) {
    this._defaultPrevented = t;
  }
  // I think this is right
  // We want to be able to have it callable to everyone,
  // But only overwritten by inherrited constructors
  get preventDefault() {
    return this._preventDefault;
  }
  // This may not be correct, because it doesn't get correct type inferences in children
  // Ex overwrite this.preventDefault = () => true is valid. Could be a TS issue
  set preventDefault(t) {
    this._preventDefault = t;
  }
  static get Defaults() {
    return {
      cancelable: !0,
      componentId: null,
      eventType: "",
      nativeEvent: null,
      relatedTarget: null,
      target: null
    };
  }
}
class Ft extends Xe {
  constructor(a, l = {}) {
    super(a, l);
    xe(this, "trigger", null);
    Object.assign(this, Xe.Defaults, l, { eventType: a });
  }
  static get Defaults() {
    return {
      ...super.Defaults,
      trigger: null
    };
  }
}
class io extends Xe {
  constructor(a, l) {
    super(a, l);
    xe(this, "from");
    xe(this, "to");
    xe(this, "direction");
    Object.assign(this, Xe.Defaults, l, { eventType: a });
    const { from: o, direction: n, to: r } = l;
    this.from = o, this.to = r, this.direction = n;
  }
  static get Defaults() {
    return {
      ...super.Defaults
    };
  }
}
const ga = (e) => e !== null && typeof e == "object", ro = (e) => /^[0-9]*\.?[0-9]+$/.test(String(e)), Qn = (e) => Object.prototype.toString.call(e) === "[object Object]", uo = /_/g, co = /([a-z])([A-Z])/g, es = /(\s|^)(\w)/g, ts = /(\s|^)(\w)/, jt = /\s+/, as = /^#/, ls = /^#[A-Za-z]+[\w\-:.]*$/, os = /-u-.+/, Gt = (e, t = 2) => typeof e == "string" ? e : e == null ? "" : Array.isArray(e) || Qn(e) && e.toString === Object.prototype.toString ? JSON.stringify(e, null, t) : String(e), Qa = (e) => e.replace(uo, " ").replace(co, (t, a, l) => `${a} ${l}`).replace(ts, (t, a, l) => a + l.toUpperCase()), el = (e) => e.replace(uo, " ").replace(co, (t, a, l) => `${a} ${l}`).replace(es, (t, a, l) => a + l.toUpperCase()), ns = (e) => {
  const t = e.trim();
  return t.charAt(0).toUpperCase() + t.slice(1);
}, va = (e) => `\\${e}`, ss = (e) => {
  const t = Gt(e), { length: a } = t, l = t.charCodeAt(0);
  return t.split("").reduce((o, n, r) => {
    const s = t.charCodeAt(r);
    return s === 0 ? `${o}ï¿½` : (
      // ... is U+007F OR
      s === 127 || // ... is in the range [\1-\1F] (U+0001 to U+001F) OR ...
      s >= 1 && s <= 31 || // ... is the first character and is in the range [0-9] (U+0030 to U+0039) OR ...
      r === 0 && s >= 48 && s <= 57 || // ... is the second character and is in the range [0-9] (U+0030 to U+0039)
      // and the first character is a `-` (U+002D) ...
      r === 1 && s >= 48 && s <= 57 && l === 45 ? o + va(`${s.toString(16)} `) : (
        // ... is the first character AND ...
        r === 0 && // ... is a `-` (U+002D) AND ...
        s === 45 && // ... there is no second character ...
        a === 1 ? o + va(n) : (
          // ... is greater than or equal to U+0080 OR ...
          s >= 128 || // ... is `-` (U+002D) OR ...
          s === 45 || // ... is `_` (U+005F) OR ...
          s === 95 || // ... is in the range [0-9] (U+0030 to U+0039) OR ...
          s >= 48 && s <= 57 || // ... is in the range [A-Z] (U+0041 to U+005A) OR ...
          s >= 65 && s <= 90 || // ... is in the range [a-z] (U+0061 to U+007A) ...
          s >= 97 && s <= 122 ? o + n : o + va(n)
        )
      )
    );
  }, "");
}, fo = typeof window < "u", vo = typeof document < "u", is = typeof Element < "u", mo = typeof navigator < "u", sa = fo && vo && mo, dt = fo ? window : {}, ia = vo ? document : {}, po = mo ? navigator : {}, rs = (po.userAgent || "").toLowerCase();
rs.indexOf("jsdom") > 0;
(() => {
  let e = !1;
  if (sa)
    try {
      const t = {
        // This function will be called when the browser
        // attempts to access the passive property
        get passive() {
          return e = !0, e;
        }
      };
      dt.addEventListener("test", t, t), dt.removeEventListener("test", t, t);
    } catch {
      e = !1;
    }
  return e;
})();
sa && ("ontouchstart" in ia.documentElement || po.maxTouchPoints > 0);
sa && (dt.PointerEvent || dt.MSPointerEvent);
sa && "IntersectionObserver" in dt && "IntersectionObserverEntry" in dt && // Edge 15 and UC Browser lack support for `isIntersecting`
// but we an use `intersectionRatio > 0` instead
// 'isIntersecting' in window.IntersectionObserverEntry.prototype &&
"intersectionRatio" in dt.IntersectionObserverEntry.prototype;
const Na = typeof window < "u", us = typeof document < "u", ds = typeof navigator < "u", za = Na && us && ds, tl = Na ? window : {}, cs = (() => {
  let e = !1;
  if (za)
    try {
      const t = {
        // This function will be called when the browser
        // attempts to access the passive property
        get passive() {
          e = !0;
        }
      };
      tl.addEventListener("test", t, t), tl.removeEventListener("test", t, t);
    } catch {
      e = !1;
    }
  return e;
})(), He = is ? Element.prototype : void 0, fs = (He == null ? void 0 : He.matches) || (He == null ? void 0 : He.msMatchesSelector) || (He == null ? void 0 : He.webkitMatchesSelector), Qe = (e) => !!(e && e.nodeType === Node.ELEMENT_NODE), vs = (e) => Qe(e) ? e.getBoundingClientRect() : null, ms = (e = []) => {
  const { activeElement: t } = document;
  return t && !e.some((a) => a === t) ? t : null;
}, ps = (e) => Qe(e) && e === ms(), gs = (e, t = {}) => {
  try {
    e.focus(t);
  } catch (a) {
    console.error(a);
  }
  return ps(e);
}, bs = (e, t) => t && Qe(e) && e.getAttribute(t) || null, hs = (e) => {
  if (bs(e, "display") === "none")
    return !1;
  const t = vs(e);
  return !!(t && t.height > 0 && t.width > 0);
}, Ve = (e) => ((e == null ? void 0 : e()) ?? []).length === 0, go = (e, t) => (Qe(t) ? t : ia).querySelector(e) || null, ys = (e, t) => Array.from([(Qe(t) ? t : ia).querySelectorAll(e)]), Ra = (e, t) => t && Qe(e) ? e.getAttribute(t) : null, Bs = (e) => ia.getElementById(/^#/.test(e) ? e.slice(1) : e) || null, $s = (e, t, a) => {
  t && Qe(e) && e.setAttribute(t, a);
}, ws = (e, t) => {
  t && Qe(e) && e.removeAttribute(t);
}, ks = (e, t) => Gt(e).toLowerCase() === Gt(t).toLowerCase(), Rt = Na ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || // Fallback, but not a true polyfill
// Only needed for Opera Mini
((e) => setTimeout(e, 16)) : (e) => setTimeout(e, 0), bo = (e, t) => Qe(e) ? fs.call(e, t) : !1, Cs = (He == null ? void 0 : He.closest) || function(e) {
  let t = this;
  if (!t)
    return null;
  do {
    if (bo(t, e))
      return t;
    t = t.parentElement || t.parentNode;
  } while (t !== null && t.nodeType === Node.ELEMENT_NODE);
  return null;
}, al = (e, t, a = !1) => {
  if (!Qe(t))
    return null;
  const l = Cs.call(t, e);
  return a ? l : l === t ? null : l;
}, ra = (e, t, a) => t.concat(["sm", "md", "lg", "xl", "xxl"]).reduce((l, o) => (l[e ? `${e}${o.charAt(0).toUpperCase() + o.slice(1)}` : o] = a, l), /* @__PURE__ */ Object.create(null)), ho = (e, t, a, l = a) => Object.keys(t).reduce((o, n) => (e[n] && o.push(
  [l, n.replace(a, ""), e[n]].filter((r) => r && typeof r != "boolean").join("-").toLowerCase()
), o), []), at = (e = "") => `__BVID__${Math.random().toString().slice(2, 8)}___BV_${e}__`, Et = (e) => !!(e.href || e.to), De = (e, t = {}, a = {}) => {
  const l = [e];
  let o;
  for (let n = 0; n < l.length && !o; n++) {
    const r = l[n];
    o = a[r];
  }
  return o && typeof o == "function" ? o(t) : o;
}, lt = (e, t = NaN) => Number.isInteger(e) ? e : t, Ss = (e, t = NaN) => {
  const a = Number.parseInt(e, 10);
  return Number.isNaN(a) ? t : a;
}, At = (e, t = NaN) => {
  const a = Number.parseFloat(e.toString());
  return Number.isNaN(a) ? t : a;
}, Lt = (e, t) => Object.keys(e).filter((a) => !t.includes(a)).reduce((a, l) => ({ ...a, [l]: e[l] }), {}), Wt = (e) => Array.isArray(e) ? e.map((t) => Wt(t)) : e instanceof Date ? new Date(e.getTime()) : e && typeof e == "object" ? Object.getOwnPropertyNames(e).reduce((t, a) => (Object.defineProperty(t, a, Object.getOwnPropertyDescriptor(e, a) ?? {}), t[a] = Wt(e[a]), t), Object.create(Object.getPrototypeOf(e))) : e, ba = (e) => new Promise((t) => t(Wt(e))), ll = (e, t) => t + (e ? ns(e) : ""), Ha = (e, t) => (Array.isArray(t) ? t.slice() : Object.keys(t)).reduce(
  (a, l) => (a[l] = e[l], a),
  {}
), ua = (e, t) => e === !0 || e === "true" || e === "" ? "true" : e === "grammar" || e === "spelling" ? e : t === !1 ? "true" : e === !1 || e === "false" ? "false" : void 0, yo = Symbol("carousel"), Bo = Symbol("tabs"), $o = Symbol("breadcrumb"), wo = Symbol("progress"), ko = Symbol("listGroup"), Co = Symbol("avatarGroup"), So = Symbol("accordion"), _o = Symbol("checkboxGroup"), To = Symbol("radioGroup"), Ma = Symbol("collapse"), xo = Symbol("collapse"), ha = (e, t) => ((e == null ? void 0 : e()) ?? []).reduce((a, l) => (typeof l.type == "symbol" ? a = a.concat(l.children) : a.push(l), a), []).filter((a) => {
  var l;
  return ((l = a.type) == null ? void 0 : l.__name) === t;
});
function Nt(e) {
  return e.split("-")[1];
}
function Da(e) {
  return e === "y" ? "height" : "width";
}
function tt(e) {
  return e.split("-")[0];
}
function St(e) {
  return ["top", "bottom"].includes(tt(e)) ? "x" : "y";
}
function ol(e, t, a) {
  let { reference: l, floating: o } = e;
  const n = l.x + l.width / 2 - o.width / 2, r = l.y + l.height / 2 - o.height / 2, s = St(t), f = Da(s), m = l[f] / 2 - o[f] / 2, B = s === "x";
  let h;
  switch (tt(t)) {
    case "top":
      h = { x: n, y: l.y - o.height };
      break;
    case "bottom":
      h = { x: n, y: l.y + l.height };
      break;
    case "right":
      h = { x: l.x + l.width, y: r };
      break;
    case "left":
      h = { x: l.x - o.width, y: r };
      break;
    default:
      h = { x: l.x, y: l.y };
  }
  switch (Nt(t)) {
    case "start":
      h[s] -= m * (a && B ? -1 : 1);
      break;
    case "end":
      h[s] += m * (a && B ? -1 : 1);
  }
  return h;
}
const _s = async (e, t, a) => {
  const { placement: l = "bottom", strategy: o = "absolute", middleware: n = [], platform: r } = a, s = n.filter(Boolean), f = await (r.isRTL == null ? void 0 : r.isRTL(t));
  let m = await r.getElementRects({ reference: e, floating: t, strategy: o }), { x: B, y: h } = ol(m, l, f), v = l, w = {}, g = 0;
  for (let k = 0; k < s.length; k++) {
    const { name: y, fn: $ } = s[k], { x: b, y: _, data: V, reset: T } = await $({ x: B, y: h, initialPlacement: l, placement: v, strategy: o, middlewareData: w, rects: m, platform: r, elements: { reference: e, floating: t } });
    B = b ?? B, h = _ ?? h, w = { ...w, [y]: { ...w[y], ...V } }, T && g <= 50 && (g++, typeof T == "object" && (T.placement && (v = T.placement), T.rects && (m = T.rects === !0 ? await r.getElementRects({ reference: e, floating: t, strategy: o }) : T.rects), { x: B, y: h } = ol(m, v, f)), k = -1);
  }
  return { x: B, y: h, placement: v, strategy: o, middlewareData: w };
};
function ja(e) {
  return typeof e != "number" ? function(t) {
    return { top: 0, right: 0, bottom: 0, left: 0, ...t };
  }(e) : { top: e, right: e, bottom: e, left: e };
}
function wt(e) {
  return { ...e, top: e.y, left: e.x, right: e.x + e.width, bottom: e.y + e.height };
}
async function Ut(e, t) {
  var a;
  t === void 0 && (t = {});
  const { x: l, y: o, platform: n, rects: r, elements: s, strategy: f } = e, { boundary: m = "clippingAncestors", rootBoundary: B = "viewport", elementContext: h = "floating", altBoundary: v = !1, padding: w = 0 } = t, g = ja(w), k = s[v ? h === "floating" ? "reference" : "floating" : h], y = wt(await n.getClippingRect({ element: (a = await (n.isElement == null ? void 0 : n.isElement(k))) == null || a ? k : k.contextElement || await (n.getDocumentElement == null ? void 0 : n.getDocumentElement(s.floating)), boundary: m, rootBoundary: B, strategy: f })), $ = h === "floating" ? { ...r.floating, x: l, y: o } : r.reference, b = await (n.getOffsetParent == null ? void 0 : n.getOffsetParent(s.floating)), _ = await (n.isElement == null ? void 0 : n.isElement(b)) && await (n.getScale == null ? void 0 : n.getScale(b)) || { x: 1, y: 1 }, V = wt(n.convertOffsetParentRelativeRectToViewportRelativeRect ? await n.convertOffsetParentRelativeRectToViewportRelativeRect({ rect: $, offsetParent: b, strategy: f }) : $);
  return { top: (y.top - V.top + g.top) / _.y, bottom: (V.bottom - y.bottom + g.bottom) / _.y, left: (y.left - V.left + g.left) / _.x, right: (V.right - y.right + g.right) / _.x };
}
const Kt = Math.min, Xt = Math.max;
function ya(e, t, a) {
  return Xt(e, Kt(t, a));
}
const Ts = (e) => ({ name: "arrow", options: e, async fn(t) {
  const { element: a, padding: l = 0 } = e || {}, { x: o, y: n, placement: r, rects: s, platform: f, elements: m } = t;
  if (a == null)
    return {};
  const B = ja(l), h = { x: o, y: n }, v = St(r), w = Da(v), g = await f.getDimensions(a), k = v === "y", y = k ? "top" : "left", $ = k ? "bottom" : "right", b = k ? "clientHeight" : "clientWidth", _ = s.reference[w] + s.reference[v] - h[v] - s.floating[w], V = h[v] - s.reference[v], T = await (f.getOffsetParent == null ? void 0 : f.getOffsetParent(a));
  let S = T ? T[b] : 0;
  S && await (f.isElement == null ? void 0 : f.isElement(T)) || (S = m.floating[b] || s.floating[w]);
  const O = _ / 2 - V / 2, I = B[y], C = S - g[w] - B[$], F = S / 2 - g[w] / 2 + O, P = ya(I, F, C), W = Nt(r) != null && F != P && s.reference[w] / 2 - (F < I ? B[y] : B[$]) - g[w] / 2 < 0;
  return { [v]: h[v] - (W ? F < I ? I - F : C - F : 0), data: { [v]: P, centerOffset: F - P } };
} }), Ao = ["top", "right", "bottom", "left"];
Ao.reduce((e, t) => e.concat(t, t + "-start", t + "-end"), []);
const xs = { left: "right", right: "left", bottom: "top", top: "bottom" };
function Jt(e) {
  return e.replace(/left|right|bottom|top/g, (t) => xs[t]);
}
function As(e, t, a) {
  a === void 0 && (a = !1);
  const l = Nt(e), o = St(e), n = Da(o);
  let r = o === "x" ? l === (a ? "end" : "start") ? "right" : "left" : l === "start" ? "bottom" : "top";
  return t.reference[n] > t.floating[n] && (r = Jt(r)), { main: r, cross: Jt(r) };
}
const Vs = { start: "end", end: "start" };
function ma(e) {
  return e.replace(/start|end/g, (t) => Vs[t]);
}
const Vo = function(e) {
  return e === void 0 && (e = {}), { name: "flip", options: e, async fn(t) {
    var a;
    const { placement: l, middlewareData: o, rects: n, initialPlacement: r, platform: s, elements: f } = t, { mainAxis: m = !0, crossAxis: B = !0, fallbackPlacements: h, fallbackStrategy: v = "bestFit", fallbackAxisSideDirection: w = "none", flipAlignment: g = !0, ...k } = e, y = tt(l), $ = tt(r) === r, b = await (s.isRTL == null ? void 0 : s.isRTL(f.floating)), _ = h || ($ || !g ? [Jt(r)] : function(P) {
      const W = Jt(P);
      return [ma(P), W, ma(W)];
    }(r));
    h || w === "none" || _.push(...function(P, W, j, te) {
      const X = Nt(P);
      let q = function(ae, me, pe) {
        const be = ["left", "right"], ne = ["right", "left"], ve = ["top", "bottom"], L = ["bottom", "top"];
        switch (ae) {
          case "top":
          case "bottom":
            return pe ? me ? ne : be : me ? be : ne;
          case "left":
          case "right":
            return me ? ve : L;
          default:
            return [];
        }
      }(tt(P), j === "start", te);
      return X && (q = q.map((ae) => ae + "-" + X), W && (q = q.concat(q.map(ma)))), q;
    }(r, g, w, b));
    const V = [r, ..._], T = await Ut(t, k), S = [];
    let O = ((a = o.flip) == null ? void 0 : a.overflows) || [];
    if (m && S.push(T[y]), B) {
      const { main: P, cross: W } = As(l, n, b);
      S.push(T[P], T[W]);
    }
    if (O = [...O, { placement: l, overflows: S }], !S.every((P) => P <= 0)) {
      var I, C;
      const P = (((I = o.flip) == null ? void 0 : I.index) || 0) + 1, W = V[P];
      if (W)
        return { data: { index: P, overflows: O }, reset: { placement: W } };
      let j = (C = O.filter((te) => te.overflows[0] <= 0).sort((te, X) => te.overflows[1] - X.overflows[1])[0]) == null ? void 0 : C.placement;
      if (!j)
        switch (v) {
          case "bestFit": {
            var F;
            const te = (F = O.map((X) => [X.placement, X.overflows.filter((q) => q > 0).reduce((q, ae) => q + ae, 0)]).sort((X, q) => X[1] - q[1])[0]) == null ? void 0 : F[0];
            te && (j = te);
            break;
          }
          case "initialPlacement":
            j = r;
        }
      if (l !== j)
        return { reset: { placement: j } };
    }
    return {};
  } };
};
function nl(e, t) {
  return { top: e.top - t.height, right: e.right - t.width, bottom: e.bottom - t.height, left: e.left - t.width };
}
function sl(e) {
  return Ao.some((t) => e[t] >= 0);
}
const Os = function(e) {
  return e === void 0 && (e = {}), { name: "hide", options: e, async fn(t) {
    const { strategy: a = "referenceHidden", ...l } = e, { rects: o } = t;
    switch (a) {
      case "referenceHidden": {
        const n = nl(await Ut(t, { ...l, elementContext: "reference" }), o.reference);
        return { data: { referenceHiddenOffsets: n, referenceHidden: sl(n) } };
      }
      case "escaped": {
        const n = nl(await Ut(t, { ...l, altBoundary: !0 }), o.floating);
        return { data: { escapedOffsets: n, escaped: sl(n) } };
      }
      default:
        return {};
    }
  } };
};
function il(e) {
  const t = Kt(...e.map((l) => l.left)), a = Kt(...e.map((l) => l.top));
  return { x: t, y: a, width: Xt(...e.map((l) => l.right)) - t, height: Xt(...e.map((l) => l.bottom)) - a };
}
const Ps = function(e) {
  return e === void 0 && (e = {}), { name: "inline", options: e, async fn(t) {
    const { placement: a, elements: l, rects: o, platform: n, strategy: r } = t, { padding: s = 2, x: f, y: m } = e, B = Array.from(await (n.getClientRects == null ? void 0 : n.getClientRects(l.reference)) || []), h = function(k) {
      const y = k.slice().sort((_, V) => _.y - V.y), $ = [];
      let b = null;
      for (let _ = 0; _ < y.length; _++) {
        const V = y[_];
        !b || V.y - b.y > b.height / 2 ? $.push([V]) : $[$.length - 1].push(V), b = V;
      }
      return $.map((_) => wt(il(_)));
    }(B), v = wt(il(B)), w = ja(s), g = await n.getElementRects({ reference: { getBoundingClientRect: function() {
      if (h.length === 2 && h[0].left > h[1].right && f != null && m != null)
        return h.find((k) => f > k.left - w.left && f < k.right + w.right && m > k.top - w.top && m < k.bottom + w.bottom) || v;
      if (h.length >= 2) {
        if (St(a) === "x") {
          const T = h[0], S = h[h.length - 1], O = tt(a) === "top", I = T.top, C = S.bottom, F = O ? T.left : S.left, P = O ? T.right : S.right;
          return { top: I, bottom: C, left: F, right: P, width: P - F, height: C - I, x: F, y: I };
        }
        const k = tt(a) === "left", y = Xt(...h.map((T) => T.right)), $ = Kt(...h.map((T) => T.left)), b = h.filter((T) => k ? T.left === $ : T.right === y), _ = b[0].top, V = b[b.length - 1].bottom;
        return { top: _, bottom: V, left: $, right: y, width: y - $, height: V - _, x: $, y: _ };
      }
      return v;
    } }, floating: l.floating, strategy: r });
    return o.reference.x !== g.reference.x || o.reference.y !== g.reference.y || o.reference.width !== g.reference.width || o.reference.height !== g.reference.height ? { reset: { rects: g } } : {};
  } };
}, Oo = function(e) {
  return e === void 0 && (e = 0), { name: "offset", options: e, async fn(t) {
    const { x: a, y: l } = t, o = await async function(n, r) {
      const { placement: s, platform: f, elements: m } = n, B = await (f.isRTL == null ? void 0 : f.isRTL(m.floating)), h = tt(s), v = Nt(s), w = St(s) === "x", g = ["left", "top"].includes(h) ? -1 : 1, k = B && w ? -1 : 1, y = typeof r == "function" ? r(n) : r;
      let { mainAxis: $, crossAxis: b, alignmentAxis: _ } = typeof y == "number" ? { mainAxis: y, crossAxis: 0, alignmentAxis: null } : { mainAxis: 0, crossAxis: 0, alignmentAxis: null, ...y };
      return v && typeof _ == "number" && (b = v === "end" ? -1 * _ : _), w ? { x: b * k, y: $ * g } : { x: $ * g, y: b * k };
    }(t, e);
    return { x: a + o.x, y: l + o.y, data: o };
  } };
};
function Es(e) {
  return e === "x" ? "y" : "x";
}
const Po = function(e) {
  return e === void 0 && (e = {}), { name: "shift", options: e, async fn(t) {
    const { x: a, y: l, placement: o } = t, { mainAxis: n = !0, crossAxis: r = !1, limiter: s = { fn: (y) => {
      let { x: $, y: b } = y;
      return { x: $, y: b };
    } }, ...f } = e, m = { x: a, y: l }, B = await Ut(t, f), h = St(tt(o)), v = Es(h);
    let w = m[h], g = m[v];
    if (n) {
      const y = h === "y" ? "bottom" : "right";
      w = ya(w + B[h === "y" ? "top" : "left"], w, w - B[y]);
    }
    if (r) {
      const y = v === "y" ? "bottom" : "right";
      g = ya(g + B[v === "y" ? "top" : "left"], g, g - B[y]);
    }
    const k = s.fn({ ...t, [h]: w, [v]: g });
    return { ...k, data: { x: k.x - a, y: k.y - l } };
  } };
};
function Fe(e) {
  var t;
  return ((t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function Ke(e) {
  return Fe(e).getComputedStyle(e);
}
function Eo(e) {
  return e instanceof Fe(e).Node;
}
function nt(e) {
  return Eo(e) ? (e.nodeName || "").toLowerCase() : "";
}
let Ht;
function Io() {
  if (Ht)
    return Ht;
  const e = navigator.userAgentData;
  return e && Array.isArray(e.brands) ? (Ht = e.brands.map((t) => t.brand + "/" + t.version).join(" "), Ht) : navigator.userAgent;
}
function We(e) {
  return e instanceof Fe(e).HTMLElement;
}
function Ge(e) {
  return e instanceof Fe(e).Element;
}
function rl(e) {
  return typeof ShadowRoot > "u" ? !1 : e instanceof Fe(e).ShadowRoot || e instanceof ShadowRoot;
}
function da(e) {
  const { overflow: t, overflowX: a, overflowY: l, display: o } = Ke(e);
  return /auto|scroll|overlay|hidden|clip/.test(t + l + a) && !["inline", "contents"].includes(o);
}
function Is(e) {
  return ["table", "td", "th"].includes(nt(e));
}
function Ba(e) {
  const t = /firefox/i.test(Io()), a = Ke(e), l = a.backdropFilter || a.WebkitBackdropFilter;
  return a.transform !== "none" || a.perspective !== "none" || !!l && l !== "none" || t && a.willChange === "filter" || t && !!a.filter && a.filter !== "none" || ["transform", "perspective"].some((o) => a.willChange.includes(o)) || ["paint", "layout", "strict", "content"].some((o) => {
    const n = a.contain;
    return n != null && n.includes(o);
  });
}
function $a() {
  return /^((?!chrome|android).)*safari/i.test(Io());
}
function qa(e) {
  return ["html", "body", "#document"].includes(nt(e));
}
const ul = Math.min, Vt = Math.max, Yt = Math.round;
function Fo(e) {
  const t = Ke(e);
  let a = parseFloat(t.width), l = parseFloat(t.height);
  const o = We(e), n = o ? e.offsetWidth : a, r = o ? e.offsetHeight : l, s = Yt(a) !== n || Yt(l) !== r;
  return s && (a = n, l = r), { width: a, height: l, fallback: s };
}
function Lo(e) {
  return Ge(e) ? e : e.contextElement;
}
const No = { x: 1, y: 1 };
function $t(e) {
  const t = Lo(e);
  if (!We(t))
    return No;
  const a = t.getBoundingClientRect(), { width: l, height: o, fallback: n } = Fo(t);
  let r = (n ? Yt(a.width) : a.width) / l, s = (n ? Yt(a.height) : a.height) / o;
  return r && Number.isFinite(r) || (r = 1), s && Number.isFinite(s) || (s = 1), { x: r, y: s };
}
function vt(e, t, a, l) {
  var o, n;
  t === void 0 && (t = !1), a === void 0 && (a = !1);
  const r = e.getBoundingClientRect(), s = Lo(e);
  let f = No;
  t && (l ? Ge(l) && (f = $t(l)) : f = $t(e));
  const m = s ? Fe(s) : window, B = $a() && a;
  let h = (r.left + (B && ((o = m.visualViewport) == null ? void 0 : o.offsetLeft) || 0)) / f.x, v = (r.top + (B && ((n = m.visualViewport) == null ? void 0 : n.offsetTop) || 0)) / f.y, w = r.width / f.x, g = r.height / f.y;
  if (s) {
    const k = Fe(s), y = l && Ge(l) ? Fe(l) : l;
    let $ = k.frameElement;
    for (; $ && l && y !== k; ) {
      const b = $t($), _ = $.getBoundingClientRect(), V = getComputedStyle($);
      _.x += ($.clientLeft + parseFloat(V.paddingLeft)) * b.x, _.y += ($.clientTop + parseFloat(V.paddingTop)) * b.y, h *= b.x, v *= b.y, w *= b.x, g *= b.y, h += _.x, v += _.y, $ = Fe($).frameElement;
    }
  }
  return wt({ width: w, height: g, x: h, y: v });
}
function ot(e) {
  return ((Eo(e) ? e.ownerDocument : e.document) || window.document).documentElement;
}
function ca(e) {
  return Ge(e) ? { scrollLeft: e.scrollLeft, scrollTop: e.scrollTop } : { scrollLeft: e.pageXOffset, scrollTop: e.pageYOffset };
}
function zo(e) {
  return vt(ot(e)).left + ca(e).scrollLeft;
}
function It(e) {
  if (nt(e) === "html")
    return e;
  const t = e.assignedSlot || e.parentNode || rl(e) && e.host || ot(e);
  return rl(t) ? t.host : t;
}
function Ro(e) {
  const t = It(e);
  return qa(t) ? t.ownerDocument.body : We(t) && da(t) ? t : Ro(t);
}
function Ot(e, t) {
  var a;
  t === void 0 && (t = []);
  const l = Ro(e), o = l === ((a = e.ownerDocument) == null ? void 0 : a.body), n = Fe(l);
  return o ? t.concat(n, n.visualViewport || [], da(l) ? l : []) : t.concat(l, Ot(l));
}
function dl(e, t, a) {
  let l;
  if (t === "viewport")
    l = function(r, s) {
      const f = Fe(r), m = ot(r), B = f.visualViewport;
      let h = m.clientWidth, v = m.clientHeight, w = 0, g = 0;
      if (B) {
        h = B.width, v = B.height;
        const k = $a();
        (!k || k && s === "fixed") && (w = B.offsetLeft, g = B.offsetTop);
      }
      return { width: h, height: v, x: w, y: g };
    }(e, a);
  else if (t === "document")
    l = function(r) {
      const s = ot(r), f = ca(r), m = r.ownerDocument.body, B = Vt(s.scrollWidth, s.clientWidth, m.scrollWidth, m.clientWidth), h = Vt(s.scrollHeight, s.clientHeight, m.scrollHeight, m.clientHeight);
      let v = -f.scrollLeft + zo(r);
      const w = -f.scrollTop;
      return Ke(m).direction === "rtl" && (v += Vt(s.clientWidth, m.clientWidth) - B), { width: B, height: h, x: v, y: w };
    }(ot(e));
  else if (Ge(t))
    l = function(r, s) {
      const f = vt(r, !0, s === "fixed"), m = f.top + r.clientTop, B = f.left + r.clientLeft, h = We(r) ? $t(r) : { x: 1, y: 1 };
      return { width: r.clientWidth * h.x, height: r.clientHeight * h.y, x: B * h.x, y: m * h.y };
    }(t, a);
  else {
    const r = { ...t };
    if ($a()) {
      var o, n;
      const s = Fe(e);
      r.x -= ((o = s.visualViewport) == null ? void 0 : o.offsetLeft) || 0, r.y -= ((n = s.visualViewport) == null ? void 0 : n.offsetTop) || 0;
    }
    l = r;
  }
  return wt(l);
}
function cl(e, t) {
  return We(e) && Ke(e).position !== "fixed" ? t ? t(e) : e.offsetParent : null;
}
function fl(e, t) {
  const a = Fe(e);
  if (!We(e))
    return a;
  let l = cl(e, t);
  for (; l && Is(l) && Ke(l).position === "static"; )
    l = cl(l, t);
  return l && (nt(l) === "html" || nt(l) === "body" && Ke(l).position === "static" && !Ba(l)) ? a : l || function(o) {
    let n = It(o);
    for (; We(n) && !qa(n); ) {
      if (Ba(n))
        return n;
      n = It(n);
    }
    return null;
  }(e) || a;
}
function Fs(e, t, a) {
  const l = We(t), o = ot(t), n = vt(e, !0, a === "fixed", t);
  let r = { scrollLeft: 0, scrollTop: 0 };
  const s = { x: 0, y: 0 };
  if (l || !l && a !== "fixed")
    if ((nt(t) !== "body" || da(o)) && (r = ca(t)), We(t)) {
      const f = vt(t, !0);
      s.x = f.x + t.clientLeft, s.y = f.y + t.clientTop;
    } else
      o && (s.x = zo(o));
  return { x: n.left + r.scrollLeft - s.x, y: n.top + r.scrollTop - s.y, width: n.width, height: n.height };
}
const Ls = { getClippingRect: function(e) {
  let { element: t, boundary: a, rootBoundary: l, strategy: o } = e;
  const n = a === "clippingAncestors" ? function(m, B) {
    const h = B.get(m);
    if (h)
      return h;
    let v = Ot(m).filter((y) => Ge(y) && nt(y) !== "body"), w = null;
    const g = Ke(m).position === "fixed";
    let k = g ? It(m) : m;
    for (; Ge(k) && !qa(k); ) {
      const y = Ke(k), $ = Ba(k);
      y.position === "fixed" && (w = null), (g ? $ || w : $ || y.position !== "static" || !w || !["absolute", "fixed"].includes(w.position)) ? w = y : v = v.filter((b) => b !== k), k = It(k);
    }
    return B.set(m, v), v;
  }(t, this._c) : [].concat(a), r = [...n, l], s = r[0], f = r.reduce((m, B) => {
    const h = dl(t, B, o);
    return m.top = Vt(h.top, m.top), m.right = ul(h.right, m.right), m.bottom = ul(h.bottom, m.bottom), m.left = Vt(h.left, m.left), m;
  }, dl(t, s, o));
  return { width: f.right - f.left, height: f.bottom - f.top, x: f.left, y: f.top };
}, convertOffsetParentRelativeRectToViewportRelativeRect: function(e) {
  let { rect: t, offsetParent: a, strategy: l } = e;
  const o = We(a), n = ot(a);
  if (a === n)
    return t;
  let r = { scrollLeft: 0, scrollTop: 0 }, s = { x: 1, y: 1 };
  const f = { x: 0, y: 0 };
  if ((o || !o && l !== "fixed") && ((nt(a) !== "body" || da(n)) && (r = ca(a)), We(a))) {
    const m = vt(a);
    s = $t(a), f.x = m.x + a.clientLeft, f.y = m.y + a.clientTop;
  }
  return { width: t.width * s.x, height: t.height * s.y, x: t.x * s.x - r.scrollLeft * s.x + f.x, y: t.y * s.y - r.scrollTop * s.y + f.y };
}, isElement: Ge, getDimensions: function(e) {
  return Fo(e);
}, getOffsetParent: fl, getDocumentElement: ot, getScale: $t, async getElementRects(e) {
  let { reference: t, floating: a, strategy: l } = e;
  const o = this.getOffsetParent || fl, n = this.getDimensions;
  return { reference: Fs(t, await o(a), l), floating: { x: 0, y: 0, ...await n(a) } };
}, getClientRects: (e) => Array.from(e.getClientRects()), isRTL: (e) => Ke(e).direction === "rtl" };
function Ns(e, t, a, l) {
  l === void 0 && (l = {});
  const { ancestorScroll: o = !0, ancestorResize: n = !0, elementResize: r = !0, animationFrame: s = !1 } = l, f = o && !s, m = f || n ? [...Ge(e) ? Ot(e) : e.contextElement ? Ot(e.contextElement) : [], ...Ot(t)] : [];
  m.forEach((w) => {
    f && w.addEventListener("scroll", a, { passive: !0 }), n && w.addEventListener("resize", a);
  });
  let B, h = null;
  r && (h = new ResizeObserver(() => {
    a();
  }), Ge(e) && !s && h.observe(e), Ge(e) || !e.contextElement || s || h.observe(e.contextElement), h.observe(t));
  let v = s ? vt(e) : null;
  return s && function w() {
    const g = vt(e);
    !v || g.x === v.x && g.y === v.y && g.width === v.width && g.height === v.height || a(), v = g, B = requestAnimationFrame(w);
  }(), a(), () => {
    var w;
    m.forEach((g) => {
      f && g.removeEventListener("scroll", a), n && g.removeEventListener("resize", a);
    }), (w = h) == null || w.disconnect(), h = null, s && cancelAnimationFrame(B);
  };
}
const zs = (e, t, a) => {
  const l = /* @__PURE__ */ new Map(), o = { platform: Ls, ...a }, n = { ...o.platform, _c: l };
  return _s(e, t, { ...o, platform: n });
};
function wa(e) {
  var t;
  return (t = e == null ? void 0 : e.$el) != null ? t : e;
}
function Rs(e) {
  return {
    name: "arrow",
    options: e,
    fn(t) {
      const a = wa(i(e.element));
      return a == null ? {} : Ts({
        element: a,
        padding: e.padding
      }).fn(t);
    }
  };
}
function Ho(e, t, a) {
  a === void 0 && (a = {});
  const l = a.whileElementsMounted, o = d(() => {
    var T;
    return (T = i(a.open)) != null ? T : !0;
  }), n = d(() => i(a.middleware)), r = d(() => {
    var T;
    return (T = i(a.placement)) != null ? T : "bottom";
  }), s = d(() => {
    var T;
    return (T = i(a.strategy)) != null ? T : "absolute";
  }), f = d(() => wa(e.value)), m = d(() => wa(t.value)), B = H(null), h = H(null), v = H(s.value), w = H(r.value), g = Ia({}), k = H(!1);
  let y;
  function $() {
    f.value == null || m.value == null || zs(f.value, m.value, {
      middleware: n.value,
      placement: r.value,
      strategy: s.value
    }).then((T) => {
      B.value = T.x, h.value = T.y, v.value = T.strategy, w.value = T.placement, g.value = T.middlewareData, k.value = !0;
    });
  }
  function b() {
    typeof y == "function" && (y(), y = void 0);
  }
  function _() {
    if (b(), l === void 0) {
      $();
      return;
    }
    if (f.value != null && m.value != null) {
      y = l(f.value, m.value, $);
      return;
    }
  }
  function V() {
    o.value || (k.value = !1);
  }
  return ce([n, r, s], $, {
    flush: "sync"
  }), ce([f, m], _, {
    flush: "sync"
  }), ce(o, V, {
    flush: "sync"
  }), Ql() && eo(b), {
    x: pt(B),
    y: pt(h),
    strategy: pt(v),
    placement: pt(w),
    middlewareData: pt(g),
    isPositioned: pt(k),
    update: $
  };
}
const Hs = /* @__PURE__ */ new Set([
  "background",
  "cite",
  "href",
  "itemtype",
  "longdesc",
  "poster",
  "src",
  "xlink:href"
]), Ms = /^aria-[\w-]*$/i, Ds = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i, js = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i, qs = (e, t) => {
  const a = e.nodeName.toLowerCase();
  return t.includes(a) ? Hs.has(a) ? !!(Ds.test(e.nodeValue || "") || js.test(e.nodeValue || "")) : !0 : t.filter((l) => l instanceof RegExp).some((l) => l.test(a));
}, ht = {
  // Global attributes allowed on any supplied element below.
  "*": ["class", "dir", "id", "lang", "role", Ms],
  a: ["target", "href", "title", "rel"],
  area: [],
  b: [],
  br: [],
  col: [],
  code: [],
  div: [],
  em: [],
  hr: [],
  h1: [],
  h2: [],
  h3: [],
  h4: [],
  h5: [],
  h6: [],
  i: [],
  img: ["src", "srcset", "alt", "title", "width", "height"],
  li: [],
  ol: [],
  p: [],
  pre: [],
  s: [],
  small: [],
  span: [],
  sub: [],
  sup: [],
  strong: [],
  u: [],
  ul: []
}, yt = (e, t, a) => {
  if (!e.length)
    return e;
  if (a && typeof a == "function")
    return a(e);
  const o = new window.DOMParser().parseFromString(e, "text/html"), n = o.body.querySelectorAll("*");
  for (const r of n) {
    const s = r.nodeName.toLowerCase();
    if (!Object.keys(t).includes(s)) {
      r.remove();
      continue;
    }
    const f = r.attributes, m = [...t["*"] || [], ...t[s] || []];
    for (const B of f)
      qs(B, m) || r.removeAttribute(B.nodeName);
  }
  return o.body.innerHTML;
};
var Gs = Object.defineProperty, Ws = Object.defineProperties, Us = Object.getOwnPropertyDescriptors, vl = Object.getOwnPropertySymbols, Ks = Object.prototype.hasOwnProperty, Xs = Object.prototype.propertyIsEnumerable, ml = (e, t, a) => t in e ? Gs(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a, Js = (e, t) => {
  for (var a in t || (t = {}))
    Ks.call(t, a) && ml(e, a, t[a]);
  if (vl)
    for (var a of vl(t))
      Xs.call(t, a) && ml(e, a, t[a]);
  return e;
}, Ys = (e, t) => Ws(e, Us(t));
function Mo(e, t) {
  var a;
  const l = Ia();
  return je(() => {
    l.value = e();
  }, Ys(Js({}, t), {
    flush: (a = t == null ? void 0 : t.flush) != null ? a : "sync"
  })), ke(l);
}
var pl;
const Zt = typeof window < "u", Zs = (e) => typeof e < "u", Ga = (e) => typeof e == "function", Qs = (e) => typeof e == "string", Qt = () => {
}, ei = Zt && ((pl = window == null ? void 0 : window.navigator) == null ? void 0 : pl.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);
function Se(e) {
  return typeof e == "function" ? e() : i(e);
}
function ti(e, t) {
  function a(...l) {
    return new Promise((o, n) => {
      Promise.resolve(e(() => t.apply(this, l), { fn: t, thisArg: this, args: l })).then(o).catch(n);
    });
  }
  return a;
}
const Do = (e) => e();
function ai(e = Do) {
  const t = H(!0);
  function a() {
    t.value = !1;
  }
  function l() {
    t.value = !0;
  }
  const o = (...n) => {
    t.value && e(...n);
  };
  return { isActive: ke(t), pause: a, resume: l, eventFilter: o };
}
function li(e) {
  return e;
}
function ea(e) {
  return Ql() ? (eo(e), !0) : !1;
}
function oi(e) {
  return typeof e == "function" ? d(e) : H(e);
}
function jo(e, t = !0) {
  Fa() ? Ye(e) : t ? e() : _e(e);
}
function qo(e, t = 1e3, a = {}) {
  const {
    immediate: l = !0,
    immediateCallback: o = !1
  } = a;
  let n = null;
  const r = H(!1);
  function s() {
    n && (clearInterval(n), n = null);
  }
  function f() {
    r.value = !1, s();
  }
  function m() {
    const B = Se(t);
    B <= 0 || (r.value = !0, o && e(), s(), n = setInterval(e, B));
  }
  if (l && Zt && m(), Ct(t) || Ga(t)) {
    const B = ce(t, () => {
      r.value && Zt && m();
    });
    ea(B);
  }
  return ea(f), {
    isActive: r,
    pause: f,
    resume: m
  };
}
function Bt(e, t = {}) {
  const {
    method: a = "parseFloat",
    radix: l,
    nanToZero: o
  } = t;
  return d(() => {
    let n = Se(e);
    return typeof n == "string" && (n = Number[a](n, l)), o && isNaN(n) && (n = 0), n;
  });
}
var gl = Object.getOwnPropertySymbols, ni = Object.prototype.hasOwnProperty, si = Object.prototype.propertyIsEnumerable, ii = (e, t) => {
  var a = {};
  for (var l in e)
    ni.call(e, l) && t.indexOf(l) < 0 && (a[l] = e[l]);
  if (e != null && gl)
    for (var l of gl(e))
      t.indexOf(l) < 0 && si.call(e, l) && (a[l] = e[l]);
  return a;
};
function ri(e, t, a = {}) {
  const l = a, {
    eventFilter: o = Do
  } = l, n = ii(l, [
    "eventFilter"
  ]);
  return ce(e, ti(o, t), n);
}
var ui = Object.defineProperty, di = Object.defineProperties, ci = Object.getOwnPropertyDescriptors, ta = Object.getOwnPropertySymbols, Go = Object.prototype.hasOwnProperty, Wo = Object.prototype.propertyIsEnumerable, bl = (e, t, a) => t in e ? ui(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a, fi = (e, t) => {
  for (var a in t || (t = {}))
    Go.call(t, a) && bl(e, a, t[a]);
  if (ta)
    for (var a of ta(t))
      Wo.call(t, a) && bl(e, a, t[a]);
  return e;
}, vi = (e, t) => di(e, ci(t)), mi = (e, t) => {
  var a = {};
  for (var l in e)
    Go.call(e, l) && t.indexOf(l) < 0 && (a[l] = e[l]);
  if (e != null && ta)
    for (var l of ta(e))
      t.indexOf(l) < 0 && Wo.call(e, l) && (a[l] = e[l]);
  return a;
};
function pi(e, t, a = {}) {
  const l = a, {
    eventFilter: o
  } = l, n = mi(l, [
    "eventFilter"
  ]), { eventFilter: r, pause: s, resume: f, isActive: m } = ai(o);
  return { stop: ri(e, t, vi(fi({}, n), {
    eventFilter: r
  })), pause: s, resume: f, isActive: m };
}
function ut(e) {
  var t;
  const a = Se(e);
  return (t = a == null ? void 0 : a.$el) != null ? t : a;
}
const Je = Zt ? window : void 0;
function we(...e) {
  let t, a, l, o;
  if (Qs(e[0]) || Array.isArray(e[0]) ? ([a, l, o] = e, t = Je) : [t, a, l, o] = e, !t)
    return Qt;
  Array.isArray(a) || (a = [a]), Array.isArray(l) || (l = [l]);
  const n = [], r = () => {
    n.forEach((B) => B()), n.length = 0;
  }, s = (B, h, v, w) => (B.addEventListener(h, v, w), () => B.removeEventListener(h, v, w)), f = ce(() => [ut(t), Se(o)], ([B, h]) => {
    r(), B && n.push(...a.flatMap((v) => l.map((w) => s(B, v, w, h))));
  }, { immediate: !0, flush: "post" }), m = () => {
    f(), r();
  };
  return ea(m), m;
}
let hl = !1;
function Uo(e, t, a = {}) {
  const { window: l = Je, ignore: o = [], capture: n = !0, detectIframe: r = !1 } = a;
  if (!l)
    return;
  ei && !hl && (hl = !0, Array.from(l.document.body.children).forEach((v) => v.addEventListener("click", Qt)));
  let s = !0;
  const f = (v) => o.some((w) => {
    if (typeof w == "string")
      return Array.from(l.document.querySelectorAll(w)).some((g) => g === v.target || v.composedPath().includes(g));
    {
      const g = ut(w);
      return g && (v.target === g || v.composedPath().includes(g));
    }
  }), B = [
    we(l, "click", (v) => {
      const w = ut(e);
      if (!(!w || w === v.target || v.composedPath().includes(w))) {
        if (v.detail === 0 && (s = !f(v)), !s) {
          s = !0;
          return;
        }
        t(v);
      }
    }, { passive: !0, capture: n }),
    we(l, "pointerdown", (v) => {
      const w = ut(e);
      w && (s = !v.composedPath().includes(w) && !f(v));
    }, { passive: !0 }),
    r && we(l, "blur", (v) => {
      var w;
      const g = ut(e);
      ((w = l.document.activeElement) == null ? void 0 : w.tagName) === "IFRAME" && !(g != null && g.contains(l.document.activeElement)) && t(v);
    })
  ].filter(Boolean);
  return () => B.forEach((v) => v());
}
function gi(e, t = !1) {
  const a = H(), l = () => a.value = !!e();
  return l(), jo(l, t), a;
}
function bi(e, t = {}) {
  const { window: a = Je } = t, l = gi(() => a && "matchMedia" in a && typeof a.matchMedia == "function");
  let o;
  const n = H(!1), r = () => {
    o && ("removeEventListener" in o ? o.removeEventListener("change", s) : o.removeListener(s));
  }, s = () => {
    l.value && (r(), o = a.matchMedia(oi(e).value), n.value = o.matches, "addEventListener" in o ? o.addEventListener("change", s) : o.addListener(s));
  };
  return je(s), ea(() => r()), n;
}
function hi(e) {
  return JSON.parse(JSON.stringify(e));
}
const ka = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, Ca = "__vueuse_ssr_handlers__";
ka[Ca] = ka[Ca] || {};
const yi = ka[Ca];
function Ko(e, t) {
  return yi[e] || t;
}
function Bi(e) {
  return e == null ? "any" : e instanceof Set ? "set" : e instanceof Map ? "map" : e instanceof Date ? "date" : typeof e == "boolean" ? "boolean" : typeof e == "string" ? "string" : typeof e == "object" ? "object" : Number.isNaN(e) ? "any" : "number";
}
var $i = Object.defineProperty, yl = Object.getOwnPropertySymbols, wi = Object.prototype.hasOwnProperty, ki = Object.prototype.propertyIsEnumerable, Bl = (e, t, a) => t in e ? $i(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a, $l = (e, t) => {
  for (var a in t || (t = {}))
    wi.call(t, a) && Bl(e, a, t[a]);
  if (yl)
    for (var a of yl(t))
      ki.call(t, a) && Bl(e, a, t[a]);
  return e;
};
const Ci = {
  boolean: {
    read: (e) => e === "true",
    write: (e) => String(e)
  },
  object: {
    read: (e) => JSON.parse(e),
    write: (e) => JSON.stringify(e)
  },
  number: {
    read: (e) => Number.parseFloat(e),
    write: (e) => String(e)
  },
  any: {
    read: (e) => e,
    write: (e) => String(e)
  },
  string: {
    read: (e) => e,
    write: (e) => String(e)
  },
  map: {
    read: (e) => new Map(JSON.parse(e)),
    write: (e) => JSON.stringify(Array.from(e.entries()))
  },
  set: {
    read: (e) => new Set(JSON.parse(e)),
    write: (e) => JSON.stringify(Array.from(e))
  },
  date: {
    read: (e) => new Date(e),
    write: (e) => e.toISOString()
  }
}, wl = "vueuse-storage";
function Si(e, t, a, l = {}) {
  var o;
  const {
    flush: n = "pre",
    deep: r = !0,
    listenToStorageChanges: s = !0,
    writeDefaults: f = !0,
    mergeDefaults: m = !1,
    shallow: B,
    window: h = Je,
    eventFilter: v,
    onError: w = (I) => {
      console.error(I);
    }
  } = l, g = (B ? Ia : H)(t);
  if (!a)
    try {
      a = Ko("getDefaultStorage", () => {
        var I;
        return (I = Je) == null ? void 0 : I.localStorage;
      })();
    } catch (I) {
      w(I);
    }
  if (!a)
    return g;
  const k = Se(t), y = Bi(k), $ = (o = l.serializer) != null ? o : Ci[y], { pause: b, resume: _ } = pi(g, () => V(g.value), { flush: n, deep: r, eventFilter: v });
  return h && s && (we(h, "storage", O), we(h, wl, S)), O(), g;
  function V(I) {
    try {
      if (I == null)
        a.removeItem(e);
      else {
        const C = $.write(I), F = a.getItem(e);
        F !== C && (a.setItem(e, C), h && h.dispatchEvent(new CustomEvent(wl, {
          detail: {
            key: e,
            oldValue: F,
            newValue: C,
            storageArea: a
          }
        })));
      }
    } catch (C) {
      w(C);
    }
  }
  function T(I) {
    const C = I ? I.newValue : a.getItem(e);
    if (C == null)
      return f && k !== null && a.setItem(e, $.write(k)), k;
    if (!I && m) {
      const F = $.read(C);
      return Ga(m) ? m(F, k) : y === "object" && !Array.isArray(F) ? $l($l({}, k), F) : F;
    } else
      return typeof C != "string" ? C : $.read(C);
  }
  function S(I) {
    O(I.detail);
  }
  function O(I) {
    if (!(I && I.storageArea !== a)) {
      if (I && I.key == null) {
        g.value = k;
        return;
      }
      if (!(I && I.key !== e)) {
        b();
        try {
          g.value = T(I);
        } catch (C) {
          w(C);
        } finally {
          I ? _e(_) : _();
        }
      }
    }
  }
}
function Xo(e) {
  return bi("(prefers-color-scheme: dark)", e);
}
var _i = Object.defineProperty, kl = Object.getOwnPropertySymbols, Ti = Object.prototype.hasOwnProperty, xi = Object.prototype.propertyIsEnumerable, Cl = (e, t, a) => t in e ? _i(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a, Ai = (e, t) => {
  for (var a in t || (t = {}))
    Ti.call(t, a) && Cl(e, a, t[a]);
  if (kl)
    for (var a of kl(t))
      xi.call(t, a) && Cl(e, a, t[a]);
  return e;
};
function Jo(e = {}) {
  const {
    selector: t = "html",
    attribute: a = "class",
    initialValue: l = "auto",
    window: o = Je,
    storage: n,
    storageKey: r = "vueuse-color-scheme",
    listenToStorageChanges: s = !0,
    storageRef: f,
    emitAuto: m
  } = e, B = Ai({
    auto: "",
    light: "light",
    dark: "dark"
  }, e.modes || {}), h = Xo({ window: o }), v = d(() => h.value ? "dark" : "light"), w = f || (r == null ? H(l) : Si(r, l, n, { window: o, listenToStorageChanges: s })), g = d({
    get() {
      return w.value === "auto" && !m ? v.value : w.value;
    },
    set(b) {
      w.value = b;
    }
  }), k = Ko("updateHTMLAttrs", (b, _, V) => {
    const T = o == null ? void 0 : o.document.querySelector(b);
    if (T)
      if (_ === "class") {
        const S = V.split(/\s/g);
        Object.values(B).flatMap((O) => (O || "").split(/\s/g)).filter(Boolean).forEach((O) => {
          S.includes(O) ? T.classList.add(O) : T.classList.remove(O);
        });
      } else
        T.setAttribute(_, V);
  });
  function y(b) {
    var _;
    const V = b === "auto" ? v.value : b;
    k(t, a, (_ = B[V]) != null ? _ : V);
  }
  function $(b) {
    e.onChanged ? e.onChanged(b, y) : y(b);
  }
  return ce(g, $, { flush: "post", immediate: !0 }), m && ce(v, () => $(g.value), { flush: "post" }), jo(() => $(g.value)), g;
}
var Vi = Object.defineProperty, Oi = Object.defineProperties, Pi = Object.getOwnPropertyDescriptors, Sl = Object.getOwnPropertySymbols, Ei = Object.prototype.hasOwnProperty, Ii = Object.prototype.propertyIsEnumerable, _l = (e, t, a) => t in e ? Vi(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a, Fi = (e, t) => {
  for (var a in t || (t = {}))
    Ei.call(t, a) && _l(e, a, t[a]);
  if (Sl)
    for (var a of Sl(t))
      Ii.call(t, a) && _l(e, a, t[a]);
  return e;
}, Li = (e, t) => Oi(e, Pi(t));
function Ni(e = {}) {
  const {
    valueDark: t = "dark",
    valueLight: a = "",
    window: l = Je
  } = e, o = Jo(Li(Fi({}, e), {
    onChanged: (s, f) => {
      var m;
      e.onChanged ? (m = e.onChanged) == null || m.call(e, s === "dark") : f(s);
    },
    modes: {
      dark: t,
      light: a
    }
  })), n = Xo({ window: l });
  return d({
    get() {
      return o.value === "dark";
    },
    set(s) {
      s === n.value ? o.value = "auto" : o.value = s ? "dark" : "light";
    }
  });
}
function qe(e, t = {}) {
  const { initialValue: a = !1 } = t, l = H(!1), o = d(() => ut(e));
  we(o, "focus", () => l.value = !0), we(o, "blur", () => l.value = !1);
  const n = d({
    get: () => l.value,
    set(r) {
      var s, f;
      !r && l.value ? (s = o.value) == null || s.blur() : r && !l.value && ((f = o.value) == null || f.focus());
    }
  });
  return ce(o, () => {
    n.value = a;
  }, { immediate: !0, flush: "post" }), { focused: n };
}
function zi(e = {}) {
  const {
    type: t = "page",
    touch: a = !0,
    resetOnTouchEnds: l = !1,
    initialValue: o = { x: 0, y: 0 },
    window: n = Je,
    eventFilter: r
  } = e, s = H(o.x), f = H(o.y), m = H(null), B = (k) => {
    t === "page" ? (s.value = k.pageX, f.value = k.pageY) : t === "client" ? (s.value = k.clientX, f.value = k.clientY) : t === "movement" && (s.value = k.movementX, f.value = k.movementY), m.value = "mouse";
  }, h = () => {
    s.value = o.x, f.value = o.y;
  }, v = (k) => {
    if (k.touches.length > 0) {
      const y = k.touches[0];
      t === "page" ? (s.value = y.pageX, f.value = y.pageY) : t === "client" && (s.value = y.clientX, f.value = y.clientY), m.value = "touch";
    }
  }, w = (k) => r === void 0 ? B(k) : r(() => B(k), {}), g = (k) => r === void 0 ? v(k) : r(() => v(k), {});
  return n && (we(n, "mousemove", w, { passive: !0 }), we(n, "dragover", w, { passive: !0 }), a && t !== "movement" && (we(n, "touchstart", g, { passive: !0 }), we(n, "touchmove", g, { passive: !0 }), l && we(n, "touchend", h, { passive: !0 }))), {
    x: s,
    y: f,
    sourceType: m
  };
}
function Tl(e, t = {}) {
  const {
    handleOutside: a = !0,
    window: l = Je
  } = t, { x: o, y: n, sourceType: r } = zi(t), s = H(e ?? (l == null ? void 0 : l.document.body)), f = H(0), m = H(0), B = H(0), h = H(0), v = H(0), w = H(0), g = H(!0);
  let k = () => {
  };
  return l && (k = ce([s, o, n], () => {
    const y = ut(s);
    if (!y)
      return;
    const {
      left: $,
      top: b,
      width: _,
      height: V
    } = y.getBoundingClientRect();
    B.value = $ + l.pageXOffset, h.value = b + l.pageYOffset, v.value = V, w.value = _;
    const T = o.value - B.value, S = n.value - h.value;
    g.value = _ === 0 || V === 0 || T < 0 || S < 0 || T > _ || S > V, (a || !g.value) && (f.value = T, m.value = S);
  }, { immediate: !0 }), we(document, "mouseleave", () => {
    g.value = !0;
  })), {
    x: o,
    y: n,
    sourceType: r,
    elementX: f,
    elementY: m,
    elementPositionX: B,
    elementPositionY: h,
    elementHeight: v,
    elementWidth: w,
    isOutside: g,
    stop: k
  };
}
var rt;
(function(e) {
  e.UP = "UP", e.RIGHT = "RIGHT", e.DOWN = "DOWN", e.LEFT = "LEFT", e.NONE = "NONE";
})(rt || (rt = {}));
function Ri(e, t = {}) {
  const {
    threshold: a = 50,
    onSwipe: l,
    onSwipeEnd: o,
    onSwipeStart: n,
    passive: r = !0,
    window: s = Je
  } = t, f = ct({ x: 0, y: 0 }), m = ct({ x: 0, y: 0 }), B = d(() => f.x - m.x), h = d(() => f.y - m.y), { max: v, abs: w } = Math, g = d(() => v(w(B.value), w(h.value)) >= a), k = H(!1), y = d(() => g.value ? w(B.value) > w(h.value) ? B.value > 0 ? rt.LEFT : rt.RIGHT : h.value > 0 ? rt.UP : rt.DOWN : rt.NONE), $ = (C) => [C.touches[0].clientX, C.touches[0].clientY], b = (C, F) => {
    f.x = C, f.y = F;
  }, _ = (C, F) => {
    m.x = C, m.y = F;
  };
  let V;
  const T = Hi(s == null ? void 0 : s.document);
  r ? V = T ? { passive: !0 } : { capture: !1 } : V = T ? { passive: !1, capture: !0 } : { capture: !0 };
  const S = (C) => {
    k.value && (o == null || o(C, y.value)), k.value = !1;
  }, O = [
    we(e, "touchstart", (C) => {
      V.capture && !V.passive && C.preventDefault();
      const [F, P] = $(C);
      b(F, P), _(F, P), n == null || n(C);
    }, V),
    we(e, "touchmove", (C) => {
      const [F, P] = $(C);
      _(F, P), !k.value && g.value && (k.value = !0), k.value && (l == null || l(C));
    }, V),
    we(e, "touchend", S, V),
    we(e, "touchcancel", S, V)
  ];
  return {
    isPassiveEventSupported: T,
    isSwiping: k,
    direction: y,
    coordsStart: f,
    coordsEnd: m,
    lengthX: B,
    lengthY: h,
    stop: () => O.forEach((C) => C())
  };
}
function Hi(e) {
  if (!e)
    return !1;
  let t = !1;
  const a = {
    get passive() {
      return t = !0, !1;
    }
  };
  return e.addEventListener("x", Qt, a), e.removeEventListener("x", Qt), t;
}
var Mi = Object.defineProperty, xl = Object.getOwnPropertySymbols, Di = Object.prototype.hasOwnProperty, ji = Object.prototype.propertyIsEnumerable, Al = (e, t, a) => t in e ? Mi(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a, qi = (e, t) => {
  for (var a in t || (t = {}))
    Di.call(t, a) && Al(e, a, t[a]);
  if (xl)
    for (var a of xl(t))
      ji.call(t, a) && Al(e, a, t[a]);
  return e;
};
const Gi = {
  easeInSine: [0.12, 0, 0.39, 0],
  easeOutSine: [0.61, 1, 0.88, 1],
  easeInOutSine: [0.37, 0, 0.63, 1],
  easeInQuad: [0.11, 0, 0.5, 0],
  easeOutQuad: [0.5, 1, 0.89, 1],
  easeInOutQuad: [0.45, 0, 0.55, 1],
  easeInCubic: [0.32, 0, 0.67, 0],
  easeOutCubic: [0.33, 1, 0.68, 1],
  easeInOutCubic: [0.65, 0, 0.35, 1],
  easeInQuart: [0.5, 0, 0.75, 0],
  easeOutQuart: [0.25, 1, 0.5, 1],
  easeInOutQuart: [0.76, 0, 0.24, 1],
  easeInQuint: [0.64, 0, 0.78, 0],
  easeOutQuint: [0.22, 1, 0.36, 1],
  easeInOutQuint: [0.83, 0, 0.17, 1],
  easeInExpo: [0.7, 0, 0.84, 0],
  easeOutExpo: [0.16, 1, 0.3, 1],
  easeInOutExpo: [0.87, 0, 0.13, 1],
  easeInCirc: [0.55, 0, 1, 0.45],
  easeOutCirc: [0, 0.55, 0.45, 1],
  easeInOutCirc: [0.85, 0, 0.15, 1],
  easeInBack: [0.36, 0, 0.66, -0.56],
  easeOutBack: [0.34, 1.56, 0.64, 1],
  easeInOutBack: [0.68, -0.6, 0.32, 1.6]
};
qi({
  linear: li
}, Gi);
function Te(e, t, a, l = {}) {
  var o, n, r;
  const {
    clone: s = !1,
    passive: f = !1,
    eventName: m,
    deep: B = !1,
    defaultValue: h
  } = l, v = Fa(), w = a || (v == null ? void 0 : v.emit) || ((o = v == null ? void 0 : v.$emit) == null ? void 0 : o.bind(v)) || ((r = (n = v == null ? void 0 : v.proxy) == null ? void 0 : n.$emit) == null ? void 0 : r.bind(v == null ? void 0 : v.proxy));
  let g = m;
  t || (t = "modelValue"), g = m || g || `update:${t.toString()}`;
  const k = ($) => s ? Ga(s) ? s($) : hi($) : $, y = () => Zs(e[t]) ? k(e[t]) : h;
  if (f) {
    const $ = y(), b = H($);
    return ce(() => e[t], (_) => b.value = k(_)), ce(b, (_) => {
      (_ !== e[t] || B) && w(g, _);
    }, { deep: B }), b;
  } else
    return d({
      get() {
        return y();
      },
      set($) {
        w(g, $);
      }
    });
}
const zt = (e) => Mo(() => e.value ? `justify-content-${e.value}` : "");
function c(e) {
  return Mo(
    () => e.value === void 0 || e.value === null ? e.value : so(e.value)
  );
}
const Yo = {
  items: ct([]),
  reset() {
    this.items = ct([]);
  }
}, Zo = (e) => {
  e.provide($o, Yo);
}, Qo = () => Pe($o, null) ?? Yo, Wi = (e = {}) => {
  const t = "data-bs-theme", a = "body";
  return Jo({
    attribute: t,
    selector: a,
    storageKey: e.persist === !0 ? `bv-color-${e.attribute ?? t}-${e.selector ?? a}` : null,
    ...e
  });
}, Ui = (e, t = H(1e3), a = {}) => {
  const l = H(!1), o = H(0), n = H(Se(e)), r = H(Se(t)), s = d(() => Math.ceil(n.value / r.value)), f = d(
    () => h.value || l.value ? Math.round(n.value - o.value * r.value) : 0
  ), { pause: m, resume: B, isActive: h } = qo(
    () => o.value = o.value + 1,
    t,
    a
  ), v = () => {
    l.value = !1, o.value = 0, B();
  }, w = () => {
    l.value = !1, o.value = s.value;
  };
  je(() => {
    const y = Se(e), $ = n.value;
    y !== $ && (n.value = y, w(), v());
  }), je(() => {
    const y = Se(t), $ = r.value;
    y !== $ && (r.value = y, w(), v());
  }), je(() => {
    o.value > s.value && (o.value = s.value), o.value === s.value && m();
  });
  const g = () => {
    h.value !== !1 && (l.value = !0, m());
  }, k = () => {
    o.value !== s.value && (l.value = !1, B());
  };
  return {
    isActive: ke(h),
    isPaused: ke(l),
    restart: v,
    stop: w,
    pause: g,
    resume: k,
    value: f
  };
}, en = (e) => {
  const t = H(Se(e));
  return je(() => t.value = Se(e)), d(() => ({
    "form-check": t.value.plain === !1 && t.value.button === !1,
    "form-check-inline": t.value.inline === !0,
    "form-switch": t.value.switch === !0,
    [`form-control-${t.value.size}`]: t.value.size !== void 0 && t.value.size !== "md" && t.value.button === !1
  }));
}, tn = (e) => {
  const t = H(Se(e));
  return je(() => t.value = Se(e)), d(() => ({
    "form-check-input": t.value.plain === !1 && t.value.button === !1,
    "is-valid": t.value.state === !0,
    "is-invalid": t.value.state === !1,
    "btn-check": t.value.button === !0
  }));
}, an = (e) => {
  const t = H(Se(e));
  return je(() => t.value = Se(e)), d(() => ({
    "form-check-label": t.value.plain === !1 && t.value.button === !1,
    btn: t.value.button === !0,
    [`btn-${t.value.buttonVariant}`]: t.value.button === !0 && t.value.buttonVariant !== void 0,
    [`btn-${t.value.size}`]: t.value.button && t.value.size && t.value.size !== "md"
  }));
}, ln = (e) => {
  const t = H(Se(e));
  return je(() => t.value = Se(e)), d(() => ({
    "aria-invalid": ua(t.value.ariaInvalid, t.value.state),
    "aria-required": t.value.required === !0 ? !0 : void 0
  }));
}, on = (e) => {
  const t = H(Se(e));
  return je(() => t.value = Se(e)), d(() => ({
    "was-validated": t.value.validated === !0,
    "btn-group": t.value.buttons === !0 && t.value.stacked === !1,
    "btn-group-vertical": t.value.stacked === !0 && t.value.buttons === !0,
    [`btn-group-${t.value.size}`]: t.value.size !== void 0
  }));
}, nn = {
  ariaInvalid: {
    type: [Boolean, String],
    default: void 0
  },
  autocomplete: { type: String, required: !1 },
  autofocus: { type: Boolean, default: !1 },
  disabled: { type: Boolean, default: !1 },
  form: { type: String, required: !1 },
  formatter: { type: Function, required: !1 },
  id: { type: String, required: !1 },
  lazy: { type: Boolean, default: !1 },
  lazyFormatter: { type: Boolean, default: !1 },
  list: { type: String, required: !1 },
  modelValue: { type: [String, Number], default: "" },
  name: { type: String, required: !1 },
  number: { type: Boolean, default: !1 },
  placeholder: { type: String, required: !1 },
  plaintext: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  required: { type: Boolean, default: !1 },
  size: { type: String, required: !1 },
  state: { type: Boolean, default: null },
  trim: { type: Boolean, default: !1 }
}, sn = (e, t) => {
  const a = H();
  let l = null, o = !0;
  const n = Ce(u(e, "id"), "input"), r = c(u(e, "state")), s = (y, $, b = !1) => (y = String(y), typeof e.formatter == "function" && (!e.lazyFormatter || b) ? (o = !1, e.formatter(y, $)) : y), f = (y) => e.trim ? y.trim() : e.number ? Number.parseFloat(y) : y, m = () => {
    var y;
    e.autofocus && ((y = a.value) == null || y.focus());
  };
  Ye(() => {
    a.value && (a.value.value = e.modelValue), _e(() => {
      m();
    });
  }), qn(() => {
    _e(() => {
    });
  });
  const B = d(
    () => ua(e.ariaInvalid, r.value)
  ), h = (y) => {
    const { value: $ } = y.target, b = s($, y);
    if (b === !1 || y.defaultPrevented) {
      y.preventDefault();
      return;
    }
    if (e.lazy)
      return;
    const _ = f(b);
    e.modelValue !== _ && (l = $, t("update:modelValue", _)), t("input", b);
  }, v = (y) => {
    const { value: $ } = y.target, b = s($, y);
    if (b === !1 || y.defaultPrevented) {
      y.preventDefault();
      return;
    }
    if (!e.lazy)
      return;
    l = $, t("update:modelValue", b);
    const _ = f(b);
    e.modelValue !== _ && t("change", b);
  }, w = (y) => {
    if (t("blur", y), !e.lazy && !e.lazyFormatter)
      return;
    const { value: $ } = y.target, b = s($, y, !0);
    l = $, t("update:modelValue", b);
  }, g = () => {
    var y;
    e.disabled || (y = a.value) == null || y.focus();
  }, k = () => {
    var y;
    e.disabled || (y = a.value) == null || y.blur();
  };
  return ce(
    () => e.modelValue,
    (y) => {
      a.value && (a.value.value = l && o ? l : y, l = null, o = !0);
    }
  ), {
    input: a,
    computedId: n,
    computedAriaInvalid: B,
    onInput: h,
    onChange: v,
    onBlur: w,
    focus: g,
    blur: k
  };
}, bt = (e, t) => {
  if (!e)
    return e;
  if (t in e)
    return e[t];
  const a = t.split(".");
  return bt(e[a[0]], a.splice(1).join("."));
}, pa = (e, t = null, a, l) => {
  if (Object.prototype.toString.call(e) === "[object Object]") {
    const o = bt(e, l.valueField), n = bt(e, l.textField), r = bt(e, l.htmlField), s = bt(e, l.disabledField), f = e[l.optionsField] || null;
    return f !== null ? {
      label: String(bt(e, l.labelField) || n),
      options: Wa(f, a, l)
    } : {
      value: typeof o > "u" ? t || n : o,
      text: String(typeof n > "u" ? t : n),
      html: r,
      disabled: !!s
    };
  }
  return {
    value: t || e,
    text: String(e),
    disabled: !1
  };
}, Wa = (e, t, a) => Array.isArray(e) ? e.map((l) => pa(l, null, t, a)) : Object.prototype.toString.call(e) === "[object Object]" ? (console.warn(
  `[BootstrapVue warn]: ${t} - Setting prop "options" to an object is deprecated. Use the array format instead.`
), Object.keys(e).map((l) => {
  const o = e[l];
  switch (typeof o) {
    case "object":
      return pa(o.text, String(o.value), t, a);
    default:
      return pa(o, String(l), t, a);
  }
})) : [], Ce = (e, t) => d(() => (e == null ? void 0 : e.value) || at(t)), Ki = ["id"], Xi = ["innerHTML"], Ji = ["innerHTML"], Yi = ["id"], Zi = ["innerHTML"], Qi = ["innerHTML"], er = {
  inheritAttrs: !1
}, Ua = /* @__PURE__ */ N({
  ...er,
  __name: "BPopover",
  props: {
    modelValue: { default: !1 },
    container: { default: null },
    target: { type: [Function, String, null], default: null },
    reference: { type: [Function, String, null], default: null },
    content: { default: void 0 },
    id: { default: void 0 },
    title: { default: void 0 },
    delay: { default: () => ({ show: 100, hide: 300 }) },
    click: { default: !1 },
    manual: { default: !1 },
    variant: { default: void 0 },
    offset: { default: null },
    customClass: { default: "" },
    placement: { default: "top" },
    strategy: { default: "absolute" },
    floatingMiddleware: { default: void 0 },
    noFlip: { default: !1 },
    noShift: { default: !1 },
    noFade: { default: !1 },
    noAutoClose: { default: !1 },
    hide: { default: !0 },
    realtime: { default: !1 },
    inline: { default: !1 },
    tooltip: { default: !1 },
    html: { default: !1 }
  },
  emits: ["show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = c(u(a, "modelValue")), o = H(l.value);
    je(() => {
      t("update:modelValue", o.value);
    }), ce(l, () => {
      l.value !== o.value && (l.value ? ee() : re(new Event("update:modelValue")));
    });
    const n = Ce(u(a, "id"), "popover"), r = c(u(a, "click")), s = c(u(a, "manual")), f = c(u(a, "noShift")), m = c(u(a, "noFlip")), B = c(u(a, "noFade")), h = c(u(a, "noAutoClose")), v = c(u(a, "hide")), w = c(u(a, "realtime")), g = c(u(a, "inline")), k = c(u(a, "tooltip")), y = c(u(a, "html")), $ = H(!1), b = H(null), _ = H(null), V = H(null), T = H(null), S = H(null), O = (U) => {
      if (typeof U == "string" || U instanceof HTMLElement)
        return U;
      if (typeof U == "function")
        return U().$el ? U().$el : U();
      if (typeof U < "u")
        return U.$el;
    }, I = (U) => {
      if (U) {
        if (typeof U == "string") {
          const ie = document.getElementById(U);
          return ie || void 0;
        }
        return U;
      }
    }, C = d(
      () => a.title ? yt(a.title, ht) : ""
    ), F = d(
      () => a.content ? yt(a.content, ht) : ""
    ), P = d(() => {
      if (a.floatingMiddleware !== void 0)
        return a.floatingMiddleware;
      const U = a.offset ? a.offset : k.value ? 0 : 10, ie = [Oo(U)];
      return m.value === !1 && ie.push(Vo()), f.value === !1 && ie.push(Po()), v.value === !0 && ie.push(Os({ padding: 10 })), g.value === !0 && ie.push(Ps()), ie.push(Rs({ element: V, padding: 10 })), ie;
    }), W = d(() => a.placement), { x: j, y: te, strategy: X, middlewareData: q, placement: ae, update: me } = Ho(_, b, {
      placement: W,
      middleware: P,
      strategy: a.strategy,
      whileElementsMounted: (...U) => Ns(...U, { animationFrame: w.value })
    }), pe = H({ position: "absolute" });
    ce(q, () => {
      var U;
      if (v.value === !0 && ((U = q.value.hide) != null && U.referenceHidden ? $.value = !0 : $.value = !1), q.value.arrow) {
        const { x: ie, y: Re } = q.value.arrow;
        pe.value = {
          position: "absolute",
          top: Re ? `${Re}px` : "",
          left: ie ? `${ie}px` : ""
        };
      }
    });
    const be = d(() => {
      const U = k.value ? "tooltip" : "popover";
      return [
        U,
        `b-${U}`,
        {
          [`b-${U}-${a.variant}`]: a.variant !== void 0,
          show: o.value && !$.value,
          ["pe-none"]: !o.value,
          fade: !B.value,
          ["d-none"]: !o.value && B.value,
          [`${a.customClass}`]: a.customClass !== void 0,
          [`bs-${U}-${ar(ae.value)}`]: ae.value !== void 0
        }
      ];
    }), { isOutside: ne } = Tl(b), { isOutside: ve } = Tl(T), L = (U) => {
      const ie = U ?? new Event("click");
      o.value ? re(ie) : ee();
    }, z = (U, ie = {}) => new Ft(U, {
      cancelable: !1,
      target: b.value || null,
      relatedTarget: null,
      trigger: null,
      ...ie,
      componentId: n.value
    }), ee = () => {
      var ie;
      const U = z("show", { cancelable: !0 });
      if (t("show", U), U.defaultPrevented) {
        t("show-prevented");
        return;
      }
      setTimeout(
        () => {
          me(), o.value = !0, _e(() => {
            t("shown", z("shown"));
          });
        },
        typeof a.delay == "number" ? a.delay : ((ie = a.delay) == null ? void 0 : ie.show) || 0
      );
    }, re = (U) => {
      var Ie;
      const ie = z("hide", { cancelable: !0 });
      if (t("hide", ie), ie.defaultPrevented) {
        t("hide-prevented");
        return;
      }
      const Re = typeof a.delay == "number" ? a.delay : ((Ie = a.delay) == null ? void 0 : Ie.hide) || 100;
      setTimeout(() => {
        var E;
        (U == null ? void 0 : U.type) === "click" || ne.value && ve.value && !((E = b.value) != null && E.contains(document == null ? void 0 : document.activeElement)) ? (o.value = !1, _e(() => {
          t("hidden", z("hidden"));
        })) : setTimeout(() => {
          re(U);
        }, Re);
      }, Re);
    }, he = () => {
      var U;
      if (a.target) {
        const ie = I(O(a.target));
        ie ? T.value = ie : console.warn("Target element not found", a.target);
      } else
        T.value = (U = S.value) == null ? void 0 : U.nextElementSibling;
      if (a.reference) {
        const ie = I(O(a.reference));
        ie ? _.value = ie : console.warn("Reference element not found", a.reference);
      } else
        _.value = T.value;
      !T.value || s.value || za && (r.value && T.value.addEventListener("click", L), !r.value && T.value.addEventListener("pointerenter", ee), !r.value && T.value.addEventListener("pointerleave", re), !r.value && T.value.addEventListener("focus", ee), !r.value && T.value.addEventListener("blur", re));
    }, Oe = () => {
      T.value && (T.value.removeEventListener("click", L), T.value.removeEventListener("pointerenter", ee), T.value.removeEventListener("pointerleave", re), T.value.removeEventListener("focus", ee), T.value.removeEventListener("blur", re));
    };
    return Uo(
      b,
      () => {
        o.value && r.value && !h.value && !s.value && re(new Event("clickOutside"));
      },
      { ignore: [T] }
    ), ce(
      () => [a.click, a.target, a.reference],
      () => {
        Oe(), he();
      }
    ), Ye(he), to(Oe), (U, ie) => (p(), A(fe, null, [
      K("span", {
        ref_key: "placeholder",
        ref: S
      }, null, 512),
      x(U.$slots, "target", $e(Ae({ show: ee, hide: re, toggle: L, showState: o.value }))),
      e.container ? (p(), M(La, {
        key: 0,
        to: e.container
      }, [
        K("div", Q({ id: e.id }, U.$attrs, {
          ref_key: "element",
          ref: b,
          class: i(be),
          role: "tooltip",
          tabindex: "-1",
          style: {
            position: i(X),
            top: `${i(te) ?? 0}px`,
            left: `${i(j) ?? 0}px`,
            width: "max-content"
          }
        }), [
          K("div", {
            ref_key: "arrow",
            ref: V,
            class: R(`${i(k) ? "tooltip" : "popover"}-arrow`),
            style: Le(pe.value),
            "data-popper-arrow": ""
          }, null, 6),
          e.title || U.$slots.title ? (p(), A(fe, { key: 0 }, [
            i(y) ? (p(), A("div", {
              key: 1,
              class: R(i(k) ? "tooltip-inner" : "popover-header"),
              innerHTML: i(C)
            }, null, 10, Xi)) : (p(), A("div", {
              key: 0,
              class: R(i(k) ? "tooltip-inner" : "popover-header")
            }, [
              x(U.$slots, "title", {}, () => [
                se(Y(e.title), 1)
              ])
            ], 2))
          ], 64)) : Z("", !0),
          i(k) && !U.$slots.title && !e.title || !i(k) ? (p(), A(fe, { key: 1 }, [
            i(y) ? (p(), A("div", {
              key: 1,
              class: R(i(k) ? "tooltip-inner" : "popover-body"),
              innerHTML: i(F)
            }, null, 10, Ji)) : (p(), A("div", {
              key: 0,
              class: R(i(k) ? "tooltip-inner" : "popover-body")
            }, [
              x(U.$slots, "default", {}, () => [
                se(Y(e.content), 1)
              ])
            ], 2))
          ], 64)) : Z("", !0)
        ], 16, Ki)
      ], 8, ["to"])) : (p(), A("div", Q({
        key: 1,
        id: e.id
      }, U.$attrs, {
        ref_key: "element",
        ref: b,
        class: i(be),
        role: "tooltip",
        tabindex: "-1",
        style: {
          position: i(X),
          top: `${i(te) ?? 0}px`,
          left: `${i(j) ?? 0}px`,
          width: "max-content"
        }
      }), [
        K("div", {
          ref_key: "arrow",
          ref: V,
          class: R(`${i(k) ? "tooltip" : "popover"}-arrow`),
          style: Le(pe.value),
          "data-popper-arrow": ""
        }, null, 6),
        e.title || U.$slots.title ? (p(), A(fe, { key: 0 }, [
          i(y) ? (p(), A("div", {
            key: 1,
            class: R(i(k) ? "tooltip-inner" : "popover-header"),
            innerHTML: i(C)
          }, null, 10, Zi)) : (p(), A("div", {
            key: 0,
            class: R(i(k) ? "tooltip-inner" : "popover-header")
          }, [
            x(U.$slots, "title", {}, () => [
              se(Y(e.title), 1)
            ])
          ], 2))
        ], 64)) : Z("", !0),
        i(k) && !U.$slots.title && !e.title || !i(k) ? (p(), A(fe, { key: 1 }, [
          i(y) ? (p(), A("div", {
            key: 1,
            class: R(i(k) ? "tooltip-inner" : "popover-body"),
            innerHTML: i(F)
          }, null, 10, Qi)) : (p(), A("div", {
            key: 0,
            class: R(i(k) ? "tooltip-inner" : "popover-body")
          }, [
            x(U.$slots, "default", {}, () => [
              se(Y(e.content), 1)
            ])
          ], 2))
        ], 64)) : Z("", !0)
      ], 16, Yi))
    ], 64));
  }
}), tr = ({
  top: e,
  end: t,
  start: a,
  alignCenter: l,
  alignEnd: o
}) => {
  const n = e ? "top" : a ? "left" : t ? "right" : "bottom", r = o ? "end" : l ? null : "start";
  return `${n}${r ? `-${r}` : ""}`;
}, ar = (e) => {
  const [t] = e.split("-");
  switch (t) {
    case "left":
      return "start";
    case "right":
      return "end";
    default:
      return t;
  }
}, aa = (e, t) => {
  if ((typeof e > "u" || typeof e == "object" && !(e != null && e.title) && !(e != null && e.content)) && !t.getAttribute("title"))
    return console.warn(
      "Review tooltip directive usage. Some uses are not defining a title in root component or a value like `v-b-tooltip='{title: \"my title\"}'` nor `v-b-tooltip=\"'my title'\"` to define a title"
    ), {};
  if ((typeof e > "u" || typeof e == "object" && !(e != null && e.title) && !(e != null && e.content)) && (t.getAttribute("title") || t.getAttribute("data-original-title"))) {
    const a = t.getAttribute("title") ?? t.getAttribute("data-original-title");
    if (a && a !== "")
      return t.removeAttribute("title"), t.setAttribute("data-original-title", a), {
        content: yt(a, ht)
      };
  }
  return typeof e == "string" ? {
    content: yt(e, ht)
  } : {
    title: e != null && e.title ? yt(e == null ? void 0 : e.title, ht) : void 0,
    content: e != null && e.content ? yt(e == null ? void 0 : e.content, ht) : void 0
  };
}, la = (e, t) => ({
  target: () => t,
  modelValue: e.modifiers.show,
  inline: e.modifiers.inline,
  click: e.modifiers.click,
  realtime: e.modifiers.realtime,
  placement: e.modifiers.left ? "left" : e.modifiers.right ? "right" : e.modifiers.bottom ? "bottom" : e.modifiers.top ? "top" : void 0,
  html: !0,
  ...typeof e.value == "object" ? e.value : {},
  title: null,
  content: null
}), rn = (e, t) => {
  var l;
  const a = document.createElement("span");
  t.modifiers.body ? document.body.appendChild(a) : t.modifiers.child ? e.appendChild(a) : (l = e.parentNode) == null || l.insertBefore(a, e.nextSibling), e.$__app = Gn({ render: () => {
    var o;
    return de(Ua, { ...(o = e.$__state) == null ? void 0 : o.value });
  } }), e.$__app.mount(a), e.$__element = a;
}, un = (e) => {
  var a;
  const t = e.$__element;
  (a = e.$__app) == null || a.unmount(), delete e.$__app, delete e.$__state, setTimeout(() => {
    t == null || t.remove();
  }, 0), delete e.$__element;
}, lr = ["id"], or = /* @__PURE__ */ N({
  __name: "BAccordion",
  props: {
    flush: { default: !1 },
    free: { default: !1 },
    id: { default: void 0 },
    modelValue: null
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = Te(a, "modelValue", t, { passive: !0 }), o = Ce(u(a, "id"), "accordion"), n = c(u(a, "flush")), r = c(u(a, "free")), s = d(() => ({
      "accordion-flush": n.value
    }));
    return Ze(So, {
      openItem: ke(l),
      free: r,
      setOpenItem: (f) => {
        l.value = f;
      }
    }), (f, m) => (p(), A("div", {
      id: i(o),
      class: R(["accordion", i(s)])
    }, [
      x(f.$slots, "default")
    ], 10, lr));
  }
}), nr = {
  inheritAttrs: !1
}, dn = /* @__PURE__ */ N({
  ...nr,
  __name: "BCollapse",
  props: {
    id: { default: void 0 },
    modelValue: { default: !1 },
    tag: { default: "div" },
    toggle: { default: !1 },
    horizontal: { default: !1 },
    visible: { default: !1 },
    isNav: { default: !1 }
  },
  emits: ["show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "update:modelValue"],
  setup(e, { expose: t, emit: a }) {
    const l = e, o = (S, O = {}) => new Ft(S, {
      cancelable: !1,
      target: v.value || null,
      relatedTarget: null,
      trigger: null,
      ...O,
      componentId: h.value
    }), n = Te(l, "modelValue", a, { passive: !0 }), r = c(n), s = c(u(l, "toggle")), f = c(u(l, "horizontal")), m = c(u(l, "isNav")), B = c(u(l, "visible")), h = Ce(u(l, "id"), "collapse"), v = H(null), w = H(!1), g = H(r.value), k = d(() => ({
      show: g.value,
      "navbar-collapse": m.value,
      collapsing: w.value,
      closing: g.value && !r.value,
      "collapse-horizontal": f.value
    })), y = () => n.value = !1, $ = () => n.value = !0, b = () => n.value = !r.value, _ = () => {
      g.value = !0, w.value = !0;
      const S = o("show", { cancelable: !0 });
      if (a("show", S), S.defaultPrevented) {
        a("show-prevented");
        return;
      }
      _e(() => {
        v.value !== null && (f.value ? v.value.style.width = `${v.value.scrollWidth}px` : v.value.style.height = `${v.value.scrollHeight}px`, setTimeout(() => {
          w.value = !1, a("shown", o("shown")), v.value !== null && (v.value.style.height = "", v.value.style.width = "");
        }, T(v.value)));
      });
    }, V = () => {
      const S = o("hide", { cancelable: !0 });
      if (a("hide", S), S.defaultPrevented) {
        a("hide-prevented");
        return;
      }
      v.value !== null && (f.value ? v.value.style.width = `${v.value.scrollWidth}px` : v.value.style.height = `${v.value.scrollHeight}px`, v.value.offsetHeight, w.value = !0, _e(() => {
        v.value !== null && (v.value.style.height = "", v.value.style.width = "", setTimeout(() => {
          g.value = !1, w.value = !1, a("hidden", o("hidden"));
        }, T(v.value)));
      }));
    };
    ce([n, g], () => {
      if (r.value === !0) {
        if (g.value)
          return;
        _();
        return;
      }
      V();
    });
    const T = (S) => {
      const O = window.getComputedStyle(S), I = O.transitionDelay.split(",")[0] || "", C = O.transitionDuration.split(",")[0] || "", F = Number(I.slice(0, -1)) * 1e3, P = Number(C.slice(0, -1)) * 1e3;
      return F + P;
    };
    return Ye(() => {
      v.value !== null && !r.value && s.value && _e(() => {
        n.value = !0;
      });
    }), B.value && (n.value = !0, g.value = !0), ce(B, (S) => {
      S ? $() : y();
    }), we(v, "bv-toggle", () => {
      n.value = !r.value;
    }), t({
      close: y,
      open: $,
      toggle: b,
      visible: ke(g),
      isNav: m
    }), Ze(Ma, {
      id: h,
      close: y,
      open: $,
      toggle: b,
      visible: ke(g),
      isNav: m
    }), (S, O) => (p(), A(fe, null, [
      x(S.$slots, "header", $e(Ae({ visible: i(r), toggle: b, open: $, close: y, id: i(h) }))),
      (p(), M(le(e.tag), Q({
        id: i(h),
        ref_key: "element",
        ref: v,
        class: ["collapse", i(k)],
        "is-nav": i(m)
      }, S.$attrs), {
        default: D(() => [
          x(S.$slots, "default", $e(Ae({ visible: i(r), toggle: b, open: $, close: y })))
        ]),
        _: 3
      }, 16, ["id", "class", "is-nav"])),
      x(S.$slots, "footer", $e(Ae({ visible: i(r), toggle: b, open: $, close: y, id: i(h) })))
    ], 64));
  }
}), sr = { class: "accordion-item" }, ir = ["aria-expanded", "aria-controls", "onClick"], rr = { class: "accordion-body" }, ur = {
  inheritAttrs: !1
}, dr = /* @__PURE__ */ N({
  ...ur,
  __name: "BAccordionItem",
  props: {
    id: { default: void 0 },
    title: { default: void 0 },
    modelValue: { default: !1 },
    headerTag: { default: "h2" },
    tag: null,
    toggle: null,
    horizontal: null,
    visible: { default: !1 },
    isNav: null
  },
  emits: ["show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = {
      show: (s) => t("show", s),
      shown: (s) => t("shown", s),
      hide: (s) => t("hide", s),
      hidden: (s) => t("hidden", s),
      "hide-prevented": () => t("hide-prevented"),
      "show-prevented": () => t("show-prevented")
    }, o = Te(a, "modelValue", t, { passive: !0 }), n = Pe(So, null), r = Ce(u(a, "id"), "accordion_item");
    return Ye(() => {
      o.value && !(n != null && n.free.value) && (n == null || n.setOpenItem(r.value)), !o.value && (n == null ? void 0 : n.openItem.value) === r.value && (o.value = !0);
    }), ce(
      () => n == null ? void 0 : n.openItem.value,
      () => o.value = (n == null ? void 0 : n.openItem.value) === r.value && !(n != null && n.free.value)
    ), ce(o, () => {
      o.value && !(n != null && n.free.value) && (n == null || n.setOpenItem(r.value));
    }), (s, f) => (p(), A("div", sr, [
      ye(dn, Q({
        id: i(r),
        modelValue: i(o),
        "onUpdate:modelValue": f[0] || (f[0] = (m) => Ct(o) ? o.value = m : null),
        class: "accordion-collapse"
      }, s.$attrs, {
        "aria-labelledby": `heading${i(r)}`,
        tag: e.tag,
        toggle: e.toggle,
        horizontal: e.horizontal,
        visible: e.visible,
        "is-nav": e.isNav
      }, Wn(l)), {
        header: D(({ visible: m, toggle: B }) => [
          (p(), M(le(e.headerTag), {
            id: `heading${i(r)}`,
            class: "accordion-header"
          }, {
            default: D(() => [
              K("button", {
                class: R(["accordion-button", { collapsed: !m }]),
                type: "button",
                "aria-expanded": m ? "true" : "false",
                "aria-controls": i(r),
                onClick: B
              }, [
                x(s.$slots, "title", {}, () => [
                  se(Y(e.title), 1)
                ])
              ], 10, ir)
            ]),
            _: 2
          }, 1032, ["id"]))
        ]),
        default: D(() => [
          K("div", rr, [
            x(s.$slots, "default")
          ])
        ]),
        _: 3
      }, 16, ["id", "modelValue", "aria-labelledby", "tag", "toggle", "horizontal", "visible", "is-nav"])
    ]));
  }
}), _t = /* @__PURE__ */ N({
  __name: "BTransition",
  props: {
    appear: { default: !1 },
    mode: { default: void 0 },
    noFade: { default: !1 },
    transProps: { default: void 0 }
  },
  setup(e) {
    const t = e, a = c(u(t, "appear")), l = c(u(t, "noFade")), o = d(() => {
      const s = {
        name: "",
        enterActiveClass: "",
        enterToClass: "",
        leaveActiveClass: "",
        leaveToClass: "showing",
        enterFromClass: "showing",
        leaveFromClass: ""
      }, f = {
        ...s,
        enterActiveClass: "fade showing",
        leaveActiveClass: "fade showing"
      };
      return l.value ? s : f;
    }), n = d(() => ({ mode: t.mode, css: !0, ...o.value })), r = d(
      () => t.transProps !== void 0 ? {
        // Order matters here since the props.transProps would get overwritten if it came first
        // But the goal of props.transProps is to overwrite base properties
        ...n.value,
        ...t.transProps
      } : a.value ? {
        ...n.value,
        appear: !0,
        appearActiveClass: o.value.enterActiveClass,
        appearToClass: o.value.enterToClass
      } : n.value
    );
    return (s, f) => (p(), M(ao, $e(Ae(i(r))), {
      default: D(() => [
        x(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), cr = ["type", "disabled", "aria-label"], Tt = /* @__PURE__ */ N({
  __name: "BCloseButton",
  props: {
    ariaLabel: { default: "Close" },
    disabled: { default: !1 },
    white: { default: !1 },
    type: { default: "button" }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = c(u(a, "disabled")), o = c(u(a, "white")), n = d(() => ({
      "btn-close-white": o.value
    }));
    return (r, s) => (p(), A("button", {
      type: e.type,
      class: R(["btn-close", i(n)]),
      disabled: i(l),
      "aria-label": e.ariaLabel,
      onClick: s[0] || (s[0] = (f) => t("click", f))
    }, null, 10, cr));
  }
}), fr = {
  key: 0,
  class: "visually-hidden"
}, fa = /* @__PURE__ */ N({
  __name: "BSpinner",
  props: {
    label: { default: void 0 },
    role: { default: "status" },
    small: { default: !1 },
    tag: { default: "span" },
    type: { default: "border" },
    variant: { default: void 0 }
  },
  setup(e) {
    const t = e, a = Ee(), l = c(u(t, "small")), o = d(() => ({
      "spinner-border": t.type === "border",
      "spinner-border-sm": t.type === "border" && l.value,
      "spinner-grow": t.type === "grow",
      "spinner-grow-sm": t.type === "grow" && l.value,
      [`text-${t.variant}`]: t.variant !== void 0
    })), n = d(() => !Ve(a.label));
    return (r, s) => (p(), M(le(e.tag), {
      class: R(i(o)),
      role: e.label || i(n) ? e.role : null,
      "aria-hidden": e.label || i(n) ? null : !0
    }, {
      default: D(() => [
        e.label || i(n) ? (p(), A("span", fr, [
          x(r.$slots, "label", {}, () => [
            se(Y(e.label), 1)
          ])
        ])) : Z("", !0)
      ]),
      _: 3
    }, 8, ["class", "role", "aria-hidden"]));
  }
}), mt = {
  active: { type: [Boolean, String, void 0], default: void 0 },
  activeClass: { type: String, default: "router-link-active" },
  append: { type: [Boolean, String], default: !1 },
  disabled: { type: [Boolean, String], default: !1 },
  event: { type: [String, Array], default: "click" },
  href: { type: String },
  // noPrefetch: {type: [Boolean, String] as PropType<Booleanish>, default: false},
  // prefetch: {type: [Boolean, String] as PropType<Booleanish>, default: null},
  rel: { type: String, default: null },
  replace: { type: [Boolean, String], default: !1 },
  routerComponentName: { type: String, default: "router-link" },
  routerTag: { type: String, default: "a" },
  target: { type: String, default: "_self" },
  to: { type: [String, Object], default: null }
}, vr = N({
  // TODO this component will likely have an issue with inheritAttrs
  props: mt,
  emits: ["click"],
  setup(e, { emit: t, attrs: a }) {
    const l = c(u(e, "active")), o = c(u(e, "append")), n = c(u(e, "disabled")), r = c(u(e, "replace")), s = Pe(Ma, null), f = () => {
      var y;
      (y = s == null ? void 0 : s.close) == null || y.call(s);
    }, m = Fa(), B = H(null), h = d(() => {
      const y = e.routerComponentName.split("-").map((b) => b.charAt(0).toUpperCase() + b.slice(1)).join("");
      return !((m == null ? void 0 : m.appContext.app.component(y)) !== void 0) || n.value || !e.to ? "a" : e.routerComponentName;
    }), v = d(() => {
      const y = "#";
      if (e.href)
        return e.href;
      if (typeof e.to == "string")
        return e.to || y;
      const $ = e.to;
      if (Object.prototype.toString.call($) === "[object Object]" && ($.path || $.query || $.hash)) {
        const b = $.path || "", _ = $.query ? `?${Object.keys($.query).map((T) => `${T}=${$.query[T]}`).join("=")}` : "", V = !$.hash || $.hash.charAt(0) === "#" ? $.hash || "" : `#${$.hash}`;
        return `${b}${_}${V}` || y;
      }
      return y;
    }), w = d(() => ({
      to: e.to,
      href: v.value,
      target: e.target,
      rel: e.target === "_blank" && e.rel === null ? "noopener" : e.rel || null,
      tabindex: n.value ? "-1" : typeof a.tabindex > "u" ? null : a.tabindex,
      "aria-disabled": n.value ? !0 : null
    }));
    return {
      computedLinkClasses: d(() => ({
        active: l.value,
        disabled: n.value
      })),
      tag: h,
      routerAttr: w,
      link: B,
      clicked: (y) => {
        var $;
        if (n.value) {
          y.preventDefault(), y.stopImmediatePropagation();
          return;
        }
        ($ = s == null ? void 0 : s.close) == null || $.call(s), t("click", y);
      },
      activeBoolean: l,
      appendBoolean: o,
      disabledBoolean: n,
      replaceBoolean: r,
      closeCollapse: f
    };
  }
}), ze = (e, t) => {
  const a = e.__vccOpts || e;
  for (const [l, o] of t)
    a[l] = o;
  return a;
};
function mr(e, t, a, l, o, n) {
  return e.tag === "router-link" ? (p(), M(le(e.tag), Q({ key: 0 }, e.routerAttr, { custom: "" }), {
    default: D(({ href: r, navigate: s, isActive: f }) => [
      (p(), M(le(e.routerTag), Q({
        ref: "link",
        href: r,
        class: [(e.activeBoolean ?? f) && e.activeClass]
      }, e.$attrs, {
        onClick: (m) => {
          s(m), e.closeCollapse();
        }
      }), {
        default: D(() => [
          x(e.$slots, "default")
        ]),
        _: 2
      }, 1040, ["href", "class", "onClick"]))
    ]),
    _: 3
  }, 16)) : (p(), M(le(e.tag), Q({
    key: 1,
    ref: "link",
    class: e.computedLinkClasses
  }, e.routerAttr, { onClick: e.clicked }), {
    default: D(() => [
      x(e.$slots, "default")
    ]),
    _: 3
  }, 16, ["class", "onClick"]));
}
const Ne = /* @__PURE__ */ ze(vr, [["render", mr]]), pr = N({
  components: { BLink: Ne, BSpinner: fa },
  props: {
    ...mt,
    active: { type: [Boolean, String], default: !1 },
    disabled: { type: [Boolean, String], default: !1 },
    href: { type: String, default: void 0 },
    pill: { type: [Boolean, String], default: !1 },
    pressed: { type: [Boolean, String], default: null },
    rel: { type: String, default: void 0 },
    size: { type: String, default: "md" },
    squared: { type: [Boolean, String], default: !1 },
    tag: { type: String, default: "button" },
    target: { type: String, default: "_self" },
    type: { type: String, default: "button" },
    variant: { type: String, default: "secondary" },
    loading: { type: [Boolean, String], default: !1 },
    loadingMode: { type: String, default: "inline" }
  },
  emits: ["click", "update:pressed"],
  setup(e, { emit: t }) {
    const a = Te(e, "pressed", t), l = c(u(e, "active")), o = c(u(e, "disabled")), n = c(u(e, "pill")), r = c(u(e, "pressed")), s = c(u(e, "squared")), f = c(u(e, "loading")), m = d(() => typeof r.value == "boolean"), B = d(
      () => e.tag === "button" && e.href === void 0 && e.to === null
    ), h = d(() => Et(e)), v = d(() => e.to !== null), w = d(
      () => e.href !== void 0 ? !1 : !B.value
    ), g = d(() => [
      [`btn-${e.variant}`],
      [`btn-${e.size}`],
      {
        active: l.value || r.value,
        "rounded-pill": n.value,
        "rounded-0": s.value,
        disabled: o.value
      }
    ]), k = d(() => ({
      "aria-disabled": w.value ? o.value : null,
      "aria-pressed": m.value ? r.value : null,
      autocomplete: m.value ? "off" : null,
      disabled: B.value ? o.value : null,
      href: e.href,
      rel: h.value ? e.rel : null,
      role: w.value || h.value ? "button" : null,
      target: h.value ? e.target : null,
      type: B.value ? e.type : null,
      to: B.value ? null : e.to,
      append: h.value ? e.append : null,
      activeClass: v.value ? e.activeClass : null,
      event: v.value ? e.event : null,
      replace: v.value ? e.replace : null,
      routerComponentName: v.value ? e.routerComponentName : null,
      routerTag: v.value ? e.routerTag : null
    })), y = d(
      () => v.value ? Ne : e.href ? "a" : e.tag
    );
    return {
      computedClasses: g,
      computedAttrs: k,
      computedTag: y,
      clicked: (b) => {
        if (o.value) {
          b.preventDefault(), b.stopPropagation();
          return;
        }
        t("click", b), m.value && (a.value = !r.value);
      },
      loadingBoolean: f
    };
  }
});
function gr(e, t, a, l, o, n) {
  const r = lo("b-spinner");
  return p(), M(le(e.computedTag), Q({
    class: ["btn", e.computedClasses]
  }, e.computedAttrs, { onClick: e.clicked }), {
    default: D(() => [
      e.loadingBoolean ? (p(), A("div", {
        key: 0,
        class: R(["btn-loading", { "mode-fill": e.loadingMode === "fill", "mode-inline": e.loadingMode === "inline" }])
      }, [
        x(e.$slots, "loading", {}, () => [
          ye(r, {
            class: "btn-spinner",
            small: e.size !== "lg"
          }, null, 8, ["small"])
        ])
      ], 2)) : Z("", !0),
      K("div", {
        class: R(["btn-content", { "btn-loading-fill": e.loadingBoolean && e.loadingMode === "fill" }])
      }, [
        x(e.$slots, "default")
      ], 2)
    ]),
    _: 3
  }, 16, ["class", "onClick"]);
}
const kt = /* @__PURE__ */ ze(pr, [["render", gr]]), br = ["onMouseenter"], hr = /* @__PURE__ */ N({
  __name: "BAlert",
  props: {
    noHoverPause: { default: !1 },
    dismissLabel: { default: "Close" },
    dismissible: { default: !1 },
    fade: { default: !1 },
    closeVariant: { default: "secondary" },
    modelValue: { type: [Boolean, Number], default: !1 },
    variant: { default: "info" },
    closeContent: { default: void 0 },
    immediate: { default: !0 },
    interval: { default: 1e3 },
    showOnPause: { default: !0 }
  },
  emits: ["closed", "close-countdown", "update:modelValue"],
  setup(e, { expose: t, emit: a }) {
    const l = e, o = Ee(), n = Te(l, "modelValue", a), r = c(u(l, "dismissible")), s = c(u(l, "fade")), f = c(u(l, "immediate")), m = c(u(l, "showOnPause")), B = c(u(l, "noHoverPause")), h = d(() => !Ve(o.close)), v = d(
      () => typeof n.value == "boolean" ? 0 : n.value
    ), w = d(() => [
      [`alert-${l.variant}`],
      {
        "alert-dismissible": r.value
      }
    ]), {
      isActive: g,
      pause: k,
      restart: y,
      resume: $,
      stop: b,
      isPaused: _,
      value: V
    } = Ui(v, u(l, "interval"), {
      immediate: typeof n.value == "number" && f.value
    }), T = d(
      () => typeof n.value == "boolean" ? n.value : g.value || m.value && _.value
    ), S = d(() => ({
      variant: l.closeVariant,
      type: "button"
    }));
    je(() => a("close-countdown", V.value));
    const O = () => {
      typeof n.value == "boolean" ? n.value = !1 : (n.value = 0, b()), a("closed");
    }, I = () => {
      B.value || k();
    };
    return to(b), t({ pause: k, resume: $, restart: y, stop: b }), (C, F) => (p(), M(_t, {
      "no-fade": !i(s),
      "trans-props": { enterToClass: "show" }
    }, {
      default: D(() => [
        i(T) ? (p(), A("div", {
          key: 0,
          class: R(["alert", i(w)]),
          role: "alert",
          "aria-live": "polite",
          "aria-atomic": "true",
          onMouseenter: ft(I, ["stop"]),
          onMouseleave: F[0] || (F[0] = ft(
            //@ts-ignore
            (...P) => i($) && i($)(...P),
            ["stop"]
          ))
        }, [
          x(C.$slots, "default"),
          i(r) ? (p(), A(fe, { key: 0 }, [
            i(h) || e.closeContent ? (p(), M(kt, Q({ key: 0 }, i(S), { onClick: O }), {
              default: D(() => [
                x(C.$slots, "close", {}, () => [
                  se(Y(e.closeContent), 1)
                ])
              ]),
              _: 3
            }, 16)) : (p(), M(Tt, Q({
              key: 1,
              "aria-label": e.dismissLabel
            }, i(S), { onClick: O }), null, 16, ["aria-label"]))
          ], 64)) : Z("", !0)
        ], 42, br)) : Z("", !0)
      ]),
      _: 3
    }, 8, ["no-fade"]));
  }
}), yr = {
  key: 0,
  class: "b-avatar-custom"
}, Br = {
  key: 1,
  class: "b-avatar-img"
}, $r = ["src", "alt"], Sa = (e) => {
  const t = typeof e == "string" && ro(e) ? At(e, 0) : e;
  return typeof t == "number" ? `${t}px` : t || null;
}, wr = /* @__PURE__ */ N({
  __name: "BAvatar",
  props: {
    alt: { default: "avatar" },
    ariaLabel: { default: void 0 },
    badge: { type: [Boolean, String], default: !1 },
    badgeLeft: { default: !1 },
    badgeOffset: { default: void 0 },
    badgeTop: { default: !1 },
    badgeVariant: { default: "primary" },
    button: { default: !1 },
    buttonType: { default: "button" },
    disabled: { default: !1 },
    icon: { default: void 0 },
    rounded: { type: [Boolean, String], default: "circle" },
    size: { default: void 0 },
    square: { default: !1 },
    src: { default: void 0 },
    text: { default: void 0 },
    textVariant: { default: void 0 },
    variant: { default: "secondary" }
  },
  emits: ["click", "img-error"],
  setup(e, { emit: t }) {
    const a = e, l = Ee(), o = Pe(Co, null), n = ["sm", null, "lg"], r = 0.4, s = r * 0.7, f = c(u(a, "badgeLeft")), m = c(u(a, "badgeTop")), B = c(u(a, "button")), h = c(u(a, "disabled")), v = c(u(a, "square")), w = d(() => !Ve(l.default)), g = d(() => !Ve(l.badge)), k = d(() => !!a.badge || a.badge === "" || g.value), y = d(
      () => (o == null ? void 0 : o.size.value) ?? Sa(a.size)
    ), $ = d(() => (o == null ? void 0 : o.variant.value) ?? a.variant), b = d(() => (o == null ? void 0 : o.rounded.value) ?? a.rounded), _ = d(() => ({
      type: B.value ? a.buttonType : void 0,
      "aria-label": a.ariaLabel || null,
      disabled: h.value || null
    })), V = d(() => [`bg-${a.badgeVariant}`]), T = d(() => a.badge === !0 ? "" : a.badge), S = d(() => [[`text-${te(a.badgeVariant)}`]]), O = d(() => ({
      [`b-avatar-${a.size}`]: !!a.size && n.indexOf(Sa(a.size)) !== -1,
      [`bg-${$.value}`]: !!$.value,
      badge: !B.value && $.value && w.value,
      rounded: b.value === "" || b.value === !0,
      ["rounded-circle"]: !v.value && b.value === "circle",
      ["rounded-0"]: v.value || b.value === "0",
      ["rounded-1"]: !v.value && b.value === "sm",
      ["rounded-3"]: !v.value && b.value === "lg",
      ["rounded-top"]: !v.value && b.value === "top",
      ["rounded-bottom"]: !v.value && b.value === "bottom",
      ["rounded-start"]: !v.value && b.value === "left",
      ["rounded-end"]: !v.value && b.value === "right",
      btn: B.value,
      [`btn-${$.value}`]: B.value ? !!$.value : !1
    })), I = d(() => [
      [`text-${a.textVariant || te($.value)}`]
    ]), C = d(() => {
      const ae = a.badgeOffset || "0px";
      return {
        fontSize: (n.indexOf(y.value || null) === -1 ? `calc(${y.value} * ${s})` : "") || "",
        top: m.value ? ae : "",
        bottom: m.value ? "" : ae,
        left: f.value ? ae : "",
        right: f.value ? "" : ae
      };
    }), F = d(() => {
      const ae = n.indexOf(y.value || null) === -1 ? `calc(${y.value} * ${r})` : null;
      return ae ? { fontSize: ae } : {};
    }), P = d(() => {
      var pe;
      const ae = ((pe = o == null ? void 0 : o.overlapScale) == null ? void 0 : pe.value) || 0, me = y.value && ae ? `calc(${y.value} * -${ae})` : null;
      return me ? { marginLeft: me, marginRight: me } : {};
    }), W = d(() => B.value ? "button" : "span"), j = d(() => ({
      ...P.value,
      width: y.value ?? void 0,
      height: y.value ?? void 0
    })), te = (ae) => ae === "light" || ae === "warning" ? "dark" : "light", X = (ae) => {
      !h.value && B.value && t("click", ae);
    }, q = (ae) => t("img-error", ae);
    return (ae, me) => (p(), M(le(i(W)), Q({
      class: ["b-avatar", i(O)],
      style: i(j)
    }, i(_), { onClick: X }), {
      default: D(() => [
        i(w) ? (p(), A("span", yr, [
          x(ae.$slots, "default")
        ])) : e.src ? (p(), A("span", Br, [
          K("img", {
            src: e.src,
            alt: e.alt,
            onError: q
          }, null, 40, $r)
        ])) : e.text ? (p(), A("span", {
          key: 2,
          class: R(["b-avatar-text", i(I)]),
          style: Le(i(F))
        }, Y(e.text), 7)) : Z("", !0),
        i(k) ? (p(), A("span", {
          key: 3,
          class: R(["b-avatar-badge", i(V)]),
          style: Le(i(C))
        }, [
          i(g) ? x(ae.$slots, "badge", { key: 0 }) : (p(), A("span", {
            key: 1,
            class: R(i(S))
          }, Y(i(T)), 3))
        ], 6)) : Z("", !0)
      ]),
      _: 3
    }, 16, ["class", "style"]));
  }
}), kr = /* @__PURE__ */ N({
  __name: "BAvatarGroup",
  props: {
    overlap: { default: 0.3 },
    rounded: { type: [Boolean, String], default: !1 },
    size: { default: void 0 },
    square: { default: !1 },
    tag: { default: "div" },
    variant: { default: void 0 }
  },
  setup(e) {
    const t = e, a = c(u(t, "square")), l = d(() => Sa(t.size)), o = d(
      () => Math.min(Math.max(r(t.overlap), 0), 1) / 2
    ), n = d(() => {
      const s = l.value ? `calc(${l.value} * ${o.value})` : null;
      return s ? { paddingLeft: s, paddingRight: s } : {};
    }), r = (s) => typeof s == "string" && ro(s) ? At(s, 0) : s || 0;
    return Ze(Co, {
      overlapScale: o,
      size: ke(u(t, "size")),
      square: a,
      rounded: ke(u(t, "rounded")),
      variant: ke(u(t, "variant"))
    }), (s, f) => (p(), M(le(e.tag), {
      class: "b-avatar-group",
      role: "group"
    }, {
      default: D(() => [
        K("div", {
          class: "b-avatar-group-inner",
          style: Le(i(n))
        }, [
          x(s.$slots, "default")
        ], 4)
      ]),
      _: 3
    }));
  }
}), Vl = Lt(mt, ["event", "routerTag"]), Cr = N({
  components: { BLink: Ne },
  props: {
    pill: { type: [Boolean, String], default: !1 },
    tag: { type: String, default: "span" },
    variant: { type: String, default: "secondary" },
    textIndicator: { type: [Boolean, String], default: !1 },
    dotIndicator: { type: [Boolean, String], default: !1 },
    ...Vl
  },
  setup(e) {
    const t = c(u(e, "pill")), a = c(u(e, "textIndicator")), l = c(u(e, "dotIndicator")), o = c(u(e, "active")), n = c(u(e, "disabled")), r = d(() => Et(e)), s = d(
      () => r.value ? Ne : e.tag
    ), f = d(() => [
      [`bg-${e.variant}`],
      {
        active: o.value,
        disabled: n.value,
        "text-dark": ["warning", "info", "light"].includes(e.variant),
        "rounded-pill": t.value,
        "position-absolute top-0 start-100 translate-middle": a.value || l.value,
        "p-2 border border-light rounded-circle": l.value,
        "text-decoration-none": r.value
      }
    ]), m = d(
      () => r.value ? Ha(e, Vl) : {}
    );
    return {
      computedClasses: f,
      computedLinkProps: m,
      computedTag: s
    };
  }
});
function Sr(e, t, a, l, o, n) {
  return p(), M(le(e.computedTag), Q({
    class: ["badge", e.computedClasses]
  }, e.computedLinkProps), {
    default: D(() => [
      x(e.$slots, "default")
    ]),
    _: 3
  }, 16, ["class"]);
}
const _r = /* @__PURE__ */ ze(Cr, [["render", Sr]]), Ol = Lt(mt, ["event", "routerTag"]), Tr = N({
  components: { BLink: Ne },
  props: {
    ...Ol,
    active: { type: [Boolean, String], default: !1 },
    ariaCurrent: { type: String, default: "location" },
    disabled: { type: [Boolean, String], default: !1 },
    text: { type: String, default: void 0 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = c(u(e, "active")), l = c(u(e, "disabled")), o = d(() => ({
      active: a.value
    })), n = d(
      () => a.value ? "span" : Ne
    ), r = d(
      () => a.value ? e.ariaCurrent : void 0
    );
    return {
      computedLinkProps: d(
        () => n.value !== "span" ? Ha(e, Ol) : {}
      ),
      computedClasses: o,
      computedTag: n,
      computedAriaCurrent: r,
      clicked: (m) => {
        if (l.value || a.value) {
          m.preventDefault(), m.stopImmediatePropagation();
          return;
        }
        l.value || t("click", m);
      }
    };
  }
});
function xr(e, t, a, l, o, n) {
  return p(), A("li", {
    class: R(["breadcrumb-item", e.computedClasses])
  }, [
    (p(), M(le(e.computedTag), Q({ "aria-current": e.computedAriaCurrent }, e.computedLinkProps, { onClick: e.clicked }), {
      default: D(() => [
        x(e.$slots, "default", {}, () => [
          se(Y(e.text), 1)
        ])
      ]),
      _: 3
    }, 16, ["aria-current", "onClick"]))
  ], 2);
}
const cn = /* @__PURE__ */ ze(Tr, [["render", xr]]), Ar = { "aria-label": "breadcrumb" }, Vr = { class: "breadcrumb" }, Or = /* @__PURE__ */ N({
  __name: "BBreadcrumb",
  props: {
    items: { default: void 0 }
  },
  setup(e) {
    const t = e, a = Qo(), l = d(() => {
      const o = t.items || (a == null ? void 0 : a.items) || [];
      let n = !1;
      return o.map((s, f) => (typeof s == "string" && (s = { text: s }, f < o.length - 1 && (s.href = "#")), s.active && (n = !0), !s.active && !n && (s.active = f + 1 === o.length), s));
    });
    return (o, n) => (p(), A("nav", Ar, [
      K("ol", Vr, [
        x(o.$slots, "prepend"),
        (p(!0), A(fe, null, Be(i(l), (r, s) => (p(), M(cn, Q({ key: s }, r), {
          default: D(() => [
            se(Y(r.text), 1)
          ]),
          _: 2
        }, 1040))), 128)),
        x(o.$slots, "default"),
        x(o.$slots, "append")
      ])
    ]));
  }
}), Pr = /* @__PURE__ */ N({
  __name: "BButtonGroup",
  props: {
    ariaLabel: { default: "Group" },
    size: { default: void 0 },
    tag: { default: "div" },
    vertical: { default: !1 }
  },
  setup(e) {
    const t = e, a = c(u(t, "vertical")), l = d(() => ({
      "btn-group": !a.value,
      [`btn-group-${t.size}`]: t.size !== void 0,
      "btn-group-vertical": a.value
    }));
    return (o, n) => (p(), M(le(e.tag), {
      class: R(i(l)),
      role: "group",
      "aria-label": e.ariaLabel
    }, {
      default: D(() => [
        x(o.$slots, "default")
      ]),
      _: 3
    }, 8, ["class", "aria-label"]));
  }
}), Er = ["role", "aria-label"], Ir = /* @__PURE__ */ N({
  __name: "BButtonToolbar",
  props: {
    ariaLabel: { default: "Group" },
    justify: { default: !1 },
    role: { default: "toolbar" }
  },
  setup(e) {
    const a = c(u(e, "justify")), l = d(() => ({
      "justify-content-between": a.value
    }));
    return (o, n) => (p(), A("div", {
      class: R([i(l), "btn-toolbar"]),
      role: e.role,
      "aria-label": e.ariaLabel
    }, [
      x(o.$slots, "default")
    ], 10, Er));
  }
}), Ka = /* @__PURE__ */ N({
  __name: "BImg",
  props: {
    alt: { default: void 0 },
    blank: { default: !1 },
    blankColor: { default: "transparent" },
    block: { default: !1 },
    center: { default: !1 },
    fluid: { default: !1 },
    lazy: { default: !1 },
    fluidGrow: { default: !1 },
    height: { default: void 0 },
    start: { default: !1 },
    end: { default: !1 },
    rounded: { type: [Boolean, String], default: !1 },
    sizes: { default: void 0 },
    src: { default: void 0 },
    srcset: { default: void 0 },
    thumbnail: { default: !1 },
    width: { default: void 0 }
  },
  emits: ["load"],
  setup(e, { emit: t }) {
    const a = e, l = '<svg width="%{w}" height="%{h}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 %{w} %{h}" preserveAspectRatio="none"><rect width="100%" height="100%" style="fill:%{f};"></rect></svg>', o = c(u(a, "lazy")), n = c(u(a, "blank")), r = c(u(a, "block")), s = c(u(a, "center")), f = c(u(a, "fluid")), m = c(u(a, "fluidGrow")), B = c(u(a, "start")), h = c(u(a, "end")), v = c(u(a, "thumbnail")), w = d(
      () => typeof a.srcset == "string" ? a.srcset.split(",").filter((T) => T).join(",") : Array.isArray(a.srcset) ? a.srcset.filter((T) => T).join(",") : void 0
    ), g = d(
      () => typeof a.sizes == "string" ? a.sizes.split(",").filter((T) => T).join(",") : Array.isArray(a.sizes) ? a.sizes.filter((T) => T).join(",") : void 0
    ), k = d(() => {
      const T = (I) => I === void 0 ? void 0 : typeof I == "number" ? I : Number.parseInt(I, 10) || void 0, S = T(a.width), O = T(a.height);
      if (n.value) {
        if (S !== void 0 && O === void 0)
          return { height: S, width: S };
        if (S === void 0 && O !== void 0)
          return { height: O, width: O };
        if (S === void 0 && O === void 0)
          return { height: 1, width: 1 };
      }
      return {
        width: S,
        height: O
      };
    }), y = d(
      () => V(k.value.width, k.value.height, a.blankColor)
    ), $ = d(() => ({
      src: n.value ? y.value : a.src,
      alt: a.alt,
      width: k.value.width || void 0,
      height: k.value.height || void 0,
      srcset: n.value ? void 0 : w.value,
      sizes: n.value ? void 0 : g.value,
      loading: o.value ? "lazy" : "eager"
    })), b = d(
      () => B.value ? "float-start" : h.value ? "float-end" : s.value ? "mx-auto" : void 0
    ), _ = d(() => ({
      "img-thumbnail": v.value,
      "img-fluid": f.value || m.value,
      "w-100": m.value,
      rounded: a.rounded === "" || a.rounded === !0,
      [`rounded-${a.rounded}`]: typeof a.rounded == "string" && a.rounded !== "",
      [`${b.value}`]: b.value !== void 0,
      "d-block": r.value || s.value
    })), V = (T, S, O) => `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(
      l.replace("%{w}", String(T)).replace("%{h}", String(S)).replace("%{f}", O)
    )}`;
    return (T, S) => (p(), A("img", Q({ class: i(_) }, i($), {
      onLoad: S[0] || (S[0] = (O) => t("load", O))
    }), null, 16));
  }
}), oa = /* @__PURE__ */ N({
  __name: "BCardImg",
  props: {
    alt: { default: void 0 },
    blank: { default: !1 },
    blankColor: { default: void 0 },
    bottom: { default: !1 },
    lazy: { default: !1 },
    height: { default: void 0 },
    start: { default: !1 },
    end: { default: !1 },
    sizes: { default: void 0 },
    src: { default: void 0 },
    srcset: { default: void 0 },
    top: { default: !1 },
    width: { default: void 0 }
  },
  emits: ["load"],
  setup(e, { emit: t }) {
    const a = e, l = c(u(a, "bottom")), o = c(u(a, "end")), n = c(u(a, "start")), r = c(u(a, "top")), s = d(
      () => r.value ? "card-img-top" : o.value ? "card-img-right" : l.value ? "card-img-bottom" : n.value ? "card-img-left" : "card-img"
    ), f = d(() => ({
      alt: a.alt,
      height: a.height,
      src: a.src,
      lazy: a.lazy,
      width: a.width,
      blank: a.blank,
      blankColor: a.blankColor,
      sizes: a.sizes,
      srcset: a.srcset
    }));
    return (m, B) => (p(), M(Ka, Q({ class: i(s) }, i(f), {
      onLoad: B[0] || (B[0] = (h) => t("load", h))
    }), null, 16, ["class"]));
  }
}), Fr = ["innerHTML"], fn = /* @__PURE__ */ N({
  __name: "BCardHeadFoot",
  props: {
    text: { default: void 0 },
    bgVariant: { default: void 0 },
    borderVariant: { default: void 0 },
    html: { default: void 0 },
    tag: { default: "div" },
    textVariant: { default: void 0 }
  },
  setup(e) {
    const t = e, a = d(() => ({
      [`text-${t.textVariant}`]: t.textVariant !== void 0,
      [`bg-${t.bgVariant}`]: t.bgVariant !== void 0,
      [`border-${t.borderVariant}`]: t.borderVariant !== void 0
    }));
    return (l, o) => (p(), M(le(e.tag), {
      class: R(i(a))
    }, {
      default: D(() => [
        e.html ? (p(), A("div", {
          key: 0,
          innerHTML: e.html
        }, null, 8, Fr)) : x(l.$slots, "default", { key: 1 }, () => [
          se(Y(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), vn = /* @__PURE__ */ N({
  __name: "BCardHeader",
  props: {
    text: { default: void 0 },
    bgVariant: { default: void 0 },
    borderVariant: { default: void 0 },
    html: { default: void 0 },
    tag: { default: "div" },
    textVariant: { default: void 0 }
  },
  setup(e) {
    const t = e;
    return (a, l) => (p(), M(fn, Q({ class: "card-header" }, t), {
      default: D(() => [
        x(a.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), mn = /* @__PURE__ */ N({
  __name: "BCardTitle",
  props: {
    text: { default: void 0 },
    tag: { default: "h4" }
  },
  setup(e) {
    return (t, a) => (p(), M(le(e.tag), { class: "card-title" }, {
      default: D(() => [
        x(t.$slots, "default", {}, () => [
          se(Y(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), pn = /* @__PURE__ */ N({
  __name: "BCardSubtitle",
  props: {
    text: { default: void 0 },
    tag: { default: "h6" },
    textVariant: { default: "muted" }
  },
  setup(e) {
    const t = e, a = d(() => [`text-${t.textVariant}`]);
    return (l, o) => (p(), M(le(e.tag), {
      class: R(["card-subtitle mb-2", i(a)])
    }, {
      default: D(() => [
        x(l.$slots, "default", {}, () => [
          se(Y(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), gn = /* @__PURE__ */ N({
  __name: "BCardBody",
  props: {
    bodyBgVariant: { default: void 0 },
    bodyTag: { default: "div" },
    bodyTextVariant: { default: void 0 },
    overlay: { default: !1 },
    subtitle: { default: void 0 },
    subtitleTag: { default: "h4" },
    subtitleTextVariant: { default: void 0 },
    title: { default: void 0 },
    titleTag: { default: "h4" },
    text: { default: void 0 }
  },
  setup(e) {
    const t = e, a = Ee(), l = c(u(t, "overlay")), o = d(() => !Ve(a.title)), n = d(() => !Ve(a.subtitle)), r = d(() => ({
      "card-img-overlay": l.value,
      [`text-${t.bodyTextVariant}`]: t.bodyTextVariant !== void 0,
      [`bg-${t.bodyBgVariant}`]: t.bodyBgVariant !== void 0
    }));
    return (s, f) => (p(), M(le(e.bodyTag), {
      class: R(["card-body", i(r)])
    }, {
      default: D(() => [
        e.title || i(o) ? (p(), M(mn, {
          key: 0,
          tag: e.titleTag
        }, {
          default: D(() => [
            x(s.$slots, "title", {}, () => [
              se(Y(e.title), 1)
            ])
          ]),
          _: 3
        }, 8, ["tag"])) : Z("", !0),
        e.subtitle || i(n) ? (p(), M(pn, {
          key: 1,
          tag: e.subtitleTag,
          "text-variant": e.subtitleTextVariant
        }, {
          default: D(() => [
            x(s.$slots, "subtitle", {}, () => [
              se(Y(e.subtitle), 1)
            ])
          ]),
          _: 3
        }, 8, ["tag", "text-variant"])) : Z("", !0),
        x(s.$slots, "default", {}, () => [
          se(Y(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), bn = /* @__PURE__ */ N({
  __name: "BCardFooter",
  props: {
    text: { default: void 0 },
    bgVariant: { default: void 0 },
    borderVariant: { default: void 0 },
    html: { default: void 0 },
    tag: { default: "div" },
    textVariant: { default: void 0 }
  },
  setup(e) {
    const t = e;
    return (a, l) => (p(), M(fn, Q({ class: "card-footer" }, t), {
      default: D(() => [
        x(a.$slots, "default", {}, () => [
          se(Y(e.text), 1)
        ])
      ]),
      _: 3
    }, 16));
  }
}), hn = /* @__PURE__ */ N({
  __name: "BCard",
  props: {
    align: { default: void 0 },
    bgVariant: { default: void 0 },
    bodyBgVariant: { default: void 0 },
    bodyClass: { default: void 0 },
    bodyTag: { default: "div" },
    bodyTextVariant: { default: void 0 },
    borderVariant: { default: void 0 },
    footer: { default: void 0 },
    footerBgVariant: { default: void 0 },
    footerBorderVariant: { default: void 0 },
    footerClass: { default: void 0 },
    footerHtml: { default: "" },
    footerTag: { default: "div" },
    footerTextVariant: { default: void 0 },
    header: { default: void 0 },
    headerBgVariant: { default: void 0 },
    headerBorderVariant: { default: void 0 },
    headerClass: { default: void 0 },
    headerHtml: { default: "" },
    headerTag: { default: "div" },
    headerTextVariant: { default: void 0 },
    imgAlt: { default: void 0 },
    imgBottom: { default: !1 },
    imgEnd: { default: !1 },
    imgHeight: { default: void 0 },
    imgSrc: { default: void 0 },
    imgStart: { default: !1 },
    imgTop: { default: !1 },
    imgWidth: { default: void 0 },
    noBody: { default: !1 },
    overlay: { default: !1 },
    subtitle: { default: void 0 },
    subtitleTag: { default: "h6" },
    subtitleTextVariant: { default: "muted" },
    tag: { default: "div" },
    textVariant: { default: void 0 },
    title: { default: void 0 },
    titleTag: { default: "h4" },
    bodyText: { default: "" }
  },
  setup(e) {
    const t = e, a = Ee(), l = c(u(t, "imgBottom")), o = c(u(t, "imgEnd")), n = c(u(t, "imgStart")), r = c(u(t, "noBody")), s = d(() => !Ve(a.header)), f = d(() => !Ve(a.footer)), m = d(() => ({
      [`text-${t.align}`]: t.align !== void 0,
      [`text-${t.textVariant}`]: t.textVariant !== void 0,
      [`bg-${t.bgVariant}`]: t.bgVariant !== void 0,
      [`border-${t.borderVariant}`]: t.borderVariant !== void 0,
      "flex-row": n.value,
      "flex-row-reverse": o.value
    })), B = d(() => ({
      bgVariant: t.headerBgVariant,
      borderVariant: t.headerBorderVariant,
      html: t.headerHtml,
      tag: t.headerTag,
      textVariant: t.headerTextVariant
    })), h = d(() => ({
      overlay: t.overlay,
      bodyBgVariant: t.bodyBgVariant,
      bodyTag: t.bodyTag,
      bodyTextVariant: t.bodyTextVariant,
      subtitle: t.subtitle,
      subtitleTag: t.subtitleTag,
      subtitleTextVariant: t.subtitleTextVariant,
      title: t.title,
      titleTag: t.titleTag
    })), v = d(() => ({
      bgVariant: t.footerBgVariant,
      borderVariant: t.footerBorderVariant,
      html: t.footerHtml,
      tag: t.footerTag,
      textVariant: t.footerTextVariant
    })), w = d(() => ({
      src: t.imgSrc,
      alt: t.imgAlt,
      height: t.imgHeight,
      width: t.imgWidth,
      bottom: t.imgBottom,
      end: t.imgEnd,
      start: t.imgStart,
      top: t.imgTop
    }));
    return (g, k) => (p(), M(le(e.tag), {
      class: R(["card", i(m)])
    }, {
      default: D(() => [
        i(l) ? Z("", !0) : x(g.$slots, "img", { key: 0 }, () => [
          e.imgSrc ? (p(), M(oa, $e(Q({ key: 0 }, i(w))), null, 16)) : Z("", !0)
        ]),
        e.header || i(s) || e.headerHtml ? (p(), M(vn, Q({ key: 1 }, i(B), { class: e.headerClass }), {
          default: D(() => [
            x(g.$slots, "header", {}, () => [
              se(Y(e.header), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])) : Z("", !0),
        i(r) ? x(g.$slots, "default", { key: 3 }, () => [
          se(Y(e.bodyText), 1)
        ]) : (p(), M(gn, Q({ key: 2 }, i(h), { class: e.bodyClass }), {
          default: D(() => [
            x(g.$slots, "default", {}, () => [
              se(Y(e.bodyText), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])),
        e.footer || i(f) || e.footerHtml ? (p(), M(bn, Q({ key: 4 }, i(v), { class: e.footerClass }), {
          default: D(() => [
            x(g.$slots, "footer", {}, () => [
              se(Y(e.footer), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])) : Z("", !0),
        i(l) ? x(g.$slots, "img", { key: 5 }, () => [
          e.imgSrc ? (p(), M(oa, $e(Q({ key: 0 }, i(w))), null, 16)) : Z("", !0)
        ]) : Z("", !0)
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Lr = /* @__PURE__ */ N({
  __name: "BCardGroup",
  props: {
    columns: { default: !1 },
    deck: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = c(u(t, "columns")), l = c(u(t, "deck")), o = d(
      () => l.value ? "card-deck" : a.value ? "card-columns" : "card-group"
    ), n = d(() => [o.value]);
    return (r, s) => (p(), M(le(e.tag), {
      class: R(i(n))
    }, {
      default: D(() => [
        x(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Nr = /* @__PURE__ */ N({
  __name: "BCardText",
  props: {
    text: { default: void 0 },
    tag: { default: "p" }
  },
  setup(e) {
    return (t, a) => (p(), M(le(e.tag), { class: "card-text" }, {
      default: D(() => [
        x(t.$slots, "default", {}, () => [
          se(Y(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), zr = ["id", "onMouseenter", "onMouseleave"], Rr = {
  key: 0,
  class: "carousel-indicators"
}, Hr = ["aria-current", "aria-label", "onClick"], Mr = { class: "carousel-inner" }, Dr = /* @__PURE__ */ K("span", {
  class: "carousel-control-prev-icon",
  "aria-hidden": "true"
}, null, -1), jr = { class: "visually-hidden" }, qr = /* @__PURE__ */ K("span", {
  class: "carousel-control-next-icon",
  "aria-hidden": "true"
}, null, -1), Gr = { class: "visually-hidden" }, Wr = /* @__PURE__ */ N({
  __name: "BCarousel",
  props: {
    ride: { type: [Boolean, String], default: !1 },
    noHoverPause: { default: !1 },
    rideReverse: { default: !1 },
    fade: { default: !1 },
    id: { default: void 0 },
    imgHeight: { default: void 0 },
    imgWidth: { default: void 0 },
    background: { default: void 0 },
    modelValue: { default: 0 },
    controls: { default: !1 },
    indicators: { default: !1 },
    interval: { default: 5e3 },
    noTouch: { default: !1 },
    noWrap: { default: !1 },
    controlsPrevText: { default: "Previous" },
    controlsNextText: { default: "Next" },
    indicatorsButtonLabel: { default: "Slide" },
    keyboard: { default: !0 },
    touchThreshold: { default: 50 }
  },
  emits: ["slid", "slide", "update:modelValue"],
  setup(e, { expose: t, emit: a }) {
    const l = e, o = Ee(), n = Ce(u(l, "id"), "carousel"), r = Te(l, "modelValue", a, { passive: !0 }), s = c(u(l, "keyboard")), f = c(u(l, "rideReverse")), m = c(u(l, "noHoverPause")), B = c(u(l, "fade")), h = c(u(l, "controls")), v = c(u(l, "indicators")), w = c(u(l, "noTouch")), g = c(u(l, "noWrap")), k = Bt(u(l, "touchThreshold"), {
      nanToZero: !0,
      method: "parseInt"
    }), y = H(!1), $ = H(!1), b = H(!0), _ = H(null), V = H(null), T = d(
      () => Zn(l.ride) ? so(l.ride) : l.ride
    ), { pause: S, resume: O } = qo(
      () => {
        f.value ? j() : te();
      },
      u(l, "interval"),
      { immediate: T.value === "carousel" }
    ), I = d(
      () => T.value === !0 && $.value === !0 || T.value === "carousel"
    ), C = d(() => ha(o.default, "BCarouselSlide")), F = d(() => [
      "carousel",
      "slide",
      "pointer-event",
      { "carousel-fade": B.value }
    ]), P = (ne, ve) => {
      var L;
      return new io(ne, {
        componentId: n.value,
        cancelable: !1,
        target: V.value,
        direction: b.value ? "right" : "left",
        from: ve,
        to: r.value,
        relatedTarget: ((L = _.value) == null ? void 0 : L.children[r.value]) ?? null
      });
    }, W = (ne) => {
      if (y.value !== !0) {
        if (T.value === !0 && ($.value = !0), I.value === !0 && O(), b.value = !(ne < r.value), ne >= C.value.length) {
          if (g.value)
            return;
          r.value = 0;
          return;
        }
        if (ne < 0) {
          if (g.value)
            return;
          r.value = C.value.length - 1;
          return;
        }
        r.value = ne;
      }
    }, j = () => W(r.value - 1), te = () => W(r.value + 1), X = (ne) => {
      s.value !== !1 && ne();
    }, q = () => {
      m.value || S();
    }, ae = () => {
      I.value && O();
    }, { lengthX: me } = Ri(V, {
      passive: !0,
      onSwipeStart() {
        w.value !== !0 && S();
      },
      onSwipeEnd() {
        if (w.value === !0)
          return;
        const ne = () => {
          I.value !== !1 && O();
        };
        if (me.value >= k.value) {
          te(), ne();
          return;
        }
        me.value <= -k.value && (j(), ne());
      }
    }), pe = (ne) => {
      a("slide", P("slide", ne)), y.value = !0;
    }, be = (ne) => {
      a("slid", P("slid", ne)), y.value = !1;
    };
    return ce(
      () => l.ride,
      () => $.value = !1
    ), t({ pause: S, resume: O, prev: j, next: te }), Ze(yo, {
      background: ke(u(l, "background")),
      width: ke(u(l, "imgWidth")),
      height: ke(u(l, "imgHeight"))
    }), (ne, ve) => (p(), A("div", {
      id: i(n),
      ref_key: "target",
      ref: V,
      class: R(i(F)),
      onKeydown: [
        ve[0] || (ve[0] = Pt((L) => X(j), ["left"])),
        ve[1] || (ve[1] = Pt((L) => X(te), ["right"]))
      ],
      onMouseenter: ft(q, ["stop"]),
      onMouseleave: ft(ae, ["stop"])
    }, [
      i(v) ? (p(), A("div", Rr, [
        (p(!0), A(fe, null, Be(i(C).length, (L, z) => (p(), A("button", {
          key: z,
          type: "button",
          "data-bs-target": "",
          class: R(z === i(r) ? "active" : ""),
          "aria-current": z === i(r) ? !0 : void 0,
          "aria-label": `${e.indicatorsButtonLabel} ${z}`,
          onClick: (ee) => W(z)
        }, null, 10, Hr))), 128))
      ])) : Z("", !0),
      K("div", {
        ref_key: "relatedTarget",
        ref: _,
        class: "carousel-inner"
      }, [
        (p(!0), A(fe, null, Be(i(C), (L, z) => (p(), M(ao, {
          key: z,
          "enter-from-class": `carousel-item-next carousel-item-${b.value ? "end" : "start"}`,
          "leave-active-class": "active",
          "leave-to-class": `carousel-item-prev carousel-item-${b.value ? "start" : "end"}`,
          onBeforeLeave: pe,
          onAfterLeave: be
        }, {
          default: D(() => [
            st((p(), M(le(L), {
              class: R({ active: z === i(r) })
            }, null, 8, ["class"])), [
              [na, z === i(r)]
            ])
          ]),
          _: 2
        }, 1032, ["enter-from-class", "leave-to-class"]))), 128))
      ], 512),
      K("div", Mr, [
        x(ne.$slots, "default")
      ]),
      i(h) ? (p(), A(fe, { key: 1 }, [
        K("button", {
          class: "carousel-control-prev",
          type: "button",
          onClick: j
        }, [
          Dr,
          K("span", jr, Y(e.controlsPrevText), 1)
        ]),
        K("button", {
          class: "carousel-control-next",
          type: "button",
          onClick: te
        }, [
          qr,
          K("span", Gr, Y(e.controlsNextText), 1)
        ])
      ], 64)) : Z("", !0)
    ], 42, zr));
  }
}), Ur = ["innerHTML"], Kr = { key: 1 }, Xr = ["innerHTML"], Jr = { key: 1 }, Yr = /* @__PURE__ */ N({
  __name: "BCarouselSlide",
  props: {
    imgSrc: { default: void 0 },
    imgHeight: { default: void 0 },
    imgWidth: { default: void 0 },
    interval: { default: void 0 },
    background: { default: void 0 },
    caption: { default: void 0 },
    captionHtml: { default: void 0 },
    captionTag: { default: "h3" },
    contentTag: { default: "div" },
    contentVisibleUp: { default: void 0 },
    id: { default: void 0 },
    imgAlt: { default: void 0 },
    imgBlank: { default: !1 },
    imgBlankColor: { default: "transparent" },
    text: { default: void 0 },
    textHtml: { default: void 0 },
    textTag: { default: "p" }
  },
  setup(e) {
    const t = e, a = Ee(), l = Pe(yo, null), o = d(() => t.text || t.textHtml || !Ve(a.text)), n = d(() => t.caption || t.captionHtml || !Ve(a.caption)), r = d(() => o.value || n.value || !Ve(a.default)), s = d(() => ({
      background: `${t.background || (l == null ? void 0 : l.background.value) || "rgb(171, 171, 171)"} none repeat scroll 0% 0%`
    })), f = d(() => ({
      "d-none": t.contentVisibleUp !== void 0,
      [`d-${t.contentVisibleUp}-block`]: t.contentVisibleUp !== void 0
    }));
    return (m, B) => (p(), A("div", {
      class: "carousel-item",
      style: Le(i(s))
    }, [
      x(m.$slots, "img", {}, () => {
        var h, v;
        return [
          ye(Ka, {
            class: "d-block w-100",
            alt: e.imgAlt,
            src: e.imgSrc,
            width: e.imgWidth || ((h = i(l)) == null ? void 0 : h.width.value),
            height: e.imgHeight || ((v = i(l)) == null ? void 0 : v.height.value),
            blank: e.imgBlank,
            "blank-color": e.imgBlankColor
          }, null, 8, ["alt", "src", "width", "height", "blank", "blank-color"])
        ];
      }),
      i(r) ? (p(), M(le(e.contentTag), {
        key: 0,
        class: R(["carousel-caption", i(f)])
      }, {
        default: D(() => [
          i(n) ? (p(), M(le(e.captionTag), { key: 0 }, {
            default: D(() => [
              x(m.$slots, "caption", {}, () => [
                e.captionHtml ? (p(), A("span", {
                  key: 0,
                  innerHTML: e.captionHtml
                }, null, 8, Ur)) : (p(), A("span", Kr, Y(e.caption), 1))
              ])
            ]),
            _: 3
          })) : Z("", !0),
          i(o) ? (p(), M(le(e.textTag), { key: 1 }, {
            default: D(() => [
              x(m.$slots, "text", {}, () => [
                e.textHtml ? (p(), A("span", {
                  key: 0,
                  innerHTML: e.textHtml
                }, null, 8, Xr)) : (p(), A("span", Jr, Y(e.text), 1))
              ])
            ]),
            _: 3
          })) : Z("", !0),
          x(m.$slots, "default")
        ]),
        _: 3
      }, 8, ["class"])) : Z("", !0)
    ], 4));
  }
}), Pl = ra("", [], { type: [Boolean, String, Number], default: !1 }), El = ra("offset", [""], { type: [String, Number], default: null }), Il = ra("order", [""], { type: [String, Number], default: null }), Zr = N({
  name: "BCol",
  props: {
    col: { type: [Boolean, String], default: !1 },
    // Generic flexbox .col (xs)
    cols: { type: [String, Number], default: null },
    // .col-[1-12]|auto (xs)
    ...Pl,
    offset: { type: [String, Number], default: null },
    ...El,
    order: { type: [String, Number], default: null },
    ...Il,
    alignSelf: { type: String, default: null },
    tag: { type: String, default: "div" }
  },
  setup(e) {
    const t = [
      { content: Pl, propPrefix: "cols", classPrefix: "col" },
      { content: El, propPrefix: "offset" },
      { content: Il, propPrefix: "order" }
    ], a = c(u(e, "col")), l = d(
      () => t.flatMap((n) => ho(e, n.content, n.propPrefix, n.classPrefix))
    );
    return {
      computedClasses: d(() => [
        l.value,
        {
          col: a.value || !l.value.some((n) => /^col-/.test(n)) && !e.cols,
          [`col-${e.cols}`]: !!e.cols,
          [`offset-${e.offset}`]: !!e.offset,
          [`order-${e.order}`]: !!e.order,
          [`align-self-${e.alignSelf}`]: !!e.alignSelf
        }
      ])
    };
  }
});
function Qr(e, t, a, l, o, n) {
  return p(), M(le(e.tag), {
    class: R(e.computedClasses)
  }, {
    default: D(() => [
      x(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["class"]);
}
const xt = /* @__PURE__ */ ze(Zr, [["render", Qr]]), gt = {
  autoHide: !0,
  delay: 5e3,
  noCloseButton: !1,
  pos: "top-right",
  value: !0
};
class Fl {
  constructor(t) {
    xe(this, "vm");
    xe(this, "containerPositions");
    Un(t) ? this.vm = t : this.vm = ct(t), this.containerPositions = d(() => {
      const a = /* @__PURE__ */ new Set([]);
      return this.vm.toasts.map((l) => {
        l.options.pos && a.add(l.options.pos);
      }), a;
    });
  }
  toasts(t) {
    return t ? d(
      () => this.vm.toasts.filter((a) => {
        if (a.options.pos === t && a.options.value)
          return a;
      })
    ) : d(() => this.vm.toasts);
  }
  remove(...t) {
    this.vm.toasts = this.vm.toasts.filter((a) => {
      if (a.options.id && !t.includes(a.options.id))
        return a;
    });
  }
  isRoot() {
    return this.vm.root ?? !1;
  }
  show(t, a = gt) {
    const l = { id: at(), ...gt, ...a }, o = {
      options: ct(l),
      content: t
    };
    return this.vm.toasts.push(o), o;
  }
  info(t, a = gt) {
    return this.show(t, { variant: "info", ...a });
  }
  danger(t, a = gt) {
    return this.show(t, { variant: "danger", ...a });
  }
  warning(t, a = gt) {
    return this.show(t, { variant: "warning", ...a });
  }
  success(t, a = gt) {
    return this.show(t, { variant: "success", ...a });
  }
  hide() {
  }
}
class eu {
  constructor() {
    xe(this, "vms");
    xe(this, "rootInstance");
    xe(this, "useToast", Bn);
    this.vms = {};
  }
  getOrCreateViewModel(t) {
    if (!t) {
      if (this.rootInstance)
        return this.vms[this.rootInstance];
      const a = { root: !0, toasts: [], container: void 0, id: Symbol("toast") };
      return this.rootInstance = a.id, this.vms[a.id] = a, a;
    }
    if (t.root) {
      if (this.rootInstance)
        return this.vms[this.rootInstance];
      this.rootInstance = t.id;
    }
    return this.vms[t.id] = t, t;
  }
  getVM(t) {
    if (!t && this.rootInstance)
      return this.vms[this.rootInstance];
    if (t)
      return this.vms[t];
  }
}
const _a = Symbol("toast"), yn = Symbol("toastFetch"), tu = {
  container: void 0,
  toasts: [],
  root: !1
};
function au() {
  return Pe(yn);
}
function Bn(e, t = _a) {
  const a = Pe(au());
  if (!e)
    return new Fl(a.getOrCreateViewModel());
  const l = { id: Symbol("toastInstance") }, o = { ...tu, ...l, ...e }, n = a.getOrCreateViewModel(o);
  return new Fl(n);
}
const lu = {
  install: (e, t = {}) => {
    var a, l;
    e.provide(yn, ((a = t == null ? void 0 : t.BToast) == null ? void 0 : a.injectkey) ?? _a), e.provide(((l = t == null ? void 0 : t.BToast) == null ? void 0 : l.injectkey) ?? _a, new eu());
  }
}, ou = "toast-title", Ll = 1e3, $n = N({
  components: { BLink: Ne },
  props: {
    ...mt,
    delay: { type: Number, default: 5e3 },
    bodyClass: { type: String, default: void 0 },
    body: { type: [Object, String], default: void 0 },
    headerClass: { type: String, default: void 0 },
    headerTag: { type: String, default: "div" },
    animation: { type: [Boolean, String], default: !0 },
    id: { type: String, default: void 0 },
    // Switches role to 'status' and aria-live to 'polite'
    isStatus: { type: [Boolean, String], default: !1 },
    autoHide: { type: [Boolean, String], default: !0 },
    noCloseButton: { type: [Boolean, String], default: !1 },
    noFade: { type: [Boolean, String], default: !1 },
    noHoverPause: { type: [Boolean, String], default: !1 },
    solid: { type: [Boolean, String], default: !1 },
    // Render the toast in place, rather than in a portal-target
    static: { type: [Boolean, String], default: !1 },
    title: { type: String, default: void 0 },
    modelValue: { type: [Boolean, String], default: !1 },
    toastClass: { type: Array, default: void 0 },
    variant: { type: String, default: void 0 }
  },
  emits: ["destroyed", "update:modelValue"],
  setup(e, { emit: t, slots: a }) {
    c(u(e, "animation"));
    const l = c(u(e, "isStatus")), o = c(u(e, "autoHide")), n = c(u(e, "noCloseButton")), r = c(u(e, "noFade")), s = c(u(e, "noHoverPause"));
    c(u(e, "solid")), c(u(e, "static"));
    const f = c(u(e, "modelValue")), m = H(!1), B = H(!1), h = H(!1), v = d(() => ({
      [`b-toast-${e.variant}`]: e.variant !== void 0,
      show: h.value || m.value
    }));
    let w, g, k;
    const y = () => {
      typeof w > "u" || (clearTimeout(w), w = void 0);
    }, $ = d(
      () => (
        // Minimum supported duration is 1 second
        Math.max(lt(e.delay, 0), Ll)
      )
    ), b = () => {
      f.value && (g = k = 0, y(), B.value = !0, Rt(() => {
        h.value = !1;
      }));
    }, _ = () => {
      y(), t("update:modelValue", !0), g = k = 0, B.value = !1, _e(() => {
        Rt(() => {
          h.value = !0;
        });
      });
    }, V = () => {
      if (!o.value || s.value || !w || k)
        return;
      const W = Date.now() - g;
      W > 0 && (y(), k = Math.max($.value - W, Ll));
    }, T = () => {
      (!o.value || s.value || !k) && (k = g = 0), S();
    };
    ce(f, (W) => {
      W ? _() : b();
    });
    const S = () => {
      y(), o.value && (w = setTimeout(b, k || $.value), g = Date.now(), k = 0);
    }, O = () => {
      m.value = !0, t("update:modelValue", !0);
    }, I = () => {
      m.value = !1, S();
    }, C = () => {
      m.value = !0;
    }, F = () => {
      m.value = !1, k = g = 0, t("update:modelValue", !1);
    };
    Kn(() => {
      y(), o.value && t("destroyed", e.id);
    }), Ye(() => {
      _e(() => {
        f.value && Rt(() => {
          _();
        });
      });
    });
    const P = () => {
      _e(() => {
        Rt(() => {
          b();
        });
      });
    };
    return () => {
      const W = () => {
        const j = [], te = De(ou, { hide: b }, a);
        te ? j.push(de(te)) : e.title && j.push(de("strong", { class: "me-auto" }, e.title)), !n.value && j.length !== 0 && j.push(
          de(Tt, {
            class: ["btn-close"],
            onClick: () => {
              b();
            }
          })
        );
        const X = [];
        if (j.length > 0 && X.push(
          de(
            e.headerTag,
            {
              class: "toast-header"
            },
            { default: () => j }
          )
        ), De("default", { hide: b }, a) || e.body) {
          const q = de(
            Et(e) ? "b-link" : "div",
            {
              class: ["toast-body", e.bodyClass],
              onClick: Et(e) ? { click: P } : {}
            },
            De("default", { hide: b }, a) || e.body
          );
          X.push(q);
        }
        return de(
          "div",
          {
            class: ["toast", e.toastClass, v.value],
            tabindex: "0"
          },
          X
        );
      };
      return de(
        "div",
        {
          class: ["b-toast"],
          id: e.id,
          role: B.value ? null : l.value ? "status" : "alert",
          "aria-live": B.value ? null : l.value ? "polite" : "assertive",
          "aria-atomic": B.value ? null : !0,
          onmouseenter: V,
          onmouseleave: T
        },
        [
          de(
            _t,
            {
              noFade: r.value,
              onAfterEnter: I,
              onBeforeEnter: O,
              onAfterLeave: F,
              onBeforeLeave: C
            },
            () => [h.value ? W() : ""]
          )
        ]
      );
    };
  }
}), Ta = /* @__PURE__ */ N({
  __name: "BToaster",
  props: {
    position: { default: "top-right" },
    instance: { default: void 0 }
  },
  setup(e) {
    const t = e, a = {
      "top-left": "top-0 start-0",
      "top-center": "top-0 start-50 translate-middle-x",
      "top-right": "top-0 end-0",
      "middle-left": "top-50 start-0 translate-middle-y",
      "middle-center": "top-50 start-50 translate-middle",
      "middle-right": "top-50 end-0 translate-middle-y",
      "bottom-left": "bottom-0 start-0",
      "bottom-center": "bottom-0 start-50 translate-middle-x",
      "bottom-right": "bottom-0 end-0"
    }, l = d(() => a[t.position]), o = (n) => {
      var r;
      (r = t.instance) == null || r.remove(n);
    };
    return (n, r) => {
      var s;
      return p(), A("div", {
        class: R([[i(l)], "b-toaster position-fixed p-3"]),
        style: { "z-index": "11" }
      }, [
        (p(!0), A(fe, null, Be((s = e.instance) == null ? void 0 : s.toasts(e.position).value, (f) => (p(), M($n, {
          id: f.options.id,
          key: f.options.id,
          modelValue: f.options.value,
          "onUpdate:modelValue": (m) => f.options.value = m,
          "auto-hide": f.options.autoHide,
          delay: f.options.delay,
          "no-close-button": f.options.noCloseButton,
          title: f.content.title,
          body: f.content.body,
          component: f.content.body,
          variant: f.options.variant,
          onDestroyed: o
        }, null, 8, ["id", "modelValue", "onUpdate:modelValue", "auto-hide", "delay", "no-close-button", "title", "body", "component", "variant"]))), 128))
      ], 2);
    };
  }
}), nu = N({
  props: {
    gutterX: { type: String, default: null },
    gutterY: { type: String, default: null },
    fluid: { type: [Boolean, String], default: !1 },
    toast: { type: Object, default: void 0 },
    position: { type: String, default: void 0 }
  },
  setup(e, { slots: t, expose: a }) {
    const l = H();
    let o;
    const n = d(() => ({
      container: !e.fluid,
      ["container-fluid"]: typeof e.fluid == "boolean" && e.fluid,
      [`container-${e.fluid}`]: typeof e.fluid == "string",
      [`gx-${e.gutterX}`]: e.gutterX !== null,
      [`gy-${e.gutterY}`]: e.gutterY !== null
    }));
    return Ye(() => {
      e.toast;
    }), e.toast && (o = Bn({ container: l, root: e.toast.root }), a({
      // ...toastInstance?.useMethods,
    })), () => {
      var s;
      const r = [];
      return o == null || o.containerPositions.value.forEach((f) => {
        r.push(de(Ta, { key: f, instance: o, position: f }));
      }), de("div", { class: [n.value, e.position], ref: l }, [
        ...r,
        (s = t.default) == null ? void 0 : s.call(t)
      ]);
    };
  },
  methods: {}
}), su = { class: "visually-hidden" }, iu = ["aria-labelledby", "role"], ru = {
  inheritAttrs: !1
}, wn = /* @__PURE__ */ N({
  ...ru,
  __name: "BDropdown",
  props: {
    id: { default: void 0 },
    menuClass: { default: void 0 },
    size: { default: void 0 },
    splitClass: { default: void 0 },
    splitVariant: { default: void 0 },
    text: { default: void 0 },
    toggleClass: { default: void 0 },
    autoClose: { type: [Boolean, String], default: !0 },
    block: { default: !1 },
    dark: { default: !1 },
    disabled: { default: !1 },
    isNav: { default: !1 },
    dropup: { default: !1 },
    dropend: { default: !1 },
    dropstart: { default: !1 },
    center: { default: !1 },
    end: { default: !1 },
    noFlip: { default: !1 },
    noShift: { default: !1 },
    offset: { default: 0 },
    role: { default: "menu" },
    split: { default: !1 },
    splitButtonType: { default: "button" },
    splitHref: { default: void 0 },
    splitDisabled: { default: void 0 },
    noCaret: { default: !1 },
    toggleText: { default: "Toggle dropdown" },
    variant: { default: "secondary" },
    modelValue: { default: !1 },
    lazy: { default: !1 },
    strategy: { default: "absolute" },
    floatingMiddleware: { default: void 0 },
    splitTo: { default: void 0 }
  },
  emits: ["show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "click", "toggle", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = Ce(u(a, "id"), "dropdown"), o = Te(a, "modelValue", t, { passive: !0 }), n = c(o), r = c(u(a, "block")), s = c(u(a, "dark")), f = c(u(a, "dropup")), m = c(u(a, "dropend")), B = c(u(a, "isNav")), h = c(u(a, "dropstart")), v = c(u(a, "center")), w = c(u(a, "end")), g = c(u(a, "split")), k = c(u(a, "noCaret")), y = c(u(a, "noFlip")), $ = c(u(a, "noShift")), b = c(u(a, "lazy")), _ = c(u(a, "splitDisabled")), V = d(
      () => typeof a.offset == "string" || typeof a.offset == "number" ? a.offset : NaN
    ), T = Bt(V, { method: "parseInt", nanToZero: !0 }), S = H(null), O = H(null), I = H(null), C = d(() => g.value ? O.value : I.value), F = d(
      () => tr({
        top: f.value,
        start: h.value,
        end: m.value,
        alignCenter: v.value,
        alignEnd: w.value
      })
    ), P = d(() => {
      if (a.floatingMiddleware !== void 0)
        return a.floatingMiddleware;
      const L = typeof a.offset == "string" || typeof a.offset == "number" ? T.value : a.offset, z = [Oo(L)];
      return y.value === !1 && z.push(Vo()), $.value === !1 && z.push(Po()), z;
    }), { x: W, y: j, strategy: te, update: X } = Ho(C, S, {
      placement: F,
      middleware: P,
      strategy: a.strategy
    }), q = d(() => ({
      "d-grid": r.value,
      dropup: f.value,
      dropend: m.value,
      dropstart: h.value,
      "d-flex": r.value && g.value
    })), ae = d(() => [
      g.value ? a.splitClass : a.toggleClass,
      {
        "nav-link": B.value,
        "dropdown-toggle": !g.value,
        "dropdown-toggle-no-caret": k.value && !g.value,
        "w-100": g.value && r.value
      }
    ]), me = d(() => [
      a.menuClass,
      {
        "dropdown-menu-dark": s.value
      }
    ]), pe = d(() => ({
      "aria-expanded": g.value ? void 0 : !1,
      href: g.value ? a.splitHref : void 0,
      to: g.value && a.splitTo ? a.splitTo : void 0
    })), be = () => {
      t("toggle");
      const L = n.value, z = new Xe(L ? "hide" : "show");
      if (t(L ? "hide" : "show", z), z.defaultPrevented) {
        t(L ? "hide-prevented" : "show-prevented");
        return;
      }
      o.value = !L, t(L ? "hidden" : "shown");
    }, ne = (L) => {
      g.value ? t("click", L) : be();
    };
    Uo(
      S,
      () => {
        n.value && (a.autoClose === !0 || a.autoClose === "outside") && (o.value = !n.value);
      },
      { ignore: [O, I] }
    );
    const ve = () => {
      n.value && (a.autoClose === !0 || a.autoClose === "inside") && (o.value = !n.value);
    };
    return ce(n, X), Ze(xo, {
      id: l,
      open: () => {
        o.value = !0;
      },
      close: () => {
        o.value = !1;
      },
      toggle: () => {
        o.value = !n.value;
      },
      visible: n,
      isNav: B
    }), (L, z) => (p(), A(fe, null, [
      K("div", Q({
        class: [i(q), "btn-group"]
      }, L.$attrs), [
        ye(kt, Q({
          id: i(l),
          ref_key: "splitButton",
          ref: I,
          variant: e.splitVariant || e.variant,
          size: e.size,
          class: i(ae),
          disabled: i(_) || e.disabled,
          type: e.splitButtonType
        }, i(pe), {
          onClick: ne,
          onKeydown: z[0] || (z[0] = Pt((ee) => o.value = !i(n), ["esc"]))
        }), {
          default: D(() => [
            x(L.$slots, "button-content", {}, () => [
              se(Y(e.text), 1)
            ])
          ]),
          _: 3
        }, 16, ["id", "variant", "size", "class", "disabled", "type"]),
        i(g) ? (p(), M(kt, {
          key: 0,
          ref_key: "button",
          ref: O,
          variant: e.variant,
          size: e.size,
          disabled: e.disabled,
          class: R([e.toggleClass, "dropdown-toggle-split dropdown-toggle"]),
          "aria-expanded": "false",
          onClick: be
        }, {
          default: D(() => [
            K("span", su, [
              x(L.$slots, "toggle-text", {}, () => [
                se(Y(e.toggleText), 1)
              ])
            ])
          ]),
          _: 3
        }, 8, ["variant", "size", "disabled", "class"])) : Z("", !0)
      ], 16),
      !i(b) || i(n) ? st((p(), A("ul", {
        key: 0,
        ref_key: "floating",
        ref: S,
        style: Le({
          position: i(te) === "absolute" ? void 0 : "fixed",
          top: `${i(j) ?? 0}px`,
          left: `${i(W) ?? 0}px`,
          width: "max-content"
        }),
        class: R(["dropdown-menu show", i(me)]),
        "aria-labelledby": i(l),
        role: e.role,
        onClick: ve
      }, [
        x(L.$slots, "default")
      ], 14, iu)), [
        [na, i(b) || i(n)]
      ]) : Z("", !0)
    ], 64));
  }
}), uu = { role: "presentation" }, du = /* @__PURE__ */ N({
  __name: "BDropdownDivider",
  props: {
    tag: { default: "hr" }
  },
  setup(e) {
    return (t, a) => (p(), A("li", uu, [
      (p(), M(le(e.tag), {
        class: "dropdown-divider",
        role: "separator",
        "aria-orientation": "horizontal"
      }))
    ]));
  }
}), cu = {}, fu = { role: "presentation" }, vu = { class: "px-4 py-3" };
function mu(e, t) {
  return p(), A("li", fu, [
    K("form", vu, [
      x(e.$slots, "default")
    ])
  ]);
}
const pu = /* @__PURE__ */ ze(cu, [["render", mu]]), gu = { role: "presentation" }, bu = ["id", "aria-describedby"], hu = {
  inheritAttrs: !1
}, yu = /* @__PURE__ */ N({
  ...hu,
  __name: "BDropdownGroup",
  props: {
    id: { default: void 0 },
    ariaDescribedby: { default: void 0 },
    header: { default: void 0 },
    headerClass: { default: void 0 },
    headerTag: { default: "header" },
    headerVariant: { default: void 0 }
  },
  setup(e) {
    const t = e, a = d(
      () => t.id ? `${t.id}_group_dd_header` : void 0
    ), l = d(
      () => t.headerTag === "header" ? void 0 : "heading"
    ), o = d(() => [
      t.headerClass,
      {
        [`text-${t.headerVariant}`]: t.headerVariant !== void 0
      }
    ]);
    return (n, r) => (p(), A("li", gu, [
      (p(), M(le(e.headerTag), {
        id: i(a),
        class: R(["dropdown-header", i(o)]),
        role: i(l)
      }, {
        default: D(() => [
          x(n.$slots, "header", {}, () => [
            se(Y(e.header), 1)
          ])
        ]),
        _: 3
      }, 8, ["id", "class", "role"])),
      K("ul", Q({
        id: e.id,
        role: "group",
        class: "list-unstyled"
      }, n.$attrs, {
        "aria-describedby": e.ariaDescribedby || i(a)
      }), [
        x(n.$slots, "default")
      ], 16, bu)
    ]));
  }
}), Bu = {}, $u = { class: "dropdown-header" };
function wu(e, t) {
  return p(), A("li", null, [
    K("h6", $u, [
      x(e.$slots, "default")
    ])
  ]);
}
const ku = /* @__PURE__ */ ze(Bu, [["render", wu]]), Cu = {
  inheritAttrs: !1
}, Su = /* @__PURE__ */ N({
  ...Cu,
  __name: "BDropdownItem",
  props: {
    href: { default: void 0 },
    linkClass: { default: void 0 },
    active: { default: !1 },
    disabled: { default: !1 },
    rel: { default: void 0 },
    target: { default: "_self" },
    variant: { default: void 0 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = c(u(a, "active")), o = c(u(a, "disabled")), n = oo(), r = d(() => [
      a.linkClass,
      {
        active: l.value,
        disabled: o.value,
        [`text-${a.variant}`]: a.variant !== void 0
      }
    ]), s = d(
      () => a.href ? "a" : n.to ? Ne : "button"
    ), f = d(() => ({
      disabled: o.value,
      "aria-current": l.value ? !0 : null,
      href: s.value === "a" ? a.href : null,
      rel: a.rel,
      type: s.value === "button" ? "button" : null,
      target: a.target,
      ...n.to ? { activeClass: "active", ...n } : {}
    })), m = Pe(Ma, null), B = Pe(xo, null), h = (v) => {
      var w, g;
      t("click", v), (w = m == null ? void 0 : m.close) == null || w.call(m), (g = B == null ? void 0 : B.close) == null || g.call(B);
    };
    return (v, w) => (p(), A("li", {
      role: "presentation",
      class: R(v.$attrs.class)
    }, [
      (p(), M(le(i(s)), Q({
        class: ["dropdown-item", i(r)]
      }, i(f), { onClick: h }), {
        default: D(() => [
          x(v.$slots, "default")
        ]),
        _: 3
      }, 16, ["class"]))
    ], 2));
  }
}), _u = ["disabled"], Tu = {
  inheritAttrs: !1
}, xu = /* @__PURE__ */ N({
  ...Tu,
  __name: "BDropdownItemButton",
  props: {
    buttonClass: { default: void 0 },
    active: { default: !1 },
    activeClass: { default: "active" },
    disabled: { default: !1 },
    variant: { default: void 0 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = c(u(a, "active")), o = c(u(a, "disabled")), n = d(() => [
      a.buttonClass,
      {
        [a.activeClass]: l.value,
        disabled: o.value,
        [`text-${a.variant}`]: a.variant !== void 0
      }
    ]), r = (s) => t("click", s);
    return (s, f) => (p(), A("li", {
      role: "presentation",
      class: R(s.$attrs.class)
    }, [
      K("button", {
        role: "menu",
        type: "button",
        class: R(["dropdown-item", i(n)]),
        disabled: i(o),
        onClick: r
      }, [
        x(s.$slots, "default")
      ], 10, _u)
    ], 2));
  }
}), Au = { role: "presentation" }, Vu = { class: "px-4 py-1 mb-0 text-muted" }, Ou = /* @__PURE__ */ N({
  __name: "BDropdownText",
  props: {
    text: { default: "" }
  },
  setup(e) {
    return (t, a) => (p(), A("li", Au, [
      K("p", Vu, [
        x(t.$slots, "default", {}, () => [
          se(Y(e.text), 1)
        ])
      ])
    ]));
  }
}), Pu = ["id", "novalidate", "onSubmit"], kn = /* @__PURE__ */ N({
  __name: "BForm",
  props: {
    id: { default: void 0 },
    floating: { default: !1 },
    novalidate: { default: !1 },
    validated: { default: !1 }
  },
  emits: ["submit"],
  setup(e, { emit: t }) {
    const a = e, l = c(u(a, "floating")), o = c(u(a, "novalidate")), n = c(u(a, "validated")), r = d(() => ({
      "form-floating": l.value,
      "was-validated": n.value
    })), s = (f) => t("submit", f);
    return (f, m) => (p(), A("form", {
      id: e.id,
      novalidate: i(o),
      class: R(i(r)),
      onSubmit: ft(s, ["prevent"])
    }, [
      x(f.$slots, "default")
    ], 42, Pu));
  }
}), Eu = { class: "form-floating" }, Iu = ["for"], Fu = /* @__PURE__ */ N({
  __name: "BFormFloatingLabel",
  props: {
    labelFor: { default: void 0 },
    label: { default: void 0 },
    text: { default: void 0 }
  },
  setup(e) {
    return (t, a) => (p(), A("div", Eu, [
      x(t.$slots, "default", {}, () => [
        se(Y(e.text), 1)
      ]),
      K("label", { for: e.labelFor }, [
        x(t.$slots, "label", {}, () => [
          se(Y(e.label), 1)
        ])
      ], 8, Iu)
    ]));
  }
}), xa = /* @__PURE__ */ N({
  __name: "BFormInvalidFeedback",
  props: {
    ariaLive: { default: void 0 },
    forceShow: { default: !1 },
    id: { default: void 0 },
    text: { default: void 0 },
    role: { default: void 0 },
    state: { default: null },
    tag: { default: "div" },
    tooltip: { default: !1 }
  },
  setup(e) {
    const t = e, a = c(u(t, "forceShow")), l = c(u(t, "state")), o = c(u(t, "tooltip")), n = d(
      () => a.value === !0 || l.value === !1
    ), r = d(() => ({
      "d-block": n.value,
      "invalid-feedback": !o.value,
      "invalid-tooltip": o.value
    })), s = d(() => ({
      id: t.id,
      role: t.role,
      "aria-live": t.ariaLive,
      "aria-atomic": t.ariaLive ? !0 : void 0
    }));
    return (f, m) => (p(), M(le(e.tag), Q({ class: i(r) }, i(s)), {
      default: D(() => [
        x(f.$slots, "default", {}, () => [
          se(Y(e.text), 1)
        ])
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), qt = /* @__PURE__ */ N({
  __name: "BFormRow",
  props: {
    tag: { default: "div" }
  },
  setup(e) {
    return (t, a) => (p(), M(le(e.tag), { class: "row d-flex flex-wrap" }, {
      default: D(() => [
        x(t.$slots, "default")
      ]),
      _: 3
    }));
  }
}), Aa = /* @__PURE__ */ N({
  __name: "BFormText",
  props: {
    id: { default: void 0 },
    inline: { default: !1 },
    tag: { default: "small" },
    text: { default: void 0 },
    textVariant: { default: "muted" }
  },
  setup(e) {
    const t = e, a = c(u(t, "inline")), l = d(() => [
      [`text-${t.textVariant}`],
      {
        "form-text": !a.value
      }
    ]);
    return (o, n) => (p(), M(le(e.tag), {
      id: e.id,
      class: R(i(l))
    }, {
      default: D(() => [
        x(o.$slots, "default", {}, () => [
          se(Y(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Va = /* @__PURE__ */ N({
  __name: "BFormValidFeedback",
  props: {
    ariaLive: { default: void 0 },
    forceShow: { default: !1 },
    id: { default: void 0 },
    role: { default: void 0 },
    text: { default: void 0 },
    state: { default: null },
    tag: { default: "div" },
    tooltip: { default: !1 }
  },
  setup(e) {
    const t = e, a = c(u(t, "forceShow")), l = c(u(t, "state")), o = c(u(t, "tooltip")), n = d(
      () => a.value === !0 || l.value === !0
    ), r = d(() => ({
      "d-block": n.value,
      "valid-feedback": !o.value,
      "valid-tooltip": o.value
    })), s = d(() => t.ariaLive ? !0 : void 0);
    return (f, m) => (p(), M(le(e.tag), {
      id: e.id,
      role: e.role,
      "aria-live": e.ariaLive,
      "aria-atomic": i(s),
      class: R(i(r))
    }, {
      default: D(() => [
        x(f.$slots, "default", {}, () => [
          se(Y(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["id", "role", "aria-live", "aria-atomic", "class"]));
  }
}), Cn = N({
  name: "ComponentOrEmpty",
  props: {
    tag: {
      type: String,
      default: "div"
    },
    skip: {
      type: Boolean,
      default: !1
    }
  },
  setup(e, { slots: t, attrs: a }) {
    return () => {
      var l, o;
      return e.skip ? (l = t.default) == null ? void 0 : l.call(t) : de(e.tag, { ...a }, [(o = t.default) == null ? void 0 : o.call(t)]);
    };
  }
}), Lu = ["id", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "aria-required", "value", "indeterminate"], Nu = ["for"], zu = {
  inheritAttrs: !1
}, Sn = /* @__PURE__ */ N({
  ...zu,
  __name: "BFormCheckbox",
  props: {
    ariaLabel: { default: void 0 },
    ariaLabelledBy: { default: void 0 },
    form: { default: void 0 },
    indeterminate: { default: void 0 },
    name: { default: void 0 },
    id: { default: void 0 },
    autofocus: { default: !1 },
    plain: { default: !1 },
    button: { default: !1 },
    buttonGroup: { default: !1 },
    switch: { default: !1 },
    disabled: { default: !1 },
    buttonVariant: { default: void 0 },
    inline: { default: !1 },
    required: { default: void 0 },
    size: { default: void 0 },
    state: { default: null },
    uncheckedValue: { type: [Array, Set, Boolean, String, Object, Number, null], default: !1 },
    value: { type: [Array, Set, Boolean, String, Object, Number, null], default: !0 },
    modelValue: { type: [Array, Set, Boolean, String, Object, Number, null], default: void 0 }
  },
  emits: ["update:modelValue", "input", "change"],
  setup(e, { emit: t }) {
    const a = e, l = Ee(), o = Te(a, "modelValue", t, { passive: !0 }), n = Ce(u(a, "id"), "form-check"), r = c(u(a, "indeterminate")), s = c(u(a, "autofocus")), f = c(u(a, "plain")), m = c(u(a, "button")), B = c(u(a, "buttonGroup")), h = c(u(a, "switch")), v = c(u(a, "disabled")), w = c(u(a, "inline")), g = c(u(a, "required")), k = c(u(a, "state")), y = Pe(_o, null), $ = H(null);
    qe($, {
      initialValue: s.value
    });
    const b = d(() => !Ve(l.default)), _ = d({
      get: () => y !== null ? y.modelValue.value.map((F) => JSON.stringify(F)).includes(JSON.stringify(a.value)) : JSON.stringify(o.value) === JSON.stringify(a.value),
      set: (F) => {
        const P = F ? a.value : a.uncheckedValue;
        t("input", P), o.value = P, _e(() => {
          t("change", P);
        });
      }
    });
    ce(o, (F) => {
      if (y !== null) {
        if (F === !1) {
          y.remove(a.value);
          return;
        }
        y.set(a.value);
      }
    });
    const V = d(
      () => !!(a.name ?? (y == null ? void 0 : y.name.value)) && (g.value || (y == null ? void 0 : y.required.value))
    ), T = d(
      () => B.value || ((y == null ? void 0 : y.buttons.value) ?? !1)
    ), S = d(() => ({
      plain: f.value || ((y == null ? void 0 : y.plain.value) ?? !1),
      button: m.value || ((y == null ? void 0 : y.buttons.value) ?? !1),
      inline: w.value || ((y == null ? void 0 : y.inline.value) ?? !1),
      switch: h.value || ((y == null ? void 0 : y.switch.value) ?? !1),
      state: k.value || (y == null ? void 0 : y.state.value),
      size: a.size !== void 0 ? a.size : (y == null ? void 0 : y.size.value) ?? "md",
      // This is where the true default is made
      buttonVariant: a.buttonVariant !== void 0 ? a.buttonVariant : (y == null ? void 0 : y.buttonVariant.value) ?? "secondary"
      // This is where the true default is made
    })), O = en(S), I = tn(S), C = an(S);
    return (F, P) => (p(), M(Cn, {
      skip: i(T),
      class: R(i(O))
    }, {
      default: D(() => {
        var W, j, te;
        return [
          st(K("input", Q({ id: i(n) }, F.$attrs, {
            ref_key: "input",
            ref: $,
            "onUpdate:modelValue": P[0] || (P[0] = (X) => Ct(_) ? _.value = X : null),
            class: i(I),
            type: "checkbox",
            disabled: i(v) || ((W = i(y)) == null ? void 0 : W.disabled.value),
            required: i(V) ? !0 : void 0,
            name: e.name || ((j = i(y)) == null ? void 0 : j.name.value),
            form: e.form || ((te = i(y)) == null ? void 0 : te.form.value),
            "aria-label": e.ariaLabel,
            "aria-labelledby": e.ariaLabelledBy,
            "aria-required": i(V) ? !0 : void 0,
            value: e.value,
            indeterminate: i(r)
          }), null, 16, Lu), [
            [Xn, i(_)]
          ]),
          i(b) || i(f) === !1 ? (p(), A("label", {
            key: 0,
            for: i(n),
            class: R(i(C))
          }, [
            x(F.$slots, "default")
          ], 10, Nu)) : Z("", !0)
        ];
      }),
      _: 3
    }, 8, ["skip", "class"]));
  }
}), Ru = ["id"], Hu = ["innerHTML"], Mu = ["textContent"], Du = /* @__PURE__ */ N({
  __name: "BFormCheckboxGroup",
  props: {
    id: { default: void 0 },
    form: { default: void 0 },
    modelValue: { default: () => [] },
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    name: { default: void 0 },
    options: { default: () => [] },
    plain: { default: !1 },
    required: { default: !1 },
    size: { default: void 0 },
    stacked: { default: !1 },
    state: { default: null },
    switches: { default: !1 },
    textField: { default: "text" },
    validated: { default: !1 },
    valueField: { default: "value" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e, l = Te(a, "modelValue", t), o = Ce(u(a, "id"), "checkbox"), n = Ce(u(a, "name"), "checkbox"), r = c(u(a, "autofocus")), s = c(u(a, "buttons")), f = c(u(a, "disabled")), m = c(u(a, "plain")), B = c(u(a, "required")), h = c(u(a, "stacked")), v = c(u(a, "state")), w = c(u(a, "switches")), g = c(u(a, "validated")), k = H(null);
    qe(k, {
      initialValue: r.value
    }), Ze(_o, {
      set: (V) => {
        const T = [...l.value];
        T.push(V), t("input", T), l.value = T, _e(() => {
          t("change", T);
        });
      },
      remove: (V) => {
        const T = [...l.value];
        T.splice(l.value.indexOf(V), 1), t("input", T), l.value = T, _e(() => {
          t("change", T);
        });
      },
      modelValue: d(() => l.value),
      switch: w,
      buttonVariant: ke(u(a, "buttonVariant")),
      form: ke(u(a, "form")),
      name: n,
      state: v,
      plain: m,
      size: ke(u(a, "size")),
      inline: d(() => !h.value),
      required: B,
      buttons: s,
      disabled: f
    });
    const y = d(
      () => a.options.map(
        (V, T) => typeof V == "string" || typeof V == "number" ? {
          props: {
            value: V,
            disabled: f.value
          },
          text: V.toString(),
          html: void 0,
          self: Symbol(`checkboxGroupOptionItem${T}`)
        } : {
          props: {
            value: V[a.valueField],
            disabled: V[a.disabledField],
            ...V.props ? V.props : {}
          },
          text: V[a.textField],
          html: V[a.htmlField],
          self: Symbol(`checkboxGroupOptionItem${T}`)
        }
      )
    ), $ = d(() => ({
      required: B.value,
      ariaInvalid: a.ariaInvalid,
      state: v.value,
      validated: g.value,
      buttons: s.value,
      stacked: h.value,
      size: a.size
    })), b = ln($), _ = on($);
    return (V, T) => (p(), A("div", Q(i(b), {
      id: i(o),
      ref_key: "element",
      ref: k,
      role: "group",
      class: [i(_), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      x(V.$slots, "first"),
      (p(!0), A(fe, null, Be(i(y), (S) => (p(), M(Sn, Q({
        key: S.self
      }, S.props), {
        default: D(() => [
          S.html ? (p(), A("span", {
            key: 0,
            innerHTML: S.html
          }, null, 8, Hu)) : (p(), A("span", {
            key: 1,
            textContent: Y(S.text)
          }, null, 8, Mu))
        ]),
        _: 2
      }, 1040))), 128)),
      x(V.$slots, "default")
    ], 16, Ru));
  }
}), _n = ["input", "select", "textarea"], ju = _n.map((e) => `${e}:not([disabled])`).join(), qu = [..._n, "a", "button", "label"], Gu = "label", Wu = "invalid-feedback", Uu = "valid-feedback", Ku = "description", Xu = "default", Ju = N({
  components: { BCol: xt, BFormInvalidFeedback: xa, BFormRow: qt, BFormText: Aa, BFormValidFeedback: Va },
  props: {
    contentCols: { type: [Boolean, String, Number], default: void 0 },
    contentColsLg: { type: [Boolean, String, Number], default: void 0 },
    contentColsMd: { type: [Boolean, String, Number], default: void 0 },
    contentColsSm: { type: [Boolean, String, Number], default: void 0 },
    contentColsXl: { type: [Boolean, String, Number], default: void 0 },
    description: { type: [String], default: void 0 },
    disabled: { type: [Boolean, String], default: !1 },
    feedbackAriaLive: { type: String, default: "assertive" },
    id: { type: String, default: void 0 },
    invalidFeedback: { type: String, default: void 0 },
    label: { type: String, default: void 0 },
    labelAlign: { type: [Boolean, String, Number], default: void 0 },
    labelAlignLg: { type: [Boolean, String, Number], default: void 0 },
    labelAlignMd: { type: [Boolean, String, Number], default: void 0 },
    labelAlignSm: { type: [Boolean, String, Number], default: void 0 },
    labelAlignXl: { type: [Boolean, String, Number], default: void 0 },
    labelClass: { type: [Array, Object, String], default: void 0 },
    labelCols: { type: [Boolean, String, Number], default: void 0 },
    labelColsLg: { type: [Boolean, String, Number], default: void 0 },
    labelColsMd: { type: [Boolean, String, Number], default: void 0 },
    labelColsSm: { type: [Boolean, String, Number], default: void 0 },
    labelColsXl: { type: [Boolean, String, Number], default: void 0 },
    labelFor: { type: String, default: void 0 },
    labelSize: { type: String, default: void 0 },
    labelSrOnly: { type: [Boolean, String], default: !1 },
    state: { type: [Boolean, String], default: null },
    tooltip: { type: [Boolean, String], default: !1 },
    validFeedback: { type: String, default: void 0 },
    validated: { type: [Boolean, String], default: !1 },
    floating: { type: [Boolean, String], default: !1 }
  },
  setup(e, { attrs: t }) {
    const a = c(u(e, "disabled")), l = c(u(e, "labelSrOnly")), o = c(u(e, "state")), n = c(u(e, "tooltip")), r = c(u(e, "validated")), s = c(u(e, "floating")), f = null, m = ["xs", "sm", "md", "lg", "xl"], B = (S, O) => m.reduce((I, C) => {
      const F = ll(C === "xs" ? "" : C, `${O}Align`), P = S[F] || null;
      return P && (C === "xs" ? I.push(`text-${P}`) : I.push(`text-${C}-${P}`)), I;
    }, []), h = (S, O) => m.reduce((I, C) => {
      const F = ll(C === "xs" ? "" : C, `${O}Cols`);
      let P = S[F];
      return P = P === "" ? !0 : P || !1, typeof P != "boolean" && P !== "auto" && (P = Ss(P, 0), P = P > 0 ? P : !1), P && (C === "xs" ? I[typeof P == "boolean" ? "col" : "cols"] = P : I[C || (typeof P == "boolean" ? "col" : "cols")] = P), I;
    }, {}), v = H(), w = (S, O = null) => {
      if (za && e.labelFor) {
        const I = go(`#${ss(e.labelFor)}`, v);
        if (I) {
          const C = "aria-describedby", F = (S || "").split(jt), P = (O || "").split(jt), W = (Ra(I, C) || "").split(jt).filter((j) => !P.includes(j)).concat(F).filter((j, te, X) => X.indexOf(j) === te).filter((j) => j).join(" ").trim();
          W ? $s(I, C, W) : ws(I, C);
        }
      }
    }, g = d(() => h(e, "content")), k = d(() => B(e, "label")), y = d(() => h(e, "label")), $ = d(
      () => (
        // Determine if the form group will be rendered horizontal
        // based on the existence of 'content-col' or 'label-col' props
        Object.keys(g.value).length > 0 || Object.keys(y.value).length > 0
      )
    ), b = d(
      () => (
        // If not a boolean, ensure that value is null
        typeof o.value == "boolean" ? o.value : null
      )
    ), _ = d(() => {
      const S = b.value;
      return S === !0 ? "is-valid" : S === !1 ? "is-invalid" : null;
    }), V = d(
      () => ua(t.ariaInvalid, o.value)
    );
    return ce(
      () => f,
      (S, O) => {
        S !== O && w(S, O);
      }
    ), Ye(() => {
      _e(() => {
        w(f);
      });
    }), {
      disabledBoolean: a,
      labelSrOnlyBoolean: l,
      stateBoolean: o,
      tooltipBoolean: n,
      validatedBoolean: r,
      floatingBoolean: s,
      ariaDescribedby: f,
      computedAriaInvalid: V,
      contentColProps: g,
      isHorizontal: $,
      labelAlignClasses: k,
      labelColProps: y,
      onLegendClick: (S) => {
        if (e.labelFor)
          return;
        const { target: O } = S, I = O ? O.tagName : "";
        if (qu.indexOf(I) !== -1)
          return;
        const C = ys(ju, v).filter(hs);
        C.length === 1 && gs(C[0]);
      },
      stateClass: _
    };
  },
  render() {
    const e = this.$props, t = this.$slots, a = Ce(), l = !e.labelFor;
    let o = null;
    const n = De(Gu, {}, t) || e.label, r = n ? at("_BV_label_") : null;
    if (n || this.isHorizontal) {
      const V = l ? "legend" : "label";
      if (this.labelSrOnlyBoolean)
        n && (o = de(
          V,
          {
            class: "visually-hidden",
            id: r,
            for: e.labelFor || null
          },
          n
        )), this.isHorizontal ? o = de(xt, this.labelColProps, { default: () => o }) : o = de("div", {}, [o]);
      else {
        const T = {
          onClick: l ? this.onLegendClick : null,
          ...this.isHorizontal ? this.labelColProps : {},
          tag: this.isHorizontal ? V : null,
          id: r,
          for: e.labelFor || null,
          tabIndex: l ? "-1" : null,
          class: [
            this.isHorizontal ? "col-form-label" : "form-label",
            {
              "bv-no-focus-ring": l,
              "col-form-label": this.isHorizontal || l,
              "pt-0": !this.isHorizontal && l,
              "d-block": !this.isHorizontal && !l,
              [`col-form-label-${e.labelSize}`]: !!e.labelSize
            },
            this.labelAlignClasses,
            e.labelClass
          ]
        };
        this.isHorizontal ? o = de(xt, T, { default: () => n }) : o = de(V, T, n);
      }
    }
    let s = null;
    const f = De(Wu, {}, t) || this.invalidFeedback, m = f ? at("_BV_feedback_invalid_") : void 0;
    f && (s = de(
      xa,
      {
        ariaLive: e.feedbackAriaLive,
        id: m,
        state: this.stateBoolean,
        tooltip: this.tooltipBoolean
      },
      { default: () => f }
    ));
    let B = null;
    const h = De(Uu, {}, t) || this.validFeedback, v = h ? at("_BV_feedback_valid_") : void 0;
    h && (B = de(
      Va,
      {
        ariaLive: e.feedbackAriaLive,
        id: v,
        state: this.stateBoolean,
        tooltip: this.tooltipBoolean
      },
      { default: () => h }
      // validFeedbackContent
    ));
    let w = null;
    const g = De(Ku, {}, t) || this.description, k = g ? at("_BV_description_") : void 0;
    g && (w = de(
      Aa,
      {
        id: k
      },
      { default: () => g }
    ));
    const y = this.ariaDescribedby = [
      k,
      this.stateBoolean === !1 ? m : null,
      this.stateBoolean === !0 ? v : null
    ].filter((V) => V).join(" ") || null, $ = [
      De(Xu, { ariaDescribedby: y, descriptionId: k, id: a, labelId: r }, t) || "",
      s,
      B,
      w
    ];
    !this.isHorizontal && this.floatingBoolean && $.push(o);
    let b = de(
      "div",
      {
        ref: "content",
        class: [
          {
            "form-floating": !this.isHorizontal && this.floatingBoolean
          }
        ]
      },
      $
    );
    this.isHorizontal && (b = de(xt, { ref: "content", ...this.contentColProps }, { default: () => $ }));
    const _ = {
      class: [
        this.stateClass,
        {
          "was-validated": this.validatedBoolean
        }
      ],
      id: Ce(u(e, "id")).value,
      disabled: l ? this.disabledBoolean : null,
      role: l ? null : "group",
      "aria-invalid": this.computedAriaInvalid,
      // Only apply `aria-labelledby` if we are a horizontal fieldset
      // as the legend is no longer a direct child of fieldset
      "aria-labelledby": l && this.isHorizontal ? r : null
    };
    return this.isHorizontal && !l ? de(qt, _, { default: () => [o, b] }) : de(
      l ? "fieldset" : "div",
      _,
      this.isHorizontal && l ? [de(qt, null, { default: () => [o, b] })] : this.isHorizontal || !this.floatingBoolean ? [o, b] : [b]
    );
  }
}), Nl = [
  "text",
  "number",
  "email",
  "password",
  "search",
  "url",
  "tel",
  "date",
  "time",
  "range",
  "color",
  "datetime",
  "datetime-local",
  "month",
  "week"
], Yu = N({
  props: {
    ...nn,
    // debounce: {type: [String, Number], default: 0}, TODO: not implemented yet
    max: { type: [String, Number], default: void 0 },
    min: { type: [String, Number], default: void 0 },
    // noWheel: {type: [Boolean, String] as PropType<Booleanish>, default: false}, TODO: not implemented yet
    step: { type: [String, Number], default: void 0 },
    type: {
      type: String,
      default: "text",
      validator: (e) => Nl.includes(e)
    }
  },
  emits: ["update:modelValue", "change", "blur", "input"],
  setup(e, { emit: t }) {
    const { input: a, computedId: l, computedAriaInvalid: o, onInput: n, onChange: r, onBlur: s, focus: f, blur: m } = sn(e, t), B = H(!1), h = d(() => {
      const g = e.type === "range", k = e.type === "color";
      return {
        "form-control-highlighted": B.value,
        "form-range": g,
        "form-control": k || !e.plaintext && !g,
        "form-control-color": k,
        "form-control-plaintext": e.plaintext && !g && !k,
        [`form-control-${e.size}`]: !!e.size,
        "is-valid": e.state === !0,
        "is-invalid": e.state === !1
      };
    }), v = d(
      () => Nl.includes(e.type) ? e.type : "text"
    );
    return {
      computedClasses: h,
      localType: v,
      input: a,
      computedId: l,
      computedAriaInvalid: o,
      onInput: n,
      onChange: r,
      onBlur: s,
      focus: f,
      blur: m,
      highlight: () => {
        B.value !== !0 && (B.value = !0, setTimeout(() => {
          B.value = !1;
        }, 2e3));
      }
    };
  }
}), Zu = ["id", "name", "form", "type", "disabled", "placeholder", "required", "autocomplete", "readonly", "min", "max", "step", "list", "aria-required", "aria-invalid"];
function Qu(e, t, a, l, o, n) {
  return p(), A("input", {
    id: e.computedId,
    ref: "input",
    class: R(e.computedClasses),
    name: e.name || void 0,
    form: e.form || void 0,
    type: e.localType,
    disabled: e.disabled,
    placeholder: e.placeholder,
    required: e.required,
    autocomplete: e.autocomplete || void 0,
    readonly: e.readonly || e.plaintext,
    min: e.min,
    max: e.max,
    step: e.step,
    list: e.type !== "password" ? e.list : void 0,
    "aria-required": e.required ? !0 : void 0,
    "aria-invalid": e.computedAriaInvalid,
    onInput: t[0] || (t[0] = (r) => e.onInput(r)),
    onChange: t[1] || (t[1] = (r) => e.onChange(r)),
    onBlur: t[2] || (t[2] = (r) => e.onBlur(r))
  }, null, 42, Zu);
}
const ed = /* @__PURE__ */ ze(Yu, [["render", Qu]]), td = ["id", "checked", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "value", "aria-required"], ad = ["for"], ld = {
  inheritAttrs: !1
}, Tn = /* @__PURE__ */ N({
  ...ld,
  __name: "BFormRadio",
  props: {
    ariaLabel: { default: void 0 },
    ariaLabelledby: { default: void 0 },
    form: { default: void 0 },
    id: { default: void 0 },
    name: { default: void 0 },
    size: { default: void 0 },
    autofocus: { default: !1 },
    modelValue: { type: [Boolean, String, Array, Object, Number, null], default: void 0 },
    plain: { default: !1 },
    button: { default: !1 },
    buttonGroup: { default: !1 },
    disabled: { default: !1 },
    buttonVariant: { default: void 0 },
    inline: { default: !1 },
    required: { default: !1 },
    state: { default: null },
    value: { type: [String, Boolean, Object, Number], default: !0 }
  },
  emits: ["input", "change", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = Ee(), o = Te(a, "modelValue", t, { passive: !0 }), n = Ce(u(a, "id"), "form-check"), r = c(u(a, "autofocus")), s = c(u(a, "plain")), f = c(u(a, "button")), m = c(u(a, "buttonGroup")), B = c(u(a, "disabled")), h = c(u(a, "inline")), v = c(u(a, "required")), w = c(u(a, "state")), g = Pe(To, null), k = H(null);
    qe(k, {
      initialValue: r.value
    });
    const y = d(() => !Ve(l.default)), $ = d({
      get: () => g !== null ? JSON.stringify(g.modelValue.value) === JSON.stringify(a.value) : JSON.stringify(o.value) === JSON.stringify(a.value),
      set: (I) => {
        const C = I || I === 0 ? a.value : !1;
        t("input", C), o.value = C, _e(() => {
          t("change", C);
        });
      }
    });
    ce(
      () => g == null ? void 0 : g.modelValue.value,
      (I) => {
        JSON.stringify(I) === JSON.stringify(a.value) !== !0 && ($.value = !1);
      }
    ), ce(o, (I) => {
      g === null || I === !1 || g.set(a.value);
    });
    const b = d(
      () => !!(a.name ?? (g == null ? void 0 : g.name.value)) && (v.value || (g == null ? void 0 : g.required.value))
    ), _ = d(
      () => m.value || ((g == null ? void 0 : g.buttons.value) ?? !1)
    ), V = d(() => ({
      plain: s.value || ((g == null ? void 0 : g.plain.value) ?? !1),
      button: f.value || ((g == null ? void 0 : g.buttons.value) ?? !1),
      inline: h.value || ((g == null ? void 0 : g.inline.value) ?? !1),
      state: w.value || (g == null ? void 0 : g.state.value),
      size: a.size !== void 0 ? a.size : (g == null ? void 0 : g.size.value) ?? "md",
      // This is where the true default is made
      buttonVariant: a.buttonVariant !== void 0 ? a.buttonVariant : (g == null ? void 0 : g.buttonVariant.value) ?? "secondary"
      // This is where the true default is made
    })), T = en(V), S = tn(V), O = an(V);
    return (I, C) => (p(), M(Cn, {
      skip: i(_),
      class: R(i(T))
    }, {
      default: D(() => {
        var F, P, W;
        return [
          st(K("input", Q({ id: i(n) }, I.$attrs, {
            ref_key: "input",
            ref: k,
            "onUpdate:modelValue": C[0] || (C[0] = (j) => Ct($) ? $.value = j : null),
            checked: i($),
            class: i(S),
            type: "radio",
            disabled: i(B) || ((F = i(g)) == null ? void 0 : F.disabled.value),
            required: i(b) ? !0 : void 0,
            name: e.name || ((P = i(g)) == null ? void 0 : P.name.value),
            form: e.form || ((W = i(g)) == null ? void 0 : W.form.value),
            "aria-label": e.ariaLabel,
            "aria-labelledby": e.ariaLabelledby,
            value: e.value,
            "aria-required": i(b) ? !0 : void 0
          }), null, 16, td), [
            [Jn, i($)]
          ]),
          i(y) || i(s) === !1 ? (p(), A("label", {
            key: 0,
            for: i(n),
            class: R(i(O))
          }, [
            x(I.$slots, "default")
          ], 10, ad)) : Z("", !0)
        ];
      }),
      _: 3
    }, 8, ["skip", "class"]));
  }
}), od = ["id"], nd = ["innerHTML"], sd = ["textContent"], id = /* @__PURE__ */ N({
  __name: "BFormRadioGroup",
  props: {
    size: { default: void 0 },
    form: { default: void 0 },
    id: { default: void 0 },
    name: { default: void 0 },
    modelValue: { type: [String, Boolean, Array, Object, Number, null], default: null },
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    options: { default: () => [] },
    plain: { default: !1 },
    required: { default: !1 },
    stacked: { default: !1 },
    state: { default: null },
    textField: { default: "text" },
    validated: { default: !1 },
    valueField: { default: "value" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e, l = Te(a, "modelValue", t), o = Ce(u(a, "id"), "radio"), n = Ce(u(a, "name"), "checkbox"), r = c(u(a, "autofocus")), s = c(u(a, "buttons")), f = c(u(a, "disabled")), m = c(u(a, "plain")), B = c(u(a, "required")), h = c(u(a, "stacked")), v = c(u(a, "state")), w = c(u(a, "validated")), g = H(null);
    qe(g, {
      initialValue: r.value
    }), Ze(To, {
      set: (_) => {
        t("input", _), l.value = _, _e(() => {
          t("change", _);
        });
      },
      modelValue: d(() => l.value),
      buttonVariant: ke(u(a, "buttonVariant")),
      form: ke(u(a, "form")),
      name: n,
      buttons: s,
      state: v,
      plain: m,
      size: ke(u(a, "size")),
      inline: d(() => !h.value),
      required: B,
      disabled: f
    });
    const k = d(
      () => a.options.map(
        (_, V) => typeof _ == "string" || typeof _ == "number" ? {
          props: {
            value: _,
            disabled: f.value
          },
          text: _.toString(),
          html: void 0,
          self: Symbol(`radioGroupOptionItem${V}`)
        } : {
          props: {
            value: _[a.valueField],
            disabled: _[a.disabledField],
            ..._.props ? _.props : {}
          },
          text: _[a.textField],
          html: _[a.htmlField],
          self: Symbol(`radioGroupOptionItem${V}`)
        }
      )
    ), y = d(() => ({
      required: B.value,
      ariaInvalid: a.ariaInvalid,
      state: v.value,
      validated: w.value,
      buttons: s.value,
      stacked: h.value,
      size: a.size
    })), $ = ln(y), b = on(y);
    return (_, V) => (p(), A("div", Q(i($), {
      id: i(o),
      ref_key: "element",
      ref: g,
      role: "radiogroup",
      class: [i(b), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      x(_.$slots, "first"),
      (p(!0), A(fe, null, Be(i(k), (T) => (p(), M(Tn, Q({
        key: T.self
      }, T.props), {
        default: D(() => [
          T.html ? (p(), A("span", {
            key: 0,
            innerHTML: T.html
          }, null, 8, nd)) : (p(), A("span", {
            key: 1,
            textContent: Y(T.text)
          }, null, 8, sd))
        ]),
        _: 2
      }, 1040))), 128)),
      x(_.$slots, "default")
    ], 16, od));
  }
}), rd = ["value", "disabled"], Xa = /* @__PURE__ */ N({
  __name: "BFormSelectOption",
  props: {
    value: { default: void 0 },
    disabled: { default: !1 }
  },
  setup(e) {
    const a = c(u(e, "disabled"));
    return (l, o) => (p(), A("option", {
      value: e.value,
      disabled: i(a)
    }, [
      x(l.$slots, "default")
    ], 8, rd));
  }
}), ud = ["label"], xn = /* @__PURE__ */ N({
  __name: "BFormSelectOptionGroup",
  props: {
    label: { default: void 0 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    options: { default: () => [] },
    textField: { default: "text" },
    valueField: { default: "value" }
  },
  setup(e) {
    const t = e, a = d(
      () => Wa(t.options, "BFormSelectOptionGroup", t)
    );
    return (l, o) => (p(), A("optgroup", { label: e.label }, [
      x(l.$slots, "first"),
      (p(!0), A(fe, null, Be(i(a), (n, r) => (p(), M(Xa, Q({
        key: r,
        value: n.value,
        disabled: n.disabled
      }, l.$attrs, {
        innerHTML: n.html || n.text
      }), null, 16, ["value", "disabled", "innerHTML"]))), 128)),
      x(l.$slots, "default")
    ], 8, ud));
  }
}), dd = ["id", "name", "form", "multiple", "size", "disabled", "required", "aria-required", "aria-invalid"], cd = /* @__PURE__ */ N({
  __name: "BFormSelect",
  props: {
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    form: { default: void 0 },
    htmlField: { default: "html" },
    id: { default: void 0 },
    labelField: { default: "label" },
    multiple: { default: !1 },
    name: { default: void 0 },
    options: { default: () => [] },
    optionsField: { default: "options" },
    plain: { default: !1 },
    required: { default: !1 },
    selectSize: { default: 0 },
    size: { default: void 0 },
    state: { default: null },
    textField: { default: "text" },
    valueField: { default: "value" },
    modelValue: { default: "" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e, l = Te(a, "modelValue", t), o = Ce(u(a, "id"), "input"), n = c(u(a, "autofocus")), r = c(u(a, "disabled")), s = c(u(a, "multiple")), f = c(u(a, "plain")), m = c(u(a, "required")), B = c(u(a, "state")), h = H();
    qe(h, {
      initialValue: n.value
    });
    const v = d(() => ({
      "form-control": f.value,
      [`form-control-${a.size}`]: a.size && f.value,
      "form-select": !f.value,
      [`form-select-${a.size}`]: a.size && !f.value,
      "is-valid": B.value === !0,
      "is-invalid": B.value === !1
    })), w = d(() => {
      if (a.selectSize || f.value)
        return a.selectSize;
    }), g = d(
      () => ua(a.ariaInvalid, B.value)
    ), k = d(() => Wa(a.options, "BFormSelect", a)), y = d({
      get: () => l.value,
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      set: ($) => {
        t("change", $), l.value = $, t("input", $);
      }
    });
    return ($, b) => st((p(), A("select", Q({
      id: i(o),
      ref_key: "input",
      ref: h
    }, $.$attrs, {
      "onUpdate:modelValue": b[0] || (b[0] = (_) => Ct(y) ? y.value = _ : null),
      class: i(v),
      name: e.name,
      form: e.form || void 0,
      multiple: i(s) || void 0,
      size: i(w),
      disabled: i(r),
      required: i(m),
      "aria-required": i(m) ? !0 : void 0,
      "aria-invalid": i(g)
    }), [
      x($.$slots, "first"),
      (p(!0), A(fe, null, Be(i(k), (_, V) => (p(), A(fe, { key: V }, [
        Array.isArray(_.options) ? (p(), M(xn, {
          key: 0,
          label: _.label,
          options: _.options
        }, null, 8, ["label", "options"])) : (p(), M(Xa, {
          key: 1,
          value: _.value,
          disabled: _.disabled,
          innerHTML: _.html || _.text
        }, null, 8, ["value", "disabled", "innerHTML"]))
      ], 64))), 128)),
      x($.$slots, "default")
    ], 16, dd)), [
      [Yn, i(y)]
    ]);
  }
}), fd = ["id"], An = /* @__PURE__ */ N({
  __name: "BFormTag",
  props: {
    id: { default: void 0 },
    title: { default: void 0 },
    disabled: { default: !1 },
    noRemove: { default: !1 },
    pill: { default: !1 },
    removeLabel: { default: "Remove tag" },
    tag: { default: "span" },
    variant: { default: "secondary" }
  },
  emits: ["remove"],
  setup(e, { emit: t }) {
    const a = e, l = Ee(), o = Ce(u(a, "id")), n = c(u(a, "disabled")), r = c(u(a, "noRemove")), s = c(u(a, "pill")), f = d(
      () => {
        var h;
        return ((((h = l.default) == null ? void 0 : h.call(l)[0].children) ?? "").toString() || a.title) ?? "";
      }
    ), m = d(() => `${o.value}taglabel__`), B = d(() => [
      `bg-${a.variant}`,
      {
        "text-dark": ["warning", "info", "light"].includes(a.variant),
        "rounded-pill": s.value,
        disabled: n.value
      }
    ]);
    return (h, v) => (p(), M(le(e.tag), {
      id: i(o),
      title: i(f),
      class: R(["badge b-form-tag d-inline-flex align-items-center mw-100", i(B)]),
      "aria-labelledby": i(m)
    }, {
      default: D(() => [
        K("span", {
          id: i(m),
          class: "b-form-tag-content flex-grow-1 text-truncate"
        }, [
          x(h.$slots, "default", {}, () => [
            se(Y(i(f)), 1)
          ])
        ], 8, fd),
        !i(n) && !i(r) ? (p(), M(Tt, {
          key: 0,
          "aria-keyshortcuts": "Delete",
          "aria-label": e.removeLabel,
          class: "b-form-tag-remove",
          white: !["warning", "info", "light"].includes(e.variant),
          "aria-describedby": i(m),
          "aria-controls": e.id,
          onClick: v[0] || (v[0] = (w) => t("remove", i(f)))
        }, null, 8, ["aria-label", "white", "aria-describedby", "aria-controls"])) : Z("", !0)
      ]),
      _: 3
    }, 8, ["id", "title", "class", "aria-labelledby"]));
  }
}), vd = ["id"], md = ["id", "for", "aria-live"], pd = ["id", "aria-live"], gd = ["id"], bd = ["aria-controls"], hd = {
  role: "group",
  class: "d-flex"
}, yd = ["id", "disabled", "value", "type", "placeholder", "form", "required"], Bd = ["disabled"], $d = {
  "aria-live": "polite",
  "aria-atomic": "true"
}, wd = {
  key: 0,
  class: "d-block invalid-feedback"
}, kd = {
  key: 1,
  class: "form-text text-muted"
}, Cd = {
  key: 2,
  class: "form-text text-muted"
}, Sd = ["name", "value"], _d = /* @__PURE__ */ N({
  __name: "BFormTags",
  props: {
    addButtonText: { default: "Add" },
    addButtonVariant: { default: "outline-secondary" },
    addOnChange: { default: !1 },
    autofocus: { default: !1 },
    disabled: { default: !1 },
    duplicateTagText: { default: "Duplicate tag(s)" },
    inputAttrs: { default: void 0 },
    inputClass: { default: void 0 },
    inputId: { default: void 0 },
    inputType: { default: "text" },
    invalidTagText: { default: "Invalid tag(s)" },
    form: { default: void 0 },
    limit: { default: void 0 },
    limitTagsText: { default: "Tag limit reached" },
    modelValue: { default: () => [] },
    name: { default: void 0 },
    noAddOnEnter: { default: !1 },
    noOuterFocus: { default: !1 },
    noTagRemove: { default: !1 },
    placeholder: { default: "Add tag..." },
    removeOnDelete: { default: !1 },
    required: { default: !1 },
    separator: { default: void 0 },
    state: { default: null },
    size: { default: void 0 },
    tagClass: { default: void 0 },
    tagPills: { default: !1 },
    tagRemoveLabel: { default: void 0 },
    tagRemovedLabel: { default: "Tag removed" },
    tagValidator: { type: Function, default: () => !0 },
    tagVariant: { default: "secondary" }
  },
  emits: ["update:modelValue", "input", "tag-state", "focus", "focusin", "focusout", "blur"],
  setup(e, { emit: t }) {
    const a = e, l = Te(a, "modelValue", t), o = Ce(), n = c(u(a, "addOnChange")), r = c(u(a, "autofocus")), s = c(u(a, "disabled")), f = c(u(a, "noAddOnEnter")), m = c(u(a, "noOuterFocus")), B = c(u(a, "noTagRemove")), h = c(u(a, "removeOnDelete")), v = c(u(a, "required")), w = c(u(a, "state")), g = c(u(a, "tagPills")), k = H(null), { focused: y } = qe(k, {
      initialValue: r.value
    }), $ = d(() => a.inputId || `${o.value}input__`), b = H(l.value), _ = H(""), V = H(l.value.length > 0), T = H(!1), S = H(""), O = H([]), I = H([]), C = H([]), F = d(() => ({
      [`form-control-${a.size}`]: a.size !== void 0,
      disabled: s.value,
      focus: T.value,
      "is-invalid": w.value === !1,
      "is-valid": w.value === !0
    })), P = d(() => b.value.includes(_.value)), W = d(
      () => _.value === "" ? !1 : !a.tagValidator(_.value)
    ), j = d(() => b.value.length === a.limit), te = d(() => !W.value && !P.value), X = d(() => ({
      addButtonText: a.addButtonText,
      addButtonVariant: a.addButtonVariant,
      addTag: ve,
      disableAddButton: te.value,
      disabled: s.value,
      duplicateTagText: a.duplicateTagText,
      duplicateTags: C.value,
      form: a.form,
      inputAttrs: {
        ...a.inputAttrs,
        disabled: s.value,
        form: a.form,
        id: $,
        value: _
      },
      inputHandlers: {
        input: pe,
        keydown: ne,
        change: be
      },
      inputId: $,
      inputType: a.inputType,
      invalidTagText: a.invalidTagText,
      invalidTags: I.value,
      isDuplicate: P.value,
      isInvalid: W.value,
      isLimitReached: j.value,
      limitTagsText: a.limitTagsText,
      limit: a.limit,
      noTagRemove: B.value,
      placeholder: a.placeholder,
      removeTag: L,
      required: v.value,
      separator: a.separator,
      size: a.size,
      state: w.value,
      tagClass: a.tagClass,
      tagPills: g.value,
      tagRemoveLabel: a.tagRemoveLabel,
      tagVariant: a.tagVariant,
      tags: b.value
    }));
    ce(l, (z) => {
      b.value = z;
    });
    const q = (z) => {
      if (s.value) {
        z.target.blur();
        return;
      }
      t("focusin", z);
    }, ae = (z) => {
      s.value || m.value || (T.value = !0, t("focus", z));
    }, me = (z) => {
      T.value = !1, t("blur", z);
    }, pe = (z) => {
      var re, he;
      const ee = typeof z == "string" ? z : z.target.value;
      if (V.value = !1, (re = a.separator) != null && re.includes(ee.charAt(0)) && ee.length > 0) {
        k.value && (k.value.value = "");
        return;
      }
      if (_.value = ee, (he = a.separator) != null && he.includes(ee.charAt(ee.length - 1))) {
        ve(ee.slice(0, ee.length - 1));
        return;
      }
      O.value = a.tagValidator(ee) && !P.value ? [ee] : [], I.value = a.tagValidator(ee) ? [] : [ee], C.value = P.value ? [ee] : [], t("tag-state", O.value, I.value, C.value);
    }, be = (z) => {
      n.value && (pe(z), P.value || ve(_.value));
    }, ne = (z) => {
      if (z.key === "Enter" && !f.value) {
        ve(_.value);
        return;
      }
      (z.key === "Backspace" || z.key === "Delete") && h.value && _.value === "" && V.value && b.value.length > 0 ? L(b.value[b.value.length - 1]) : V.value = !0;
    }, ve = (z) => {
      if (z = (z || _.value).trim(), z === "" || P.value || !a.tagValidator(z) || a.limit && j.value)
        return;
      const ee = [...l.value, z];
      _.value = "", V.value = !0, l.value = ee, t("input", ee), y.value = !0;
    }, L = (z) => {
      const ee = b.value.indexOf((z == null ? void 0 : z.toString()) ?? "");
      S.value = b.value.splice(ee, 1).toString(), l.value = b.value;
    };
    return (z, ee) => (p(), A("div", {
      id: i(o),
      class: R(["b-form-tags form-control h-auto", i(F)]),
      role: "group",
      tabindex: "-1",
      onFocusin: q,
      onFocusout: ee[1] || (ee[1] = (re) => t("focusout", re))
    }, [
      K("output", {
        id: `${i(o)}selected_tags__`,
        class: "visually-hidden",
        for: i($),
        "aria-live": T.value ? "polite" : "off",
        "aria-atomic": "true",
        "aria-relevant": "additions text"
      }, Y(b.value.join(", ")), 9, md),
      K("div", {
        id: `${i(o)}removed_tags__`,
        role: "status",
        "aria-live": T.value ? "assertive" : "off",
        "aria-atomic": "true",
        class: "visually-hidden"
      }, " (" + Y(e.tagRemovedLabel) + ") " + Y(S.value), 9, pd),
      x(z.$slots, "default", $e(Ae(i(X))), () => [
        K("ul", {
          id: `${i(o)}tag_list__`,
          class: "b-form-tags-list list-unstyled mb-0 d-flex flex-wrap align-items-center"
        }, [
          (p(!0), A(fe, null, Be(b.value, (re, he) => x(z.$slots, "tag", $e(Q({ key: he }, { tag: re, tagClass: e.tagClass, tagVariant: e.tagVariant, tagPills: i(g), removeTag: L })), () => [
            (p(), M(An, {
              key: re,
              class: R(e.tagClass),
              tag: "li",
              variant: e.tagVariant,
              pill: e.tagPills,
              onRemove: L
            }, {
              default: D(() => [
                se(Y(re), 1)
              ]),
              _: 2
            }, 1032, ["class", "variant", "pill"]))
          ])), 128)),
          K("li", {
            role: "none",
            "aria-live": "off",
            class: "b-from-tags-field flex-grow-1",
            "aria-controls": `${i(o)}tag_list__`
          }, [
            K("div", hd, [
              K("input", Q({
                id: i($),
                ref_key: "input",
                ref: k,
                disabled: i(s),
                value: _.value,
                type: e.inputType,
                placeholder: e.placeholder,
                class: "b-form-tags-input w-100 flex-grow-1 p-0 m-0 bg-transparent border-0",
                style: { outline: "currentcolor none 0px", "min-width": "5rem" }
              }, e.inputAttrs, {
                form: e.form,
                required: i(v),
                onInput: pe,
                onChange: be,
                onKeydown: ne,
                onFocus: ae,
                onBlur: me
              }), null, 16, yd),
              i(te) ? (p(), A("button", {
                key: 0,
                type: "button",
                class: R(["btn b-form-tags-button py-0", [
                  `btn-${e.addButtonVariant}`,
                  {
                    "disabled invisible": _.value.length === 0
                  },
                  e.inputClass
                ]]),
                style: { "font-size": "90%" },
                disabled: i(s) || _.value.length === 0 || i(j),
                onClick: ee[0] || (ee[0] = (re) => ve(_.value))
              }, [
                x(z.$slots, "add-button-text", {}, () => [
                  se(Y(e.addButtonText), 1)
                ])
              ], 10, Bd)) : Z("", !0)
            ])
          ], 8, bd)
        ], 8, gd),
        K("div", $d, [
          i(W) ? (p(), A("div", wd, Y(e.invalidTagText) + ": " + Y(_.value), 1)) : Z("", !0),
          i(P) ? (p(), A("small", kd, Y(e.duplicateTagText) + ": " + Y(_.value), 1)) : Z("", !0),
          b.value.length === e.limit ? (p(), A("small", Cd, "Tag limit reached")) : Z("", !0)
        ])
      ]),
      e.name ? (p(!0), A(fe, { key: 0 }, Be(b.value, (re, he) => (p(), A("input", {
        key: he,
        type: "hidden",
        name: e.name,
        value: re
      }, null, 8, Sd))), 128)) : Z("", !0)
    ], 42, vd));
  }
}), Td = N({
  props: {
    ...nn,
    noResize: { type: [Boolean, String], default: !1 },
    rows: { type: [String, Number], required: !1, default: 2 },
    wrap: { type: String, default: "soft" }
  },
  emits: ["update:modelValue", "change", "blur", "input"],
  setup(e, { emit: t }) {
    const { input: a, computedId: l, computedAriaInvalid: o, onInput: n, onChange: r, onBlur: s, focus: f, blur: m } = sn(e, t), B = c(u(e, "noResize")), h = d(() => ({
      "form-control": !e.plaintext,
      "form-control-plaintext": e.plaintext,
      [`form-control-${e.size}`]: !!e.size,
      "is-valid": e.state === !0,
      "is-invalid": e.state === !1
    })), v = d(() => ({
      resize: B.value ? "none" : void 0
    }));
    return {
      input: a,
      computedId: l,
      computedAriaInvalid: o,
      onInput: n,
      onChange: r,
      onBlur: s,
      focus: f,
      blur: m,
      computedClasses: h,
      computedStyles: v
    };
  }
}), xd = ["id", "name", "form", "disabled", "placeholder", "required", "autocomplete", "readonly", "aria-required", "aria-invalid", "rows", "wrap"];
function Ad(e, t, a, l, o, n) {
  return p(), A("textarea", {
    id: e.computedId,
    ref: "input",
    class: R(e.computedClasses),
    name: e.name || void 0,
    form: e.form || void 0,
    disabled: e.disabled,
    placeholder: e.placeholder,
    required: e.required,
    autocomplete: e.autocomplete || void 0,
    readonly: e.readonly || e.plaintext,
    "aria-required": e.required ? !0 : void 0,
    "aria-invalid": e.computedAriaInvalid,
    rows: e.rows,
    style: Le(e.computedStyles),
    wrap: e.wrap || void 0,
    onInput: t[0] || (t[0] = (r) => e.onInput(r)),
    onChange: t[1] || (t[1] = (r) => e.onChange(r)),
    onBlur: t[2] || (t[2] = (r) => e.onBlur(r))
  }, null, 46, xd);
}
const Vd = /* @__PURE__ */ ze(Td, [["render", Ad]]), Od = {
  key: 0,
  class: "input-group-text"
}, Pd = ["innerHTML"], Ed = { key: 1 }, Id = {
  key: 0,
  class: "input-group-text"
}, Fd = ["innerHTML"], Ld = { key: 1 }, Nd = /* @__PURE__ */ N({
  __name: "BInputGroup",
  props: {
    append: { default: void 0 },
    appendHtml: { default: void 0 },
    id: { default: void 0 },
    prepend: { default: void 0 },
    prependHtml: { default: void 0 },
    size: { default: void 0 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = d(() => ({
      "input-group-sm": t.size === "sm",
      "input-group-lg": t.size === "lg"
    })), l = d(() => !!t.append || !!t.appendHtml), o = d(() => !!t.prepend || !!t.prependHtml);
    return (n, r) => (p(), M(le(e.tag), {
      id: e.id,
      class: R(["input-group", i(a)]),
      role: "group"
    }, {
      default: D(() => [
        x(n.$slots, "prepend", {}, () => [
          i(o) ? (p(), A("span", Od, [
            e.prependHtml ? (p(), A("span", {
              key: 0,
              innerHTML: e.prependHtml
            }, null, 8, Pd)) : (p(), A("span", Ed, Y(e.prepend), 1))
          ])) : Z("", !0)
        ]),
        x(n.$slots, "default"),
        x(n.$slots, "append", {}, () => [
          i(l) ? (p(), A("span", Id, [
            e.appendHtml ? (p(), A("span", {
              key: 0,
              innerHTML: e.appendHtml
            }, null, 8, Fd)) : (p(), A("span", Ld, Y(e.append), 1))
          ])) : Z("", !0)
        ])
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Vn = /* @__PURE__ */ N({
  __name: "BInputGroupText",
  props: {
    tag: { default: "div" },
    text: { default: void 0 }
  },
  setup(e) {
    return (t, a) => (p(), M(le(e.tag), { class: "input-group-text" }, {
      default: D(() => [
        x(t.$slots, "default", {}, () => [
          se(Y(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), Ja = /* @__PURE__ */ N({
  __name: "BInputGroupAddon",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    const a = c(u(e, "isText"));
    return (l, o) => i(a) ? (p(), M(Vn, { key: 0 }, {
      default: D(() => [
        x(l.$slots, "default")
      ]),
      _: 3
    })) : x(l.$slots, "default", { key: 1 });
  }
}), zd = /* @__PURE__ */ N({
  __name: "BInputGroupAppend",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    return (t, a) => (p(), M(Ja, { "is-text": e.isText }, {
      default: D(() => [
        x(t.$slots, "default")
      ]),
      _: 3
    }, 8, ["is-text"]));
  }
}), Rd = /* @__PURE__ */ N({
  __name: "BInputGroupPrepend",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    return (t, a) => (p(), M(Ja, { "is-text": e.isText }, {
      default: D(() => [
        x(t.$slots, "default")
      ]),
      _: 3
    }, 8, ["is-text"]));
  }
}), Hd = /* @__PURE__ */ N({
  __name: "BListGroup",
  props: {
    flush: { default: !1 },
    horizontal: { type: [Boolean, String], default: !1 },
    numbered: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = c(u(t, "flush")), l = c(u(t, "numbered")), o = d(() => {
      const r = a.value ? !1 : t.horizontal;
      return {
        "list-group-flush": a.value,
        "list-group-horizontal": r === !0,
        [`list-group-horizontal-${r}`]: typeof r == "string",
        "list-group-numbered": l.value
      };
    }), n = d(() => l.value === !0 ? "ol" : t.tag);
    return Ze(ko, {
      numbered: l
    }), (r, s) => (p(), M(le(i(n)), {
      class: R(["list-group", i(o)])
    }, {
      default: D(() => [
        x(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Md = /* @__PURE__ */ N({
  __name: "BListGroupItem",
  props: {
    action: { default: !1 },
    active: { default: !1 },
    button: { default: !1 },
    disabled: { default: !1 },
    href: { default: void 0 },
    tag: { default: "div" },
    target: { default: "_self" },
    to: { default: void 0 },
    variant: { default: void 0 }
  },
  setup(e) {
    const t = e, a = oo(), l = Pe(ko, null), o = c(u(t, "action")), n = c(u(t, "active")), r = c(u(t, "button")), s = c(u(t, "disabled")), f = d(() => !r.value && (!!t.href || !!t.to)), m = d(
      () => l != null && l.numbered.value ? "li" : r.value ? "button" : f.value ? Ne : t.tag
    ), B = d(
      () => o.value || f.value || r.value || ["a", "router-link", "button", "b-link"].includes(t.tag)
    ), h = d(() => ({
      [`list-group-item-${t.variant}`]: t.variant !== void 0,
      "list-group-item-action": B.value,
      active: n.value,
      disabled: s.value
    })), v = d(() => {
      const w = {};
      return r.value && ((!a || !a.type) && (w.type = "button"), s.value && (w.disabled = !0)), w;
    });
    return (w, g) => (p(), M(le(i(m)), Q({
      class: ["list-group-item", i(h)],
      "aria-current": i(n) ? !0 : void 0,
      "aria-disabled": i(s) ? !0 : void 0,
      target: i(f) ? e.target : void 0,
      href: i(r) ? void 0 : e.href,
      to: i(r) ? void 0 : e.to
    }, i(v)), {
      default: D(() => [
        x(w.$slots, "default")
      ]),
      _: 3
    }, 16, ["class", "aria-current", "aria-disabled", "target", "href", "to"]));
  }
}), Dd = ["id", "aria-labelledby", "aria-describedby"], jd = ["id"], qd = {
  inheritAttrs: !1
}, Gd = /* @__PURE__ */ N({
  ...qd,
  __name: "BModal",
  props: {
    bodyBgVariant: { default: void 0 },
    bodyClass: { default: void 0 },
    bodyTextVariant: { default: void 0 },
    busy: { default: !1 },
    lazy: { default: !1 },
    buttonSize: { default: "md" },
    cancelDisabled: { default: !1 },
    cancelTitle: { default: "Cancel" },
    cancelVariant: { default: "secondary" },
    centered: { default: !1 },
    contentClass: { default: void 0 },
    dialogClass: { default: void 0 },
    footerBgVariant: { default: void 0 },
    footerBorderVariant: { default: void 0 },
    footerClass: { default: void 0 },
    footerTextVariant: { default: void 0 },
    fullscreen: { type: [Boolean, String], default: !1 },
    headerBgVariant: { default: void 0 },
    headerBorderVariant: { default: void 0 },
    headerClass: { default: void 0 },
    headerCloseLabel: { default: "Close" },
    headerCloseWhite: { default: !1 },
    headerTextVariant: { default: void 0 },
    hideBackdrop: { default: !1 },
    hideFooter: { default: !1 },
    hideHeader: { default: !1 },
    hideHeaderClose: { default: !1 },
    id: { default: void 0 },
    modalClass: { default: void 0 },
    modelValue: { default: !1 },
    noCloseOnBackdrop: { default: !1 },
    noCloseOnEsc: { default: !1 },
    noFade: { default: !1 },
    autoFocus: { default: !0 },
    okDisabled: { default: !1 },
    okOnly: { default: !1 },
    okTitle: { default: "Ok" },
    okVariant: { default: "primary" },
    scrollable: { default: !1 },
    show: { default: !1 },
    size: { default: void 0 },
    title: { default: void 0 },
    titleClass: { default: void 0 },
    titleSrOnly: { default: !1 },
    titleTag: { default: "h5" },
    static: { default: !1 },
    autoFocusButton: { default: void 0 }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "ok", "cancel", "close"],
  setup(e, { emit: t }) {
    const a = e, l = Ee(), o = Ce(u(a, "id"), "modal"), n = Te(a, "modelValue", t), r = c(u(a, "busy")), s = c(u(a, "lazy")), f = c(u(a, "cancelDisabled")), m = c(u(a, "centered")), B = c(u(a, "hideBackdrop")), h = c(u(a, "hideFooter")), v = c(u(a, "hideHeader")), w = c(u(a, "hideHeaderClose")), g = c(n), k = c(u(a, "noCloseOnBackdrop")), y = c(u(a, "noCloseOnEsc")), $ = c(u(a, "noFade")), b = c(u(a, "autoFocus")), _ = c(u(a, "okDisabled")), V = c(u(a, "okOnly")), T = c(u(a, "scrollable")), S = c(u(a, "titleSrOnly")), O = c(u(a, "static")), I = Ni({
      attribute: "class",
      selector: "body",
      valueDark: "modal-open",
      valueLight: ""
    }), C = H(null), F = H(null), P = H(null), W = H(null), j = H(g.value), te = H(!1), { focused: X } = qe(C, {
      initialValue: g.value && a.autoFocusButton === void 0
    }), { focused: q } = qe(F, {
      initialValue: g.value && a.autoFocusButton === "ok"
    }), { focused: ae } = qe(P, {
      initialValue: g.value && a.autoFocusButton === "cancel"
    }), { focused: me } = qe(W, {
      initialValue: g.value && a.autoFocusButton === "close"
    }), pe = d(() => [
      a.modalClass,
      {
        fade: !$.value,
        show: j.value
      }
    ]), be = d(
      () => s.value === !1 || s.value === !0 && te.value === !0 || s.value === !0 && g.value === !0
    ), ne = d(() => !Ve(l["header-close"])), ve = d(() => [
      a.dialogClass,
      {
        "modal-fullscreen": a.fullscreen === !0,
        [`modal-fullscreen-${a.fullscreen}-down`]: typeof a.fullscreen == "string",
        [`modal-${a.size}`]: a.size !== void 0,
        "modal-dialog-centered": m.value,
        "modal-dialog-scrollable": T.value
      }
    ]), L = d(() => [
      a.bodyClass,
      {
        [`bg-${a.bodyBgVariant}`]: a.bodyBgVariant !== void 0,
        [`text-${a.bodyTextVariant}`]: a.bodyTextVariant !== void 0
      }
    ]), z = d(() => [
      a.headerClass,
      {
        [`bg-${a.headerBgVariant}`]: a.headerBgVariant !== void 0,
        [`border-${a.headerBorderVariant}`]: a.headerBorderVariant !== void 0,
        [`text-${a.headerTextVariant}`]: a.headerTextVariant !== void 0
      }
    ]), ee = d(() => [
      a.footerClass,
      {
        [`bg-${a.footerBgVariant}`]: a.footerBgVariant !== void 0,
        [`border-${a.footerBorderVariant}`]: a.footerBorderVariant !== void 0,
        [`text-${a.footerTextVariant}`]: a.footerTextVariant !== void 0
      }
    ]), re = d(() => [
      a.titleClass,
      {
        ["visually-hidden"]: S.value
      }
    ]), he = d(() => f.value || r.value), Oe = d(() => _.value || r.value), U = (ue, oe = {}) => new Ft(ue, {
      cancelable: !1,
      target: C.value || null,
      relatedTarget: null,
      trigger: null,
      ...oe,
      componentId: o.value
    }), ie = (ue = "") => {
      const oe = U("hide", { cancelable: ue !== "", trigger: ue });
      if (ue === "ok" && t(ue, oe), ue === "cancel" && t(ue, oe), ue === "close" && t(ue, oe), t("hide", oe), oe.defaultPrevented || ue === "backdrop" && k.value || ue === "esc" && y.value) {
        t("hide-prevented");
        return;
      }
      n.value = !1;
    }, Re = () => {
      const ue = U("show", { cancelable: !0 });
      if (t("show", ue), ue.defaultPrevented) {
        n.value = !1, t("show-prevented");
        return;
      }
      n.value = !0;
    }, Ie = () => {
      b.value !== !1 && (a.autoFocusButton === "ok" ? q.value = !0 : a.autoFocusButton === "close" ? me.value = !0 : a.autoFocusButton === "cancel" ? ae.value = !0 : X.value = !0);
    }, E = () => Re(), J = () => {
      j.value = !0, Ie(), t("shown", U("shown")), s.value === !0 && (te.value = !0);
    }, ge = () => j.value = !1, G = () => {
      t("hidden", U("hidden")), s.value === !0 && (te.value = !1);
    };
    return ce(
      j,
      (ue) => {
        I.value = ue;
      },
      { immediate: !0 }
    ), we(C, "bv-toggle", () => {
      g.value ? ie() : Re();
    }), (ue, oe) => (p(), M(La, {
      to: "body",
      disabled: i(O)
    }, [
      ye(_t, {
        "no-fade": !0,
        "trans-props": { enterToClass: "show" },
        onBeforeEnter: E,
        onAfterEnter: J,
        onLeave: ge,
        onAfterLeave: G
      }, {
        default: D(() => [
          st(K("div", Q({
            id: i(o),
            ref_key: "element",
            ref: C,
            class: ["modal", i(pe)],
            role: "dialog",
            "aria-labelledby": `${i(o)}-label`,
            "aria-describedby": `${i(o)}-body`,
            tabindex: "-1"
          }, ue.$attrs, {
            onKeyup: oe[5] || (oe[5] = Pt((et) => ie("esc"), ["esc"]))
          }), [
            K("div", {
              class: R(["modal-dialog", i(ve)])
            }, [
              i(be) ? (p(), A("div", {
                key: 0,
                class: R(["modal-content", e.contentClass])
              }, [
                i(v) ? Z("", !0) : (p(), A("div", {
                  key: 0,
                  class: R(["modal-header", i(z)])
                }, [
                  x(ue.$slots, "header", {}, () => [
                    (p(), M(le(e.titleTag), {
                      id: `${i(o)}-label`,
                      class: R(["modal-title", i(re)])
                    }, {
                      default: D(() => [
                        x(ue.$slots, "title", {}, () => [
                          se(Y(e.title), 1)
                        ], !0)
                      ]),
                      _: 3
                    }, 8, ["id", "class"])),
                    i(w) ? Z("", !0) : (p(), A(fe, { key: 0 }, [
                      i(ne) ? (p(), A("button", {
                        key: 0,
                        type: "button",
                        onClick: oe[0] || (oe[0] = (et) => ie("close"))
                      }, [
                        x(ue.$slots, "header-close", {}, void 0, !0)
                      ])) : (p(), M(Tt, {
                        key: 1,
                        ref_key: "closeButton",
                        ref: W,
                        "aria-label": e.headerCloseLabel,
                        white: e.headerCloseWhite,
                        onClick: oe[1] || (oe[1] = (et) => ie("close"))
                      }, null, 8, ["aria-label", "white"]))
                    ], 64))
                  ], !0)
                ], 2)),
                K("div", {
                  id: `${i(o)}-body`,
                  class: R(["modal-body", i(L)])
                }, [
                  x(ue.$slots, "default", {}, void 0, !0)
                ], 10, jd),
                i(h) ? Z("", !0) : (p(), A("div", {
                  key: 1,
                  class: R(["modal-footer", i(ee)])
                }, [
                  x(ue.$slots, "footer", {}, () => [
                    x(ue.$slots, "cancel", {}, () => [
                      i(V) ? Z("", !0) : (p(), M(kt, {
                        key: 0,
                        ref_key: "cancelButton",
                        ref: P,
                        type: "button",
                        class: "btn",
                        disabled: i(he),
                        size: e.buttonSize,
                        variant: e.cancelVariant,
                        onClick: oe[2] || (oe[2] = (et) => ie("cancel"))
                      }, {
                        default: D(() => [
                          se(Y(e.cancelTitle), 1)
                        ]),
                        _: 1
                      }, 8, ["disabled", "size", "variant"]))
                    ], !0),
                    x(ue.$slots, "ok", {}, () => [
                      ye(kt, {
                        ref_key: "okButton",
                        ref: F,
                        type: "button",
                        class: "btn",
                        disabled: i(Oe),
                        size: e.buttonSize,
                        variant: e.okVariant,
                        onClick: oe[3] || (oe[3] = (et) => ie("ok"))
                      }, {
                        default: D(() => [
                          se(Y(e.okTitle), 1)
                        ]),
                        _: 1
                      }, 8, ["disabled", "size", "variant"])
                    ], !0)
                  ], !0)
                ], 2))
              ], 2)) : Z("", !0)
            ], 2),
            i(B) ? Z("", !0) : x(ue.$slots, "backdrop", { key: 0 }, () => [
              K("div", {
                class: "modal-backdrop fade show",
                onClick: oe[4] || (oe[4] = (et) => ie("backdrop"))
              })
            ], !0)
          ], 16, Dd), [
            [na, i(g)]
          ])
        ]),
        _: 3
      })
    ], 8, ["disabled"]));
  }
});
const Wd = /* @__PURE__ */ ze(Gd, [["__scopeId", "data-v-c766f542"]]), Ud = /* @__PURE__ */ N({
  __name: "BNav",
  props: {
    align: { default: void 0 },
    cardHeader: { default: !1 },
    fill: { default: !1 },
    justified: { default: !1 },
    pills: { default: !1 },
    small: { default: !1 },
    tabs: { default: !1 },
    tag: { default: "ul" },
    vertical: { default: !1 }
  },
  setup(e) {
    const t = e, a = c(u(t, "cardHeader")), l = c(u(t, "fill")), o = c(u(t, "justified")), n = c(u(t, "pills")), r = c(u(t, "small")), s = c(u(t, "tabs")), f = c(u(t, "vertical")), m = zt(u(t, "align")), B = d(() => ({
      "nav-tabs": s.value,
      "nav-pills": n.value && !s.value,
      "card-header-tabs": !f.value && a.value && s.value,
      "card-header-pills": !f.value && a.value && n.value && !s.value,
      "flex-column": f.value,
      "nav-fill": !f.value && l.value,
      "nav-justified": !f.value && o.value,
      [m.value]: !f.value && t.align !== void 0,
      small: r.value
    }));
    return (h, v) => (p(), M(le(e.tag), {
      class: R(["nav", i(B)])
    }, {
      default: D(() => [
        x(h.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Kd = /* @__PURE__ */ N({
  __name: "BNavForm",
  props: {
    role: { default: void 0 },
    id: { default: void 0 },
    floating: { default: !1 },
    novalidate: { default: !1 },
    validated: { default: !1 }
  },
  emits: ["submit"],
  setup(e, { emit: t }) {
    const a = e, l = d(() => ({
      floating: a.floating,
      role: a.role,
      id: a.id,
      novalidate: a.novalidate,
      validated: a.validated
    })), o = (n) => t("submit", n);
    return (n, r) => (p(), M(kn, Q(i(l), {
      class: "d-flex",
      onSubmit: ft(o, ["prevent"])
    }), {
      default: D(() => [
        x(n.$slots, "default")
      ]),
      _: 3
    }, 16, ["onSubmit"]));
  }
}), Xd = N({
  components: { BLink: Ne },
  props: {
    ...Lt(mt, ["event", "routerTag"])
  },
  setup(e) {
    return { disabledBoolean: c(u(e, "disabled")) };
  }
}), Jd = { class: "nav-item" };
function Yd(e, t, a, l, o, n) {
  const r = lo("b-link");
  return p(), A("li", Jd, [
    ye(r, Q({ class: "nav-link" }, e.$props, {
      "active-class": "active",
      tabindex: e.disabledBoolean ? -1 : void 0,
      "aria-disabled": e.disabledBoolean ? !0 : void 0
    }), {
      default: D(() => [
        x(e.$slots, "default")
      ]),
      _: 3
    }, 16, ["tabindex", "aria-disabled"])
  ]);
}
const Zd = /* @__PURE__ */ ze(Xd, [["render", Yd]]), Qd = { class: "nav-item dropdown" }, ec = /* @__PURE__ */ N({
  __name: "BNavItemDropdown",
  props: {
    id: { default: void 0 },
    text: { default: void 0 },
    toggleClass: { default: void 0 },
    size: { default: void 0 },
    offset: { default: void 0 },
    autoClose: { type: [Boolean, String], default: void 0 },
    dark: { default: void 0 },
    splitVariant: { default: void 0 },
    noCaret: { default: void 0 },
    variant: { default: "link" },
    modelValue: { default: !1 },
    lazy: { default: void 0 },
    strategy: { default: void 0 },
    floatingMiddleware: { default: void 0 },
    noFlip: { default: void 0 },
    noShift: { default: void 0 },
    dropup: { default: void 0 },
    dropend: { default: void 0 },
    dropstart: { default: void 0 },
    center: null,
    end: null,
    menuClass: { default: void 0 }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = Te(a, "modelValue", t), o = c(l), n = d({
      get: () => o.value,
      set: (s) => l.value = s
    }), r = d(() => Lt(a, ["modelValue"]));
    return (s, f) => (p(), A("li", Qd, [
      ye(wn, Q({
        modelValue: i(n),
        "onUpdate:modelValue": f[0] || (f[0] = (m) => Ct(n) ? n.value = m : null)
      }, i(r), { "is-nav": "" }), {
        "button-content": D(() => [
          x(s.$slots, "button-content")
        ]),
        "toggle-text": D(() => [
          x(s.$slots, "toggle-text")
        ]),
        default: D(() => [
          x(s.$slots, "default")
        ]),
        _: 3
      }, 16, ["modelValue"])
    ]));
  }
}), tc = { class: "navbar-text" }, ac = /* @__PURE__ */ N({
  __name: "BNavText",
  props: {
    text: { default: void 0 }
  },
  setup(e) {
    return (t, a) => (p(), A("li", tc, [
      x(t.$slots, "default", {}, () => [
        se(Y(e.text), 1)
      ])
    ]));
  }
}), lc = /* @__PURE__ */ N({
  __name: "BNavbar",
  props: {
    fixed: { default: void 0 },
    print: { default: !1 },
    sticky: { default: void 0 },
    tag: { default: "nav" },
    toggleable: { type: [Boolean, String], default: !1 },
    dark: { default: !1 },
    variant: { default: void 0 },
    container: { type: [String, Boolean], default: "fluid" }
  },
  setup(e) {
    const t = e, a = c(u(t, "print")), l = c(u(t, "dark")), o = d(
      () => t.tag === "nav" ? void 0 : "navigation"
    ), n = d(
      () => typeof t.toggleable == "string" ? `navbar-expand-${t.toggleable}` : t.toggleable === !1 ? "navbar-expand" : void 0
    ), r = d(
      () => t.container === !0 ? "container" : "container-fluid"
    ), s = d(() => ({
      "d-print": a.value,
      [`sticky-${t.sticky}`]: t.sticky !== void 0,
      "navbar-dark": l.value,
      [`bg-${t.variant}`]: t.variant !== void 0,
      [`fixed-${t.fixed}`]: t.fixed !== void 0,
      [`${n.value}`]: n.value !== void 0
    }));
    return (f, m) => (p(), M(le(e.tag), {
      class: R(["navbar", i(s)]),
      role: i(o)
    }, {
      default: D(() => [
        e.container !== !1 ? (p(), A("div", {
          key: 0,
          class: R(i(r))
        }, [
          x(f.$slots, "default")
        ], 2)) : x(f.$slots, "default", { key: 1 })
      ]),
      _: 3
    }, 8, ["class", "role"]));
  }
}), zl = Lt(mt, ["event", "routerTag"]), oc = N({
  components: {
    BLink: Ne
  },
  props: {
    tag: { type: String, default: "div" },
    ...zl
  },
  setup(e) {
    const t = d(() => Et(e)), a = d(
      () => t.value ? Ne : e.tag
    );
    return {
      computedLinkProps: d(
        () => t.value ? Ha(e, zl) : {}
      ),
      computedTag: a
    };
  }
});
function nc(e, t, a, l, o, n) {
  return p(), M(le(e.computedTag), Q({ class: "navbar-brand" }, e.computedLinkProps), {
    default: D(() => [
      x(e.$slots, "default")
    ]),
    _: 3
  }, 16);
}
const sc = /* @__PURE__ */ ze(oc, [["render", nc]]), ic = /* @__PURE__ */ N({
  __name: "BNavbarNav",
  props: {
    align: { default: void 0 },
    fill: { default: !1 },
    justified: { default: !1 },
    small: { default: !1 },
    tag: { default: "ul" }
  },
  setup(e) {
    const t = e, a = c(u(t, "fill")), l = c(u(t, "justified")), o = c(u(t, "small")), n = zt(u(t, "align")), r = d(() => ({
      "nav-fill": a.value,
      "nav-justified": l.value,
      [n.value]: t.align !== void 0,
      small: o.value
    }));
    return (s, f) => (p(), A("ul", {
      class: R(["navbar-nav", i(r)])
    }, [
      x(s.$slots, "default")
    ], 2));
  }
}), Rl = (e, t) => e.setAttribute("data-bs-theme", t), rc = {
  mounted(e, t) {
    Rl(e, t.value);
  },
  updated(e, t) {
    Rl(e, t.value);
  }
}, Ya = (e, t) => {
  const { modifiers: a, arg: l, value: o } = e, n = Object.keys(a || {}), r = typeof o == "string" ? o.split(jt) : o;
  if (ks(t.tagName, "a")) {
    const s = Ra(t, "href") || "";
    ls.test(s) && n.push(s.replace(as, ""));
  }
  return Array.prototype.concat.apply([], [l, r]).forEach((s) => typeof s == "string" && n.push(s)), n.filter((s, f, m) => s && m.indexOf(s) === f);
}, uc = (e, t) => {
  Ya(e, t).forEach((l) => {
    const o = document.getElementById(l);
    o !== null && o.dispatchEvent(new Event("bv-toggle"));
  }), setTimeout(() => On(e, t), 50);
}, On = (e, t) => {
  const a = Ya(e, t);
  let l = !1;
  a.forEach((o) => {
    const n = document.getElementById(o);
    n != null && n.classList.contains("show") && (l = !0), n != null && n.classList.contains("closing") && (l = !1);
  }), t.setAttribute("aria-expanded", l ? "true" : "false");
}, Oa = {
  mounted(e, t) {
    e.__toggle = () => uc(t, e), e.addEventListener("click", e.__toggle), On(t, e), e.setAttribute("aria-controls", Ya(t, e).join(" "));
  },
  unmounted(e) {
    e.removeEventListener("click", e.__toggle), e.removeAttribute("aria-controls"), e.removeAttribute("aria-expanded");
  }
}, dc = {
  mounted(e, t) {
    const a = aa(t.value, e);
    e.$__state = H({
      ...la(t, e),
      ...a
    }), rn(e, t);
  },
  updated(e, t) {
    const a = aa(t.value, e);
    e.$__state && (e.$__state.value = {
      ...la(t, e),
      ...a
    });
  },
  beforeUnmount(e) {
    un(e);
  }
}, cc = {
  mounted(e, t) {
    const a = aa(t.value, e);
    e.$__state = H({
      ...la(t, e),
      title: a.title ?? a.content ?? "",
      tooltip: !0
    }), rn(e, t);
  },
  updated(e, t) {
    const a = aa(t.value, e);
    e.$__state && (e.$__state.value = {
      ...la(t, e),
      title: a.title ?? a.content ?? "",
      tooltip: !0
    });
  },
  beforeUnmount(e) {
    un(e);
  }
}, fc = /* @__PURE__ */ K("span", { class: "navbar-toggler-icon" }, null, -1), vc = /* @__PURE__ */ N({
  __name: "BNavbarToggle",
  props: {
    disabled: { default: !1 },
    label: { default: "Toggle navigation" },
    target: { default: void 0 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = c(u(a, "disabled")), o = d(() => ({
      disabled: l.value,
      "aria-label": a.label
    })), n = d(() => ({
      disabled: l.value
    })), r = (s) => {
      l.value || t("click", s);
    };
    return (s, f) => st((p(), A("button", Q({
      class: ["navbar-toggler", i(n)],
      type: "button"
    }, i(o), { onClick: r }), [
      x(s.$slots, "default", {}, () => [
        fc
      ])
    ], 16)), [
      [i(Oa), i(l) ? void 0 : e.target]
    ]);
  }
}), Pn = /* @__PURE__ */ N({
  __name: "BOverlay",
  props: {
    bgColor: { default: void 0 },
    blur: { default: "2px" },
    fixed: { default: !1 },
    noCenter: { default: !1 },
    noFade: { default: !1 },
    noWrap: { default: !1 },
    opacity: { default: 0.85 },
    overlayTag: { default: "div" },
    rounded: { type: [Boolean, String], default: !1 },
    show: { default: !1 },
    spinnerSmall: { default: !1 },
    spinnerType: { default: "border" },
    spinnerVariant: { default: void 0 },
    noSpinner: { default: !1 },
    variant: { default: "light" },
    wrapTag: { default: "div" },
    zIndex: { default: 10 }
  },
  emits: ["click", "hidden", "shown"],
  setup(e, { emit: t }) {
    const a = e, l = { top: 0, left: 0, bottom: 0, right: 0 }, o = c(u(a, "fixed")), n = c(u(a, "noSpinner")), r = c(u(a, "noCenter")), s = c(u(a, "noWrap")), f = c(u(a, "show")), m = c(u(a, "spinnerSmall")), B = d(
      () => a.rounded === !0 || a.rounded === "" ? "rounded" : a.rounded === !1 ? "" : `rounded-${a.rounded}`
    ), h = d(
      () => a.variant && !a.bgColor ? `bg-${a.variant}` : ""
    ), v = d(() => f.value ? !0 : null), w = d(() => ({
      type: a.spinnerType || void 0,
      variant: a.spinnerVariant || void 0,
      small: m.value
    })), g = d(() => ({
      ...l,
      zIndex: a.zIndex || 10
    })), k = d(() => [
      "b-overlay",
      {
        "position-absolute": !s.value || !o.value,
        "position-fixed": s.value && o.value
      }
    ]), y = d(() => [h.value, B.value]), $ = d(() => ({
      ...l,
      opacity: a.opacity,
      backgroundColor: a.bgColor || void 0,
      backdropFilter: blur ? `blur(${blur})` : void 0
    })), b = d(
      () => r.value ? l : {
        top: "50%",
        left: "50%",
        transform: "translateX(-50%) translateY(-50%)"
      }
    );
    return (_, V) => (p(), M(le(e.wrapTag), {
      class: "b-overlay-wrap position-relative",
      "aria-busy": i(v)
    }, {
      default: D(() => [
        x(_.$slots, "default"),
        ye(_t, {
          "no-fade": e.noFade,
          "trans-props": { enterToClass: "show" },
          name: "fade",
          onOnAfterEnter: V[1] || (V[1] = (T) => t("shown")),
          onOnAfterLeave: V[2] || (V[2] = (T) => t("hidden"))
        }, {
          default: D(() => [
            i(f) ? (p(), M(le(e.overlayTag), {
              key: 0,
              class: R(i(k)),
              style: Le(i(g)),
              onClick: V[0] || (V[0] = (T) => t("click", T))
            }, {
              default: D(() => [
                K("div", {
                  class: R(["position-absolute", i(y)]),
                  style: Le(i($))
                }, null, 6),
                K("div", {
                  class: "position-absolute",
                  style: Le(i(b))
                }, [
                  x(_.$slots, "overlay", $e(Ae(i(w))), () => [
                    i(n) ? Z("", !0) : (p(), M(fa, $e(Q({ key: 0 }, i(w))), null, 16))
                  ])
                ], 4)
              ]),
              _: 3
            }, 8, ["class", "style"])) : Z("", !0)
          ]),
          _: 3
        }, 8, ["no-fade"])
      ]),
      _: 3
    }, 8, ["aria-busy"]));
  }
}), mc = {
  key: 0,
  class: "offcanvas-header"
}, pc = {
  id: "offcanvasLabel",
  class: "offcanvas-title"
}, gc = { class: "offcanvas-body" }, bc = { key: 1 }, hc = {
  inheritAttrs: !1
}, yc = /* @__PURE__ */ N({
  ...hc,
  __name: "BOffcanvas",
  props: {
    dismissLabel: { default: "Close" },
    modelValue: { default: !1 },
    bodyScrolling: { default: !1 },
    backdrop: { default: !0 },
    noCloseOnBackdrop: { default: !1 },
    noCloseOnEsc: { default: !1 },
    placement: { default: "start" },
    title: { default: void 0 },
    noHeaderClose: { default: !1 },
    noHeader: { default: !1 },
    lazy: { default: !1 },
    id: { default: void 0 },
    noFocus: { default: !1 },
    static: { default: !1 },
    backdropVariant: { default: "dark" }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "esc", "close"],
  setup(e, { emit: t }) {
    const a = e, l = Ee(), o = Te(a, "modelValue", t), n = c(o);
    c(u(a, "bodyScrolling"));
    const r = c(u(a, "backdrop")), s = c(u(a, "noHeaderClose")), f = c(u(a, "noHeader")), m = c(u(a, "noFocus")), B = c(u(a, "noCloseOnBackdrop")), h = c(u(a, "noCloseOnEsc")), v = c(u(a, "lazy")), w = c(u(a, "static")), g = Ce(u(a, "id"), "offcanvas"), k = H(null), { focused: y } = qe(k, {
      initialValue: n.value && m.value === !1
    }), $ = H(n.value), b = H(!1), _ = d(
      () => r.value === !0 && n.value === !0
    ), V = d(
      () => v.value === !1 || v.value === !0 && b.value === !0 || v.value === !0 && n.value === !0
    ), T = d(() => !Ve(l.footer)), S = d(() => [
      // props.responsive === undefined ? 'offcanvas' : `offcanvas-${props.responsive}`,
      "offcanvas",
      // Remove when above check is fixed
      `offcanvas-${a.placement}`,
      {
        show: n.value && $.value === !0
      }
    ]), O = (X, q = {}) => new Ft(X, {
      cancelable: !1,
      target: k.value || null,
      relatedTarget: null,
      trigger: null,
      ...q,
      componentId: g.value
    }), I = (X = "") => {
      const q = O("hide", { cancelable: X !== "", trigger: X });
      if (X === "close" && t(X, q), X === "esc" && t(X, q), t("hide", q), q.defaultPrevented || X === "backdrop" && B.value || X === "esc" && h.value) {
        t("hide-prevented");
        return;
      }
      o.value = !1;
    }, C = () => {
      const X = O("show", { cancelable: !0 });
      if (t("show", X), X.defaultPrevented) {
        o.value = !1, t("show-prevented");
        return;
      }
      o.value = !0;
    }, F = () => {
      _e(() => {
        m.value === !1 && (y.value = !0);
      });
    }, P = () => C(), W = () => {
      $.value = !0, F(), t("shown", O("shown")), v.value === !0 && (b.value = !0);
    }, j = () => $.value = !1, te = () => {
      t("hidden", O("hidden")), v.value === !0 && (b.value = !1);
    };
    return we(k, "bv-toggle", () => {
      n.value ? I() : C();
    }), (X, q) => (p(), M(La, {
      to: "body",
      disabled: i(w)
    }, [
      ye(_t, {
        "no-fade": !0,
        "trans-props": {
          enterToClass: "showing",
          enterFromClass: "",
          leaveToClass: "hiding show",
          leaveFromClass: "show"
        },
        onBeforeEnter: P,
        onAfterEnter: W,
        onLeave: j,
        onAfterLeave: te
      }, {
        default: D(() => [
          st(K("div", Q({
            ref_key: "element",
            ref: k,
            "aria-modal": "true",
            role: "dialog",
            class: i(S),
            tabindex: "-1",
            "aria-labelledby": "offcanvasLabel",
            "data-bs-backdrop": "false"
          }, X.$attrs, {
            onKeyup: q[1] || (q[1] = Pt((ae) => I("esc"), ["esc"]))
          }), [
            i(V) ? (p(), A(fe, { key: 0 }, [
              i(f) ? Z("", !0) : (p(), A("div", mc, [
                x(X.$slots, "header", $e(Ae({ visible: i(n), placement: e.placement, hide: I })), () => [
                  K("h5", pc, [
                    x(X.$slots, "title", {}, () => [
                      se(Y(e.title), 1)
                    ])
                  ]),
                  i(s) ? Z("", !0) : (p(), M(Tt, {
                    key: 0,
                    class: "text-reset",
                    "aria-label": e.dismissLabel,
                    onClick: q[0] || (q[0] = (ae) => I("close"))
                  }, null, 8, ["aria-label"]))
                ])
              ])),
              K("div", gc, [
                x(X.$slots, "default")
              ]),
              i(T) ? (p(), A("div", bc, [
                x(X.$slots, "footer", $e(Ae({ visible: i(n), placement: e.placement, hide: I })))
              ])) : Z("", !0)
            ], 64)) : Z("", !0)
          ], 16), [
            [na, i(o)]
          ])
        ]),
        _: 3
      }),
      ye(Pn, {
        variant: e.backdropVariant,
        show: i(_),
        fixed: !0,
        "no-wrap": "",
        "no-spinner": !0,
        onClick: q[2] || (q[2] = (ae) => I("backdrop"))
      }, null, 8, ["variant", "show"])
    ], 8, ["disabled"]));
  }
}), Bc = 5, En = 20, In = 0, Ue = 3, $c = "ellipsis-text", wc = "first-text", kc = "last-text", Cc = "next-text", Sc = "page", _c = "prev-text", Hl = (e) => Math.max(lt(e) || En, 1), Ml = (e) => Math.max(lt(e) || In, 0), Tc = (e, t) => {
  const a = lt(e) || 1;
  return a > t ? t : a < 1 ? 1 : a;
}, xc = N({
  name: "BPagination",
  props: {
    align: { type: String, default: "start" },
    ariaControls: { type: String, default: void 0 },
    ariaLabel: { type: String, default: "Pagination" },
    disabled: { type: [Boolean, String], default: !1 },
    ellipsisClass: { type: [Array, String], default: () => [] },
    ellipsisText: { type: String, default: "â¦" },
    firstClass: { type: [Array, String], default: () => [] },
    firstNumber: { type: [Boolean, String], default: !1 },
    firstText: { type: String, default: "Â«" },
    hideEllipsis: { type: [Boolean, String], default: !1 },
    hideGotoEndButtons: { type: [Boolean, String], default: !1 },
    labelFirstPage: { type: String, default: "Go to first page" },
    labelLastPage: { type: String, default: "Go to last page" },
    labelNextPage: { type: String, default: "Go to next page" },
    labelPage: { type: String, default: "Go to page" },
    labelPrevPage: { type: String, default: "Go to previous page" },
    lastClass: { type: [Array, String], default: () => [] },
    lastNumber: { type: [Boolean, String], default: !1 },
    lastText: { type: String, default: "Â»" },
    limit: { type: Number, default: Bc },
    modelValue: { type: Number, default: 1 },
    // V-model prop
    nextClass: { type: [Array, String], default: () => [] },
    nextText: { type: String, default: "âº" },
    pageClass: { type: [Array, String], default: () => [] },
    perPage: { type: Number, default: En },
    pills: { type: [Boolean, String], default: !1 },
    prevClass: { type: [Array, String], default: () => [] },
    prevText: { type: String, default: "â¹" },
    size: { type: String, default: void 0 },
    totalRows: { type: Number, default: In }
  },
  emits: ["update:modelValue", "page-click"],
  setup(e, { emit: t, slots: a }) {
    const l = Te(e, "modelValue", t), o = c(u(e, "disabled")), n = c(u(e, "firstNumber")), r = c(u(e, "hideEllipsis")), s = c(u(e, "hideGotoEndButtons")), f = c(u(e, "lastNumber")), m = c(u(e, "pills")), B = d(
      () => e.align === "fill" ? "start" : e.align
    ), h = zt(u(B, "value")), v = d(
      () => Math.ceil(Ml(e.totalRows) / Hl(e.perPage))
    ), w = d(() => {
      let S;
      return v.value - l.value + 2 < e.limit && e.limit > Ue ? S = v.value - k.value + 1 : S = l.value - Math.floor(k.value / 2), S < 1 ? S = 1 : S > v.value - k.value && (S = v.value - k.value + 1), e.limit <= Ue && f.value && v.value === S + k.value - 1 && (S = Math.max(S - 1, 1)), S;
    }), g = d(() => {
      const S = v.value - l.value;
      let O = !1;
      return S + 2 < e.limit && e.limit > Ue ? e.limit > Ue && (O = !0) : e.limit > Ue && (O = !!(!r.value || n.value)), w.value <= 1 && (O = !1), O && n.value && w.value < 4 && (O = !1), O;
    }), k = d(() => {
      let S = e.limit;
      return v.value <= e.limit ? S = v.value : l.value < e.limit - 1 && e.limit > Ue ? ((!r.value || f.value) && (S = e.limit - (n.value ? 0 : 1)), S = Math.min(S, e.limit)) : v.value - l.value + 2 < e.limit && e.limit > Ue ? (!r.value || n.value) && (S = e.limit - (f.value ? 0 : 1)) : e.limit > Ue && (S = e.limit - (r.value ? 0 : 2)), S;
    }), y = d(() => {
      const S = v.value - k.value;
      let O = !1;
      l.value < e.limit - 1 && e.limit > Ue ? (!r.value || f.value) && (O = !0) : e.limit > Ue && (O = !!(!r.value || f.value)), w.value > S && (O = !1);
      const I = w.value + k.value - 1;
      return O && f.value && I > v.value - 3 && (O = !1), O;
    }), $ = ct({
      pageSize: Hl(e.perPage),
      totalRows: Ml(e.totalRows),
      numberOfPages: v.value
    }), b = (S, O) => {
      if (O === l.value)
        return;
      const { target: I } = S, C = new Xe("page-click", {
        cancelable: !0,
        target: I
      });
      t("page-click", C, O), !C.defaultPrevented && (l.value = O);
    }, _ = d(() => e.size ? `pagination-${e.size}` : ""), V = d(() => m.value ? "b-pagination-pills" : "");
    ce(l, (S) => {
      const O = Tc(S, v.value);
      O !== l.value && (l.value = O);
    }), ce($, (S, O) => {
      S != null && (O.pageSize !== S.pageSize && O.totalRows === S.totalRows || O.numberOfPages !== S.numberOfPages && l.value > O.numberOfPages) && (l.value = 1);
    });
    const T = d(() => {
      const S = [];
      for (let O = 0; O < k.value; O++)
        S.push({ number: w.value + O, classes: null });
      return S;
    });
    return () => {
      const S = [], O = T.value.map((q) => q.number), I = (q) => q === l.value, C = l.value < 1, F = e.align === "fill", P = (q, ae, me, pe, be, ne) => {
        const ve = o.value || I(ne) || C || q < 1 || q > v.value, L = q < 1 ? 1 : q > v.value ? v.value : q, z = { disabled: ve, page: L, index: L - 1 }, ee = De(me, z, a) || pe || "";
        return de(
          "li",
          {
            class: [
              "page-item",
              {
                disabled: ve,
                "flex-fill": F,
                "d-flex": F && !ve
              },
              be
            ]
          },
          // render inner content
          de(
            ve ? "span" : "button",
            {
              class: ["page-link", { "flex-grow-1": !ve && F }],
              "aria-label": ae,
              "aria-controls": e.ariaControls || null,
              "aria-disabled": ve ? !0 : null,
              role: "menuitem",
              type: ve ? null : "button",
              tabindex: ve ? null : "-1",
              onClick: (re) => {
                ve || b(re, L);
              }
            },
            ee
          )
        );
      }, W = (q) => de(
        "li",
        {
          class: [
            "page-item",
            "disabled",
            "bv-d-xs-down-none",
            F ? "flex-fill" : "",
            e.ellipsisClass
          ],
          role: "separator",
          key: `ellipsis-${q ? "last" : "first"}`
        },
        [
          de(
            "span",
            { class: ["page-link"] },
            De($c, {}, a) || e.ellipsisText || "..."
          )
        ]
      ), j = (q, ae) => {
        const me = I(q.number) && !C, pe = o.value ? null : me || C && ae === 0 ? "0" : "-1", be = {
          active: me,
          disabled: o.value,
          page: q.number,
          index: q.number - 1,
          content: q.number
        }, ne = De(Sc, be, a) || q.number, ve = de(
          o.value ? "span" : "button",
          {
            class: ["page-link", { "flex-grow-1": !o.value && F }],
            "aria-controls": e.ariaControls || null,
            "aria-disabled": o.value ? !0 : null,
            "aria-label": e.labelPage ? `${e.labelPage} ${q.number}` : null,
            role: "menuitemradio",
            type: o.value ? null : "button",
            tabindex: pe,
            onClick: (L) => {
              o.value || b(L, q.number);
            }
          },
          ne
        );
        return de(
          "li",
          {
            class: [
              "page-item",
              {
                disabled: o.value,
                active: me,
                "flex-fill": F,
                "d-flex": F && !o.value
              },
              e.pageClass
            ],
            role: "presentation",
            key: `page-${q.number}`
          },
          ve
        );
      };
      if (!s.value && !n.value) {
        const q = P(
          1,
          e.labelFirstPage,
          wc,
          e.firstText,
          e.firstClass,
          1
        );
        S.push(q);
      }
      const te = P(
        l.value - 1,
        e.labelFirstPage,
        _c,
        e.prevText,
        e.prevClass,
        1
      );
      S.push(te), n.value && O[0] !== 1 && S.push(j({ number: 1 }, 0)), g.value && S.push(W(!1)), T.value.forEach((q, ae) => {
        const me = g.value && n.value && O[0] !== 1 ? 1 : 0;
        S.push(j(q, ae + me));
      }), y.value && S.push(W(!0)), f.value && O[O.length - 1] !== v.value && S.push(j({ number: v.value }, -1));
      const X = P(
        l.value + 1,
        e.labelNextPage,
        Cc,
        e.nextText,
        e.nextClass,
        v.value
      );
      if (S.push(X), !f.value && !s.value) {
        const q = P(
          v.value,
          e.labelLastPage,
          kc,
          e.lastText,
          e.lastClass,
          v.value
        );
        S.push(q);
      }
      return de(
        "ul",
        {
          class: ["pagination", _.value, h.value, V.value],
          role: "menubar",
          "aria-disabled": o.value,
          "aria-label": e.ariaLabel || null
        },
        S
      );
    };
  }
}), Ac = {
  inheritAttrs: !1
}, Me = /* @__PURE__ */ N({
  ...Ac,
  __name: "BPlaceholder",
  props: {
    tag: { default: "span" },
    wrapperTag: { default: "span" },
    width: { default: void 0 },
    cols: { default: 12 },
    variant: { default: void 0 },
    size: { default: void 0 },
    animation: { default: void 0 }
  },
  setup(e) {
    const t = e, a = d(
      () => t.width === void 0 ? void 0 : typeof t.width == "number" ? t.width.toString() : t.width.replace("%", "")
    ), l = d(
      () => t.cols === void 0 ? void 0 : typeof t.cols == "number" ? t.cols.toString() : t.cols
    ), o = d(() => ({
      [`col-${l.value}`]: l.value !== void 0 && a.value === void 0,
      [`bg-${t.variant}`]: t.variant !== void 0,
      [`placeholder-${t.size}`]: t.size !== void 0
    })), n = d(() => ({
      [`placeholder-${t.animation}`]: t.animation !== void 0
    })), r = d(() => ({
      width: a.value === void 0 ? void 0 : `${a.value}%`
    }));
    return (s, f) => (p(), M(le(e.wrapperTag), {
      class: R(i(n))
    }, {
      default: D(() => [
        (p(), M(le(e.tag), Q(s.$attrs, {
          class: ["placeholder", i(o)],
          style: i(r)
        }), null, 16, ["class", "style"]))
      ]),
      _: 1
    }, 8, ["class"]));
  }
}), Fn = /* @__PURE__ */ N({
  __name: "BPlaceholderButton",
  props: {
    tag: { default: "div" },
    width: { default: void 0 },
    cols: { default: void 0 },
    variant: { default: "primary" },
    animation: { default: void 0 }
  },
  setup(e) {
    const t = e, a = d(() => ["btn", `btn-${t.variant}`, "disabled"]), l = d(() => ({
      animation: t.animation,
      width: t.width,
      cols: t.cols,
      tag: t.tag
    }));
    return (o, n) => (p(), M(Me, Q({ class: i(a) }, i(l)), null, 16, ["class"]));
  }
}), Vc = /* @__PURE__ */ N({
  __name: "BPlaceholderCard",
  props: {
    noHeader: { default: !1 },
    headerWidth: { default: 100 },
    headerVariant: { default: void 0 },
    headerAnimation: { default: void 0 },
    headerSize: { default: void 0 },
    noFooter: { default: !1 },
    footerWidth: { default: 100 },
    footerVariant: { default: void 0 },
    footerAnimation: { default: void 0 },
    footerSize: { default: void 0 },
    animation: { default: void 0 },
    size: { default: void 0 },
    variant: { default: void 0 },
    noButton: { default: !1 },
    imgBottom: { default: !1 },
    imgSrc: { default: void 0 },
    imgBlankColor: { default: "#868e96" },
    imgHeight: { default: 100 },
    noImg: { default: !1 }
  },
  setup(e) {
    const t = e, a = c(u(t, "noButton")), l = c(u(t, "noHeader")), o = c(u(t, "noFooter")), n = c(u(t, "noImg")), r = d(() => ({
      width: t.headerWidth,
      variant: t.headerVariant,
      animation: t.headerAnimation,
      size: t.headerSize
    })), s = d(() => ({
      width: t.footerWidth,
      animation: t.footerAnimation,
      size: a.value ? t.footerSize : void 0,
      variant: t.footerVariant
    })), f = d(() => ({
      animation: t.animation,
      size: t.size,
      variant: t.variant
    })), m = d(() => ({
      blank: !t.imgSrc,
      blankColor: t.imgBlankColor,
      height: t.imgSrc ? void 0 : t.imgHeight,
      src: t.imgSrc,
      top: !t.imgBottom,
      bottom: t.imgBottom
    }));
    return (B, h) => (p(), M(hn, { "img-bottom": e.imgBottom }, no({
      default: D(() => [
        x(B.$slots, "default", {}, () => [
          ye(Me, Q({ cols: "7" }, i(f)), null, 16),
          ye(Me, Q({ cols: "4" }, i(f)), null, 16),
          ye(Me, Q({ cols: "4" }, i(f)), null, 16),
          ye(Me, Q({ cols: "6" }, i(f)), null, 16),
          ye(Me, Q({ cols: "8" }, i(f)), null, 16)
        ])
      ]),
      _: 2
    }, [
      i(n) ? void 0 : {
        name: "img",
        fn: D(() => [
          x(B.$slots, "img", {}, () => [
            ye(oa, $e(Ae(i(m))), null, 16)
          ])
        ]),
        key: "0"
      },
      i(l) ? void 0 : {
        name: "header",
        fn: D(() => [
          x(B.$slots, "header", {}, () => [
            ye(Me, $e(Ae(i(r))), null, 16)
          ])
        ]),
        key: "1"
      },
      i(o) ? void 0 : {
        name: "footer",
        fn: D(() => [
          x(B.$slots, "footer", {}, () => [
            i(a) ? (p(), M(Me, $e(Q({ key: 1 }, i(s))), null, 16)) : (p(), M(Fn, $e(Q({ key: 0 }, i(s))), null, 16))
          ])
        ]),
        key: "2"
      }
    ]), 1032, ["img-bottom"]));
  }
}), Za = /* @__PURE__ */ N({
  __name: "BTableSimple",
  props: {
    bordered: { default: !1 },
    borderless: { default: !1 },
    borderVariant: { default: void 0 },
    captionTop: { default: !1 },
    dark: { default: !1 },
    hover: { default: !1 },
    responsive: { type: [Boolean, String], default: !1 },
    stacked: { type: [Boolean, String], default: !1 },
    striped: { default: !1 },
    small: { default: !1 },
    tableClass: { default: void 0 },
    tableVariant: { default: void 0 },
    stickyHeader: { default: !1 }
  },
  setup(e) {
    const t = e, a = c(u(t, "captionTop")), l = c(u(t, "borderless")), o = c(u(t, "bordered")), n = c(u(t, "dark")), r = c(u(t, "hover")), s = c(u(t, "small")), f = c(u(t, "striped")), m = c(u(t, "stickyHeader")), B = d(() => [
      "table",
      "b-table",
      {
        "table-bordered": o.value,
        "table-borderless": l.value,
        [`border-${t.borderVariant}`]: t.borderVariant !== void 0,
        "caption-top": a.value,
        "table-dark": n.value,
        "table-hover": r.value,
        "b-table-stacked": typeof t.stacked == "boolean" && t.stacked,
        [`b-table-stacked-${t.stacked}`]: typeof t.stacked == "string",
        "table-striped": f.value,
        "table-sm": s.value,
        [`table-${t.tableVariant}`]: t.tableVariant !== void 0
      },
      t.tableClass
    ]), h = d(() => [
      {
        "table-responsive": t.responsive === !0,
        [`table-responsive-${t.responsive}`]: typeof t.responsive == "string",
        "b-table-sticky-header": m.value
      }
    ]);
    return (v, w) => e.responsive ? (p(), A("div", {
      key: 1,
      class: R(i(h))
    }, [
      K("table", {
        class: R(i(B))
      }, [
        x(v.$slots, "default")
      ], 2)
    ], 2)) : (p(), A("table", {
      key: 0,
      class: R(i(B))
    }, [
      x(v.$slots, "default")
    ], 2));
  }
}), Oc = /* @__PURE__ */ N({
  __name: "BPlaceholderTable",
  props: {
    rows: { default: 3 },
    columns: { default: 5 },
    cellWidth: { default: 100 },
    size: { default: void 0 },
    animation: { default: void 0 },
    variant: { default: void 0 },
    headerColumns: { default: void 0 },
    hideHeader: { default: !1 },
    headerCellWidth: { default: 100 },
    headerSize: { default: void 0 },
    headerAnimation: { default: void 0 },
    headerVariant: { default: void 0 },
    footerColumns: { default: void 0 },
    showFooter: { default: !1 },
    footerCellWidth: { default: 100 },
    footerSize: { default: void 0 },
    footerAnimation: { default: void 0 },
    footerVariant: { default: void 0 }
  },
  setup(e) {
    const t = e, a = Bt(u(t, "columns"), { nanToZero: !0, method: "parseInt" }), l = Bt(u(t, "rows"), { nanToZero: !0, method: "parseInt" }), o = d(() => t.headerColumns ?? NaN), n = d(() => t.footerColumns ?? NaN), r = Bt(o, {
      nanToZero: !0,
      method: "parseInt"
    }), s = Bt(n, {
      nanToZero: !0,
      method: "parseInt"
    }), f = d(() => a.value || 5), m = d(() => l.value || 3), B = d(
      () => t.headerColumns === void 0 ? f.value : r.value
    ), h = d(
      () => t.footerColumns === void 0 ? f.value : s.value
    ), v = d(() => ({
      size: t.size,
      variant: t.variant,
      animation: t.animation,
      width: t.cellWidth
    })), w = d(() => ({
      size: t.headerSize,
      variant: t.headerVariant,
      animation: t.headerAnimation,
      width: t.headerCellWidth
    })), g = d(() => ({
      size: t.footerSize,
      variant: t.footerVariant,
      animation: t.footerAnimation,
      width: t.footerCellWidth
    })), k = c(u(t, "hideHeader")), y = c(u(t, "showFooter"));
    return ($, b) => (p(), M(Za, null, {
      default: D(() => [
        i(k) ? Z("", !0) : x($.$slots, "thead", { key: 0 }, () => [
          K("thead", null, [
            K("tr", null, [
              (p(!0), A(fe, null, Be(i(B), (_, V) => (p(), A("th", { key: V }, [
                ye(Me, $e(Ae(i(w))), null, 16)
              ]))), 128))
            ])
          ])
        ]),
        x($.$slots, "default", {}, () => [
          K("tbody", null, [
            (p(!0), A(fe, null, Be(i(m), (_, V) => (p(), A("tr", { key: V }, [
              (p(!0), A(fe, null, Be(i(f), (T, S) => (p(), A("td", { key: S }, [
                ye(Me, $e(Ae(i(v))), null, 16)
              ]))), 128))
            ]))), 128))
          ])
        ]),
        i(y) ? x($.$slots, "tfoot", { key: 1 }, () => [
          K("tfoot", null, [
            K("tr", null, [
              (p(!0), A(fe, null, Be(i(h), (_, V) => (p(), A("th", { key: V }, [
                ye(Me, $e(Ae(i(g))), null, 16)
              ]))), 128))
            ])
          ])
        ]) : Z("", !0)
      ]),
      _: 3
    }));
  }
}), Pc = /* @__PURE__ */ N({
  __name: "BPlaceholderWrapper",
  props: {
    loading: { default: !1 }
  },
  setup(e) {
    const a = c(u(e, "loading"));
    return (l, o) => i(a) ? x(l.$slots, "loading", { key: 0 }) : x(l.$slots, "default", { key: 1 });
  }
}), Ec = ["aria-valuenow", "aria-valuemax"], Ln = /* @__PURE__ */ N({
  __name: "BProgressBar",
  props: {
    animated: { default: !1 },
    label: { default: void 0 },
    labelHtml: { default: void 0 },
    max: { default: void 0 },
    precision: { default: 0 },
    showProgress: { default: !1 },
    showValue: { default: !1 },
    striped: { default: !1 },
    value: { default: 0 },
    variant: { default: void 0 }
  },
  setup(e) {
    const t = e, a = Pe(wo, null), l = c(u(t, "animated")), o = c(u(t, "showProgress")), n = c(u(t, "showValue")), r = c(u(t, "striped")), s = d(() => ({
      "progress-bar-animated": l.value || (a == null ? void 0 : a.animated.value),
      "progress-bar-striped": r.value || (a == null ? void 0 : a.striped.value) || l.value || (a == null ? void 0 : a.animated.value),
      [`bg-${t.variant}`]: t.variant !== void 0
    })), f = d(
      () => typeof t.precision == "number" ? t.precision : Number.parseFloat(t.precision)
    ), m = d(
      () => typeof t.value == "number" ? t.value : Number.parseFloat(t.value)
    ), B = d(
      () => typeof t.max == "number" ? t.max : t.max === void 0 ? void 0 : Number.parseFloat(t.max)
    ), h = d(
      () => t.labelHtml !== void 0 ? t.labelHtml : n.value || a != null && a.showValue.value ? m.value.toFixed(f.value) : o.value || a != null && a.showProgress.value ? (m.value * 100 / (B.value || 100)).toFixed(f.value) : t.label !== void 0 ? t.label : ""
    ), v = d(
      () => a != null && a.max.value ? `${m.value * 100 / (typeof a.max.value == "number" ? a.max.value : Number.parseInt(a.max.value))}%` : t.max ? `${m.value * 100 / (typeof t.max == "number" ? t.max : Number.parseInt(t.max))}%` : typeof t.value == "string" ? t.value : `${t.value}%`
    );
    return (w, g) => (p(), A("div", {
      class: R(["progress-bar", i(s)]),
      role: "progressbar",
      "aria-valuenow": e.value,
      "aria-valuemin": "0",
      "aria-valuemax": e.max,
      style: Le({ width: i(v) })
    }, [
      x(w.$slots, "default", {}, () => [
        se(Y(i(h)), 1)
      ])
    ], 14, Ec));
  }
}), Ic = /* @__PURE__ */ N({
  __name: "BProgress",
  props: {
    variant: { default: void 0 },
    max: { default: void 0 },
    height: { default: void 0 },
    animated: { default: !1 },
    precision: { default: 0 },
    showProgress: { default: !1 },
    showValue: { default: !1 },
    striped: { default: !1 },
    value: { default: 0 }
  },
  setup(e) {
    const t = e, a = c(u(t, "animated")), l = c(u(t, "showProgress")), o = c(u(t, "showValue")), n = c(u(t, "striped")), r = d(() => ({
      animated: t.animated,
      max: t.max,
      precision: t.precision,
      showProgress: t.showProgress,
      showValue: t.showValue,
      striped: t.striped,
      value: t.value,
      variant: t.variant
    }));
    return Ze(wo, {
      animated: a,
      max: ke(u(t, "max")),
      showProgress: l,
      showValue: o,
      striped: n
    }), (s, f) => (p(), A("div", {
      class: "progress",
      style: Le({ height: e.height })
    }, [
      x(s.$slots, "default", {}, () => [
        ye(Ln, $e(Ae(i(r))), null, 16)
      ])
    ], 4));
  }
}), Dl = ra("cols", [""], { type: [String, Number], default: null }), Fc = N({
  name: "BRow",
  props: {
    tag: { type: String, default: "div" },
    gutterX: { type: String, default: null },
    gutterY: { type: String, default: null },
    noGutters: { type: [Boolean, String], default: !1 },
    alignV: { type: String, default: null },
    alignH: { type: String, default: null },
    alignContent: { type: String, default: null },
    ...Dl
  },
  setup(e) {
    const t = c(u(e, "noGutters")), a = zt(u(e, "alignH")), l = d(() => ho(e, Dl, "cols", "row-cols"));
    return {
      computedClasses: d(() => [
        l.value,
        {
          [`gx-${e.gutterX}`]: e.gutterX !== null,
          [`gy-${e.gutterY}`]: e.gutterY !== null,
          "g-0": t.value,
          [`align-items-${e.alignV}`]: e.alignV !== null,
          [a.value]: e.alignH !== null,
          [`align-content-${e.alignContent}`]: e.alignContent !== null
        }
      ])
    };
  }
});
function Lc(e, t, a, l, o, n) {
  return p(), M(le(e.tag), {
    class: R(["row", e.computedClasses])
  }, {
    default: D(() => [
      x(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["class"]);
}
const Nc = /* @__PURE__ */ ze(Fc, [["render", Lc]]), jl = [
  "ar",
  "az",
  "ckb",
  "fa",
  "he",
  "ks",
  "lrc",
  "mzn",
  "ps",
  "sd",
  "te",
  "ug",
  "ur",
  "yi"
].map((e) => e.toLowerCase()), zc = (e) => {
  const t = Gt(e).toLowerCase().replace(os, "").split("-"), a = t.slice(0, 2).join("-"), [l] = t;
  return jl.includes(a) || jl.includes(l);
}, Rc = (e) => cs ? ga(e) ? e : { capture: !!e || !1 } : !!(ga(e) ? e.capture : e), Hc = (e, t, a, l) => {
  e && e.addEventListener && e.addEventListener(t, a, Rc(l));
}, Mc = (e, t, a, l) => {
  e && e.removeEventListener && e.removeEventListener(t, a, l);
}, ql = (e, t) => {
  (e ? Hc : Mc)(...t);
}, Mt = (e, { preventDefault: t = !0, propagation: a = !0, immediatePropagation: l = !1 } = {}) => {
  t && e.preventDefault(), a && e.stopPropagation(), l && e.stopImmediatePropagation();
}, Pa = "ArrowDown", Nn = "End", zn = "Home", Rn = "PageDown", Hn = "PageUp", Ea = "ArrowUp", Gl = 1, Wl = 100, Ul = 1, Kl = 500, Xl = 100, Jl = 10, Yl = 4, Zl = [Ea, Pa, zn, Nn, Hn, Rn], Dc = N({
  props: {
    ariaControls: { type: String, default: void 0 },
    ariaLabel: { type: String, default: void 0 },
    labelIncrement: { type: String, default: "Increment" },
    labelDecrement: { type: String, default: "Decrement" },
    modelValue: { type: Number, default: null },
    // V-model prop
    name: { type: String, default: "BFormSpinbutton" },
    disabled: { type: [Boolean, String], default: !1 },
    placeholder: { type: String, default: void 0 },
    locale: { type: String, default: "locale" },
    form: { type: String, default: void 0 },
    inline: { type: Boolean, default: !1 },
    size: { type: String, default: void 0 },
    formatterFn: {
      type: Function,
      default: void 0
    },
    readonly: { type: Boolean, default: !1 },
    vertical: { type: Boolean, default: !1 },
    repeatDelay: {
      type: [String, Number],
      default: Kl
    },
    repeatInterval: {
      type: [String, Number],
      default: Xl
    },
    repeatStepMultiplier: {
      type: [String, Number],
      default: Yl
    },
    repeatThreshold: {
      type: [String, Number],
      default: Jl
    },
    required: { type: [Boolean, String], default: !1 },
    step: { type: [String, Number], default: Ul },
    min: { type: [String, Number], default: Gl },
    max: { type: [String, Number], default: Wl },
    wrap: { type: Boolean, default: !1 },
    state: { type: [Boolean, String], default: null }
  },
  emits: ["update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = Te(e, "modelValue", t), l = H(!1), o = d(() => 1), n = () => {
      t("change", s.value);
    }, r = H(null), s = d({
      get: () => a.value === null ? r.value : a.value,
      set: (L) => {
        a.value === null ? r.value = L : a.value = L;
      }
    });
    let f, m, B = !1;
    const h = d(() => At(e.step, Ul)), v = d(() => At(e.min, Gl)), w = d(() => {
      const L = At(e.max, Wl), z = h.value, ee = v.value;
      return Math.floor((L - ee) / z) * z + ee;
    }), g = d(() => {
      const L = lt(e.repeatDelay, 0);
      return L > 0 ? L : Kl;
    }), k = d(() => {
      const L = lt(e.repeatInterval, 0);
      return L > 0 ? L : Xl;
    }), y = d(
      () => Math.max(lt(e.repeatThreshold, Jl), 1)
    ), $ = d(
      () => Math.max(lt(e.repeatStepMultiplier, Yl), 1)
    ), b = d(() => {
      const L = h.value;
      return Math.floor(L) === L ? 0 : (L.toString().split(".")[1] || "").length;
    }), _ = d(() => Math.pow(10, b.value || 0)), V = d(() => {
      const { value: L } = s;
      return L === null ? "" : L.toFixed(b.value);
    }), T = d(() => {
      const L = [e.locale];
      return new Intl.NumberFormat(L).resolvedOptions().locale;
    }), S = d(
      () => (
        //todo
        zc(T.value)
      )
    ), O = () => {
      const L = b.value;
      return new Intl.NumberFormat(T.value, {
        style: "decimal",
        useGrouping: !1,
        minimumIntegerDigits: 1,
        minimumFractionDigits: L,
        maximumFractionDigits: L,
        notation: "standard"
      }).format;
    }, I = d(() => e.formatterFn ?? O()), C = d(() => ({
      role: "group",
      lang: T.value,
      tabindex: e.disabled ? null : "-1",
      title: e.ariaLabel
    })), F = d(() => a.value !== null || r.value !== null), P = d(() => ({
      dir: S.value,
      spinId: o.value,
      tabindex: e.disabled ? null : "0",
      role: "spinbutton",
      "aria-live": "off",
      "aria-label": e.ariaLabel || null,
      "aria-controls": e.ariaControls || null,
      "aria-invalid": e.state === !1 || !F.value && e.required ? !0 : null,
      "aria-required": e.required ? !0 : null,
      "aria-valuemin": v.value,
      "aria-valuemax": w.value,
      "aria-valuenow": s.value !== null ? s.value : null,
      "aria-valuetext": s.value !== null ? I.value(s.value) : null
    })), W = (L) => {
      let { value: z } = s;
      if (!e.disabled && z !== null) {
        const ee = h.value * L, re = v.value, he = w.value, Oe = _.value, { wrap: U } = e;
        z = Math.round((z - re) / ee) * ee + re + ee, z = Math.round(z * Oe) / Oe, s.value = z > he ? U ? re : he : z < re ? U ? he : re : z;
      }
    }, j = (L = 1) => {
      s.value === null ? s.value = v.value : W(1 * L);
    }, te = (L = 1) => {
      s.value === null ? s.value = e.wrap ? w.value : v.value : W(-1 * L);
    }, X = (L) => {
      const { code: z, altKey: ee, ctrlKey: re, metaKey: he } = L;
      if (!(e.disabled || e.readonly || ee || re || he) && Zl.includes(z)) {
        if (Mt(L, { propagation: !1 }), B)
          return;
        ne(), [Ea, Pa].includes(z) ? (B = !0, z === Ea ? ae(L, j) : z === Pa && ae(L, te)) : z === Hn ? j($.value) : z === Rn ? te($.value) : z === zn ? s.value = v.value : z === Nn && (s.value = w.value);
      }
    }, q = (L) => {
      const { code: z, altKey: ee, ctrlKey: re, metaKey: he } = L;
      e.disabled || e.readonly || ee || re || he || Zl.includes(z) && (Mt(L, { propagation: !1 }), ne(), B = !1, n());
    }, ae = (L, z) => {
      const { type: ee } = L || {};
      if (!e.disabled && !e.readonly) {
        if (me(L) && ee === "mousedown" && L.button)
          return;
        ne(), z(1);
        const re = y.value, he = $.value, Oe = g.value, U = k.value;
        f = setTimeout(() => {
          let ie = 0;
          m = setInterval(() => {
            z(ie < re ? 1 : he), ie++;
          }, U);
        }, Oe);
      }
    };
    function me(L) {
      return L.type === "mouseup" || L.type === "mousedown";
    }
    const pe = (L) => {
      me(L) && L.type === "mouseup" && L.button || (Mt(L, { propagation: !1 }), ne(), be(!1), n());
    }, be = (L) => {
      try {
        ql(L, [document.body, "mouseup", pe, !1]), ql(L, [document.body, "touchend", pe, !1]);
      } catch {
        return 0;
      }
    }, ne = () => {
      clearTimeout(f), clearInterval(m), f = void 0, m = void 0;
    }, ve = (L, z, ee, re, he, Oe, U) => {
      const ie = de(ee, {
        props: { scale: l.value ? 1.5 : 1.25 },
        attrs: { "aria-hidden": !0 }
      }), Re = { hasFocus: l.value }, Ie = (E) => {
        !e.disabled && !e.readonly && (Mt(E, { propagation: !1 }), be(!0), ae(E, L));
      };
      return de(
        "button",
        {
          class: [{ "py-0": !e.vertical }, "btn", "btn-sm", "border-0", "rounded-0"],
          tabindex: "-1",
          type: "button",
          disabled: e.disabled || e.readonly || Oe,
          "aria-disabled": e.disabled || e.readonly || Oe ? !0 : null,
          "aria-controls": o.value,
          "aria-label": z || null,
          "aria-keyshortcuts": he || null,
          onmousedown: Ie,
          ontouchstart: Ie
          // 'ref': keyRef,
        },
        [De(U, Re) || ie]
      );
    };
    return () => {
      const L = ve(
        j,
        e.labelIncrement,
        de(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "16",
            height: "16",
            fill: "currentColor",
            class: "bi bi-plus",
            viewBox: "0 0 16 16"
          },
          de("path", {
            d: "M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"
          })
        ),
        "inc",
        "ArrowUp",
        !1,
        "increment"
      ), z = ve(
        te,
        e.labelDecrement,
        de(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "16",
            height: "16",
            fill: "currentColor",
            class: "bi bi-dash",
            viewBox: "0 0 16 16"
          },
          de("path", { d: "M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z" })
        ),
        "dec",
        "ArrowDown",
        !1,
        "decrement"
      ), ee = [];
      e.name && !e.disabled && ee.push(
        de("input", {
          type: "hidden",
          name: e.name,
          form: e.form || null,
          // TODO: Should this be set to '' if value is out of range?
          value: V.value,
          key: "hidden"
        })
      );
      const re = de(
        // We use 'output' element to make this accept a `<label for="id">` (Except IE)
        "output",
        {
          class: [
            { "d-flex": e.vertical },
            { "align-self-center": !e.vertical },
            { "align-items-center": e.vertical },
            { "border-top": e.vertical },
            { "border-bottom": e.vertical },
            { "border-start": !e.vertical },
            { "border-end": !e.vertical },
            "flex-grow-1"
          ],
          ...P.value,
          key: "output"
          // ref: 'spinner',
        },
        [
          de(
            "bdi",
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            //@ts-ignore How can we narrow this type down
            F.value ? I.value(s.value) : e.placeholder || ""
          )
        ]
      );
      return de(
        "div",
        {
          class: [
            "b-form-spinbutton form-control",
            { disabled: e.disabled },
            { readonly: e.readonly },
            { focus: l },
            { "d-inline-flex": e.inline || e.vertical },
            { "d-flex": !e.inline && !e.vertical },
            { "align-items-stretch": !e.vertical },
            { "flex-column": e.vertical },
            e.size ? `form-control-${e.size}` : null
            // this.stateClass //TODO
          ],
          ...C.value,
          onkeydown: X,
          onkeyup: q
          // We use capture phase (`!` prefix) since focus and blur do not bubble
          // 'focus': onFocusBlur, //TODO
          // 'blur': onFocusBlur, //TODO
        },
        e.vertical ? [L, ee, re, z] : [z, ee, re, L]
      );
    };
  }
}), jc = ["TD", "TH", "TR"], qc = [
  "a",
  "a *",
  // Include content inside links
  "button",
  "button *",
  // Include content inside buttons
  "input:not(.disabled):not([disabled])",
  "select:not(.disabled):not([disabled])",
  "textarea:not(.disabled):not([disabled])",
  '[role="link"]',
  '[role="link"] *',
  '[role="button"]',
  '[role="button"] *',
  "[tabindex]:not(.disabled):not([disabled])"
].join(","), Dt = (e) => {
  if (!e || !e.target)
    return !1;
  const t = e.target;
  if ("disabled" in t && t.disabled || jc.indexOf(t.tagName) !== -1)
    return !1;
  if (al(".dropdown-menu", t))
    return !0;
  const a = t.tagName === "LABEL" ? t : al("label", t);
  if (a) {
    const l = Ra(a, "for"), o = l ? Bs(l) : go("input, select, textarea", a);
    if (o && !o.disabled)
      return !0;
  }
  return bo(t, qc);
}, Gc = () => {
  const e = (m, B) => {
    const h = [];
    return !(m != null && m.length) && (B != null && B.length) ? (Object.keys(B[0]).forEach((v) => h.push({ key: v, label: Qa(v) })), h) : (Array.isArray(m) && m.forEach((v) => {
      typeof v == "string" ? h.push({ key: v, label: Qa(v) }) : ga(v) && v.key && typeof v.key == "string" && h.push({ ...v });
    }), h);
  }, t = H([]), a = (m, B, h, v) => (t.value = Wt(B), "isFilterableTable" in v && v.isFilterableTable.value === !0 && h.filter && (t.value = n(t.value, h.filter, h.filterable)), "isSortable" in v && v.isSortable.value === !0 && (t.value = o(
    m,
    t.value,
    {
      key: h.sortBy,
      desc: v.sortDescBoolean.value
    },
    h.sortCompare
  )), t.value), l = H(void 0), o = (m, B, h, v) => {
    if (!h || !h.key)
      return B;
    const w = h.key;
    return B.sort((g, k) => {
      if (v !== void 0)
        return v(g, k, h.key, h.desc);
      const y = (_) => typeof _ == "object" ? JSON.stringify(_) : _;
      return y(g[w]) > y(k[w]) ? h.desc ? -1 : 1 : y(k[w]) > y(g[w]) ? h.desc ? 1 : -1 : 0;
    });
  }, n = (m, B, h) => m.filter(
    (v) => Object.entries(v).filter((w) => {
      const [g, k] = w;
      return !k || g[0] === "_" || h.length > 0 && !h.includes(g) ? !1 : (typeof k == "object" ? JSON.stringify(Object.values(k)) : typeof k == "string" ? k : k.toString()).toLowerCase().includes(B.toLowerCase());
    }).length > 0
  );
  return {
    normaliseFields: e,
    mapItems: a,
    internalItems: t,
    updateInternalItems: async (m) => {
      try {
        return t.value = await ba(m), t.value;
      } catch {
        return;
      }
    },
    filterEvent: l,
    notifyFilteredItems: () => {
      l.value && l.value(t.value);
    },
    formatItem: (m, B) => {
      const h = m[B.key];
      return B.formatter && typeof B.formatter == "function" ? B.formatter(h, B.key, m) : m[B.key];
    }
  };
}, Wc = ["title", "abbr", "onClick"], Uc = { class: "d-inline-flex flex-nowrap align-items-center gap-1" }, Kc = { key: 1 }, Xc = ["onClick", "onDblclick", "onMouseenter", "onMouseleave"], Jc = {
  key: 0,
  class: "b-table-stacked-label"
}, Yc = ["colspan"], Zc = ["colspan"], Qc = { class: "d-flex align-items-center justify-content-center gap-2" }, ef = /* @__PURE__ */ K("strong", null, "Loading...", -1), tf = {
  key: 1,
  class: "b-table-empty-slot"
}, af = ["colspan"], lf = { key: 0 }, of = ["title", "abbr", "onClick"], nf = { key: 1 }, sf = { key: 2 }, rf = { key: 3 }, uf = /* @__PURE__ */ N({
  __name: "BTable",
  props: {
    align: { default: void 0 },
    caption: { default: void 0 },
    captionTop: { default: !1 },
    borderless: { default: !1 },
    bordered: { default: !1 },
    borderVariant: { default: void 0 },
    dark: { default: !1 },
    fields: { default: () => [] },
    footClone: { default: !1 },
    hover: { default: !1 },
    items: { default: () => [] },
    provider: { default: void 0 },
    sortCompare: { default: void 0 },
    noProvider: { default: void 0 },
    noProviderPaging: { default: void 0 },
    noProviderSorting: { default: void 0 },
    noProviderFiltering: { default: void 0 },
    responsive: { type: [Boolean, String], default: !1 },
    small: { default: !1 },
    striped: { default: !1 },
    stacked: { type: [Boolean, String], default: !1 },
    labelStacked: { type: Boolean, default: !1 },
    variant: { default: void 0 },
    sortBy: { default: void 0 },
    sortDesc: { default: !1 },
    sortInternal: { default: !0 },
    selectable: { default: !1 },
    stickySelect: { default: !1 },
    selectHead: { type: [Boolean, String], default: !0 },
    selectMode: { default: "single" },
    selectionVariant: { default: "primary" },
    stickyHeader: { default: !1 },
    busy: { default: !1 },
    showEmpty: { default: !1 },
    perPage: { default: void 0 },
    currentPage: { default: 1 },
    filter: { default: void 0 },
    filterable: { default: void 0 },
    emptyText: { default: "There are no records to show" },
    emptyFilteredText: { default: "There are no records matching your request" }
  },
  emits: ["headClicked", "rowClicked", "rowDblClicked", "rowHovered", "rowUnhovered", "rowSelected", "rowUnselected", "selection", "update:busy", "update:sortBy", "update:sortDesc", "sorted", "filtered"],
  setup(e, { expose: t, emit: a }) {
    const l = e, o = Ee(), n = Gc(), r = c(u(l, "footClone")), s = c(u(l, "sortDesc")), f = c(u(l, "sortInternal")), m = c(u(l, "selectable")), B = c(u(l, "stickySelect")), h = c(u(l, "labelStacked")), v = c(u(l, "busy")), w = c(u(l, "showEmpty")), g = c(u(l, "noProviderPaging")), k = c(u(l, "noProviderSorting")), y = c(u(l, "noProviderFiltering")), $ = H(v.value);
    n.filterEvent.value = async (E) => {
      if (C.value) {
        await L();
        return;
      }
      const J = await ba(E);
      a("filtered", J);
    };
    const b = H(/* @__PURE__ */ new Set([])), _ = d(() => b.value.size > 0), V = d(() => ({
      [`align-${l.align}`]: l.align !== void 0,
      "b-table-selectable": m.value,
      [`b-table-select-${l.selectMode}`]: m.value,
      "b-table-selecting user-select-none": m.value && _.value,
      "b-table-busy": $.value,
      "b-table-sortable": P.value,
      "b-table-sort-desc": P.value && s.value === !0,
      "b-table-sort-asc": P.value && s.value === !1
    })), T = d(() => ({
      bordered: l.bordered,
      borderless: l.borderless,
      borderVariant: l.borderVariant,
      captionTop: l.captionTop,
      dark: l.dark,
      hover: l.hover,
      responsive: l.responsive,
      striped: l.striped,
      stacked: l.stacked,
      small: l.small,
      tableClass: V.value,
      tableVariant: l.variant,
      stickyHeader: l.stickyHeader
    })), S = d(() => n.normaliseFields(l.fields, l.items)), O = d(
      () => S.value.length + (m.value ? 1 : 0)
    ), I = d(() => l.filter !== void 0 && l.filter !== ""), C = d(() => l.provider !== void 0), F = d(
      () => m.value && (!!l.selectHead || o.selectHead !== void 0)
    ), P = d(
      () => l.fields.filter((E) => typeof E == "string" ? !1 : E.sortable).length > 0
    ), W = d(() => P.value && f.value === !0), j = d(() => {
      const E = C.value ? n.internalItems.value : W.value ? n.mapItems(l.fields, l.items, l, {
        isSortable: P,
        isFilterableTable: I,
        sortDescBoolean: s
      }) : l.items;
      if (l.perPage !== void 0) {
        const J = (l.currentPage - 1) * l.perPage;
        return E.splice(J, l.perPage);
      }
      return E;
    }), te = (E) => typeof E == "string" ? el(E) : E.label !== void 0 ? E.label : typeof E.key == "string" ? el(E.key) : E.key, X = (E, J, ge = !1) => {
      const G = typeof E == "string" ? E : E.key;
      a("headClicked", G, E, J, ge), be(E);
    }, q = (E, J, ge) => {
      a("rowClicked", E, J, ge), ve(E, J, ge.shiftKey);
    }, ae = (E, J, ge) => a("rowDblClicked", E, J, ge), me = (E, J, ge) => a("rowHovered", E, J, ge), pe = (E, J, ge) => a("rowUnhovered", E, J, ge), be = (E) => {
      if (!P.value)
        return;
      const J = typeof E == "string" ? E : E.key, ge = typeof E == "string" ? !1 : E.sortable;
      if (P.value === !0 && ge === !0) {
        const G = !s.value;
        J !== l.sortBy && a("update:sortBy", J), a("update:sortDesc", G), a("sorted", J, G);
      }
    }, ne = () => {
      m.value && a("selection", Array.from(b.value));
    }, ve = (E, J, ge = !1) => {
      if (m.value) {
        if (b.value.has(E))
          b.value.delete(E), a("rowUnselected", E);
        else if (l.selectMode === "single" && b.value.size > 0 && (b.value.forEach((G) => a("rowUnselected", G)), b.value.clear()), l.selectMode === "range" && b.value.size > 0 && ge) {
          const G = Array.from(b.value).pop(), ue = j.value.findIndex((it) => it === G), oe = Math.min(ue, J), et = Math.max(ue, J);
          j.value.slice(oe, et + 1).forEach((it) => {
            b.value.has(it) || (b.value.add(it), a("rowSelected", it));
          });
        } else
          b.value.add(E), a("rowSelected", E);
        ne();
      }
    }, L = async () => {
      if (!C.value || !l.provider || $.value)
        return;
      $.value = !0;
      const E = new Proxy(
        {
          currentPage: l.currentPage,
          filter: l.filter,
          sortBy: l.sortBy,
          sortDesc: l.sortDesc,
          perPage: l.perPage
        },
        {
          get: (ge, G) => G in ge ? ge[G] : void 0,
          set: () => (console.error("BTable provider context is a read-only object."), !0)
        }
      ), J = l.provider(E, n.updateInternalItems);
      if (J !== void 0) {
        if (J instanceof Promise)
          try {
            const ge = await J;
            return Array.isArray(ge) ? await n.updateInternalItems(ge) : void 0;
          } finally {
            $.value && ($.value = !1);
          }
        try {
          return await n.updateInternalItems(J);
        } finally {
          $.value && ($.value = !1);
        }
      }
    }, z = (E) => {
      E._showDetails = !E._showDetails;
    }, ee = (E) => [
      E.class,
      E.thClass,
      E.variant ? `table-${E.variant}` : void 0,
      {
        "b-table-sortable-column": P.value && E.sortable,
        "b-table-sticky-column": E.stickyColumn
      }
    ], re = (E, J) => [
      E.class,
      E.tdClass,
      E.variant ? `table-${E.variant}` : void 0,
      J != null && J._cellVariants && (J != null && J._cellVariants[E.key]) ? `table-${J == null ? void 0 : J._cellVariants[E.key]}` : void 0,
      {
        "b-table-sticky-column": E.stickyColumn
      }
    ], he = (E) => [
      E._rowVariant ? `table-${E._rowVariant}` : null,
      E._rowVariant ? `table-${E._rowVariant}` : null,
      m.value && b.value.has(E) ? `selected table-${l.selectionVariant}` : null
    ], Oe = () => {
      if (!m.value)
        return;
      const E = b.value.size > 0 ? Array.from(b.value) : [];
      b.value = /* @__PURE__ */ new Set([...j.value]), b.value.forEach((J) => {
        E.includes(J) || a("rowSelected", J);
      }), ne();
    }, U = () => {
      m.value && (b.value.forEach((E) => {
        a("rowUnselected", E);
      }), b.value = /* @__PURE__ */ new Set([]), ne());
    }, ie = (E) => {
      if (!m.value)
        return;
      const J = j.value[E];
      !J || b.value.has(J) || (b.value.add(J), a("rowSelected", J), ne());
    }, Re = (E) => {
      if (!m.value)
        return;
      const J = j.value[E];
      !J || !b.value.has(J) || (b.value.delete(J), a("rowUnselected", J), ne());
    }, Ie = async (E, J, ge) => {
      if (J === ge)
        return;
      const G = (Mn) => l.noProvider && l.noProvider.includes(Mn), ue = !["currentPage", "perPage"].includes(E), oe = ["currentPage", "perPage"].includes(E) && (G("paging") || g.value === !0), et = ["filter"].includes(E) && (G("filtering") || y.value === !0), it = ["sortBy", "sortDesc"].includes(E) && (G("sorting") || k.value === !0);
      oe || et || it || (await L(), ue && n.notifyFilteredItems());
    };
    return ce(
      () => l.filter,
      (E, J) => {
        E === J || C.value || E || ba(l.items).then((ge) => a("filtered", ge));
      }
    ), ce(
      $,
      () => $.value !== v.value && a("update:busy", $.value)
    ), ce(
      v,
      () => $.value !== v.value && ($.value = v.value)
    ), ce(
      () => l.filter,
      (E, J) => Ie("filter", E, J)
    ), ce(
      () => l.currentPage,
      (E, J) => Ie("currentPage", E, J)
    ), ce(
      () => l.perPage,
      (E, J) => Ie("perPage", E, J)
    ), ce(
      () => l.sortBy,
      (E, J) => Ie("sortBy", E, J)
    ), ce(
      () => l.sortDesc,
      (E, J) => Ie("sortDesc", E, J)
    ), Ye(() => {
      C.value && L();
    }), t({
      selectAllRows: Oe,
      clearSelected: U,
      selectRow: ie,
      unselectRow: Re,
      refresh: L
    }), (E, J) => (p(), M(Za, $e(Ae(i(T))), {
      default: D(() => {
        var ge;
        return [
          K("thead", null, [
            E.$slots["thead-top"] ? x(E.$slots, "thead-top", { key: 0 }) : Z("", !0),
            K("tr", null, [
              i(F) ? (p(), A("th", {
                key: 0,
                class: R(["b-table-selection-column", {
                  "b-table-sticky-column": i(B)
                }])
              }, [
                x(E.$slots, "select-head", {}, () => [
                  se(Y(typeof e.selectHead == "boolean" ? "Selected" : e.selectHead), 1)
                ])
              ], 2)) : Z("", !0),
              (p(!0), A(fe, null, Be(i(S), (G) => (p(), A("th", Q({
                key: G.key,
                scope: "col",
                class: ee(G),
                title: G.headerTitle,
                abbr: G.headerAbbr,
                style: G.thStyle
              }, G.thAttr, {
                onClick: (ue) => X(G, ue)
              }), [
                K("div", Uc, [
                  x(E.$slots, "sort-icon", {
                    field: G,
                    sortBy: e.sortBy,
                    selected: G.key === e.sortBy,
                    isDesc: i(s),
                    direction: i(s) ? "desc" : "asc"
                  }, () => [
                    i(P) && G.sortable ? (p(), A("span", {
                      key: 0,
                      class: R(["b-table-sort-icon", {
                        sorted: G.key === e.sortBy,
                        [`sorted-${i(s) ? "desc" : "asc"}`]: G.key === e.sortBy
                      }])
                    }, null, 2)) : Z("", !0)
                  ]),
                  K("div", null, [
                    E.$slots["head(" + G.key + ")"] || E.$slots["head()"] ? x(E.$slots, E.$slots["head(" + G.key + ")"] ? "head(" + G.key + ")" : "head()", {
                      key: 0,
                      label: G.label
                    }) : (p(), A(fe, { key: 1 }, [
                      se(Y(te(G)), 1)
                    ], 64))
                  ])
                ])
              ], 16, Wc))), 128))
            ]),
            E.$slots["thead-sub"] ? (p(), A("tr", Kc, [
              (p(!0), A(fe, null, Be(i(S), (G) => (p(), A("td", {
                key: G.key,
                scope: "col",
                class: R([G.class, G.thClass, G.variant ? `table-${G.variant}` : ""])
              }, [
                E.$slots["thead-sub"] ? x(E.$slots, "thead-sub", Q({
                  key: 0,
                  items: i(S)
                }, G)) : (p(), A(fe, { key: 1 }, [
                  se(Y(G.label), 1)
                ], 64))
              ], 2))), 128))
            ])) : Z("", !0)
          ]),
          K("tbody", null, [
            (p(!0), A(fe, null, Be(i(j), (G, ue) => (p(), A(fe, { key: ue }, [
              K("tr", {
                class: R(he(G)),
                onClick: (oe) => !i(Dt)(oe) && q(G, ue, oe),
                onDblclick: (oe) => !i(Dt)(oe) && ae(G, ue, oe),
                onMouseenter: (oe) => !i(Dt)(oe) && me(G, ue, oe),
                onMouseleave: (oe) => !i(Dt)(oe) && pe(G, ue, oe)
              }, [
                i(F) ? (p(), A("td", {
                  key: 0,
                  class: R(["b-table-selection-column", {
                    "b-table-sticky-column": i(B)
                  }])
                }, [
                  x(E.$slots, "select-cell", {}, () => [
                    K("span", {
                      class: R(b.value.has(G) ? "text-primary" : "")
                    }, "ð¹", 2)
                  ])
                ], 2)) : Z("", !0),
                (p(!0), A(fe, null, Be(i(S), (oe) => (p(), A("td", Q({
                  key: oe.key
                }, oe.tdAttr, {
                  class: re(oe, G)
                }), [
                  e.stacked && i(h) ? (p(), A("label", Jc, Y(te(oe)), 1)) : Z("", !0),
                  E.$slots["cell(" + oe.key + ")"] || E.$slots["cell()"] ? x(E.$slots, E.$slots["cell(" + oe.key + ")"] ? "cell(" + oe.key + ")" : "cell()", {
                    key: 1,
                    value: G[oe.key],
                    index: ue,
                    item: G,
                    field: oe,
                    items: e.items,
                    toggleDetails: () => z(G),
                    detailsShowing: G._showDetails
                  }) : (p(), A(fe, { key: 2 }, [
                    se(Y(i(n).formatItem(G, oe)), 1)
                  ], 64))
                ], 16))), 128))
              ], 42, Xc),
              G._showDetails === !0 && E.$slots["row-details"] ? (p(), A("tr", {
                key: 0,
                class: R(he(G))
              }, [
                K("td", { colspan: i(O) }, [
                  x(E.$slots, "row-details", {
                    item: G,
                    toggleDetails: () => z(G)
                  })
                ], 8, Yc)
              ], 2)) : Z("", !0)
            ], 64))), 128)),
            $.value ? (p(), A("tr", {
              key: 0,
              class: R(["b-table-busy-slot", { "b-table-static-busy": i(j).length === 0 }])
            }, [
              K("td", { colspan: i(O) }, [
                x(E.$slots, "table-busy", {}, () => [
                  K("div", Qc, [
                    ye(fa, { class: "align-middle" }),
                    ef
                  ])
                ])
              ], 8, Zc)
            ], 2)) : Z("", !0),
            i(w) && i(j).length === 0 ? (p(), A("tr", tf, [
              K("td", { colspan: i(O) }, [
                x(E.$slots, "empty", {
                  items: i(j),
                  filtered: i(I)
                }, () => [
                  se(Y(i(I) ? e.emptyFilteredText : e.emptyText), 1)
                ])
              ], 8, af)
            ])) : Z("", !0)
          ]),
          i(r) ? (p(), A("tfoot", lf, [
            K("tr", null, [
              (p(!0), A(fe, null, Be(i(S), (G) => (p(), A("th", Q({
                key: G.key
              }, G.thAttr, {
                scope: "col",
                class: [G.class, G.thClass, G.variant ? `table-${G.variant}` : ""],
                title: G.headerTitle,
                abbr: G.headerAbbr,
                style: G.thStyle,
                onClick: (ue) => X(G, ue, !0)
              }), Y(G.label), 17, of))), 128))
            ])
          ])) : E.$slots["custom-foot"] ? (p(), A("tfoot", nf, [
            x(E.$slots, "custom-foot", {
              fields: i(S),
              items: e.items,
              columns: (ge = i(S)) == null ? void 0 : ge.length
            })
          ])) : Z("", !0),
          E.$slots["table-caption"] ? (p(), A("caption", sf, [
            x(E.$slots, "table-caption")
          ])) : e.caption ? (p(), A("caption", rf, Y(e.caption), 1)) : Z("", !0)
        ];
      }),
      _: 3
    }, 16));
  }
}), df = /* @__PURE__ */ N({
  __name: "BTbody",
  props: {
    variant: { default: void 0 }
  },
  setup(e) {
    const t = e, a = d(() => ({
      [`thead-${t.variant}`]: t.variant !== void 0
    }));
    return (l, o) => (p(), A("tbody", {
      class: R(i(a))
    }, [
      x(l.$slots, "default")
    ], 2));
  }
}), cf = ["scope", "colspan", "rowspan", "data-label"], ff = { key: 0 }, vf = /* @__PURE__ */ N({
  __name: "BTd",
  props: {
    colspan: { default: void 0 },
    rowspan: { default: void 0 },
    stackedHeading: { default: void 0 },
    stickyColumn: { default: !1 },
    variant: { default: void 0 }
  },
  setup(e) {
    const t = e, a = c(u(t, "stickyColumn")), l = d(() => ({
      [`table-${t.variant}`]: t.variant !== void 0,
      "b-table-sticky-column": a.value,
      "table-b-table-default": a.value && t.variant === void 0
    })), o = d(() => t.colspan ? "colspan" : t.rowspan ? "rowspan" : "col");
    return (n, r) => (p(), A("td", {
      scope: i(o),
      class: R(i(l)),
      colspan: e.colspan,
      rowspan: e.rowspan,
      "data-label": e.stackedHeading
    }, [
      e.stackedHeading ? (p(), A("div", ff, [
        x(n.$slots, "default")
      ])) : x(n.$slots, "default", { key: 1 })
    ], 10, cf));
  }
}), mf = /* @__PURE__ */ N({
  __name: "BTfoot",
  props: {
    variant: { default: void 0 }
  },
  setup(e) {
    const t = e, a = d(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, o) => (p(), A("tfoot", {
      class: R(i(a))
    }, [
      x(l.$slots, "default")
    ], 2));
  }
}), pf = ["scope", "colspan", "rowspan", "data-label"], gf = { key: 0 }, bf = /* @__PURE__ */ N({
  __name: "BTh",
  props: {
    colspan: { default: void 0 },
    rowspan: { default: void 0 },
    stackedHeading: { default: void 0 },
    stickyColumn: { default: !1 },
    variant: { default: void 0 }
  },
  setup(e) {
    const t = e, a = c(u(t, "stickyColumn")), l = d(() => ({
      [`table-${t.variant}`]: t.variant !== void 0,
      "b-table-sticky-column": a.value,
      "table-b-table-default": a.value && t.variant === void 0
    })), o = d(() => t.colspan ? "colspan" : t.rowspan ? "rowspan" : "col");
    return (n, r) => (p(), A("th", {
      scope: i(o),
      class: R(i(l)),
      colspan: e.colspan,
      rowspan: e.rowspan,
      "data-label": e.stackedHeading
    }, [
      e.stackedHeading !== void 0 ? (p(), A("div", gf, [
        x(n.$slots, "default")
      ])) : x(n.$slots, "default", { key: 1 })
    ], 10, pf));
  }
}), hf = /* @__PURE__ */ N({
  __name: "BThead",
  props: {
    variant: { default: void 0 }
  },
  setup(e) {
    const t = e, a = d(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, o) => (p(), A("thead", {
      class: R(i(a))
    }, [
      x(l.$slots, "default")
    ], 2));
  }
}), yf = /* @__PURE__ */ N({
  __name: "BTr",
  props: {
    variant: { default: void 0 }
  },
  setup(e) {
    const t = e, a = d(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, o) => (p(), A("tr", {
      class: R(i(a))
    }, [
      x(l.$slots, "default")
    ], 2));
  }
}), Bf = /* @__PURE__ */ N({
  __name: "BTab",
  props: {
    id: { default: void 0 },
    title: { default: void 0 },
    active: { default: !1 },
    buttonId: { default: void 0 },
    disabled: { default: !1 },
    lazy: { default: void 0 },
    lazyOnce: { default: void 0 },
    noBody: { type: [Boolean, String], default: !1 },
    tag: { default: "div" },
    titleItemClass: { default: void 0 },
    titleLinkAttributes: { default: void 0 },
    titleLinkClass: { default: void 0 }
  },
  setup(e) {
    const t = e, a = Pe(Bo, null), l = c(u(t, "active")), o = c(u(t, "disabled")), n = c(u(t, t.lazyOnce !== void 0 ? "lazyOnce" : "lazy")), r = H(!1), s = d(() => !!(a != null && a.lazy.value || n.value)), f = d(() => t.lazyOnce !== void 0), m = d(() => l.value && !o.value), B = d(() => {
      const v = s.value && f.value && r.value;
      return m.value || !s.value || v;
    }), h = d(() => ({
      active: l.value,
      show: l.value,
      "card-body": (a == null ? void 0 : a.card.value) && t.noBody === !1
    }));
    return ce(B, (v) => {
      v && !r.value && (r.value = !0);
    }), (v, w) => (p(), M(le(e.tag), {
      id: e.id,
      class: R(["tab-pane", i(h)]),
      role: "tabpanel",
      "aria-labelledby": "profile-tab"
    }, {
      default: D(() => [
        i(B) ? x(v.$slots, "default", { key: 0 }) : Z("", !0)
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), $f = ["id", "data-bs-target", "aria-controls", "aria-selected", "onClick"], wf = /* @__PURE__ */ N({
  __name: "BTabs",
  props: {
    activeNavItemClass: { default: void 0 },
    activeTabClass: { default: void 0 },
    align: { default: void 0 },
    contentClass: { default: void 0 },
    card: { default: !1 },
    end: { default: !1 },
    fill: { default: !1 },
    id: { default: void 0 },
    justified: { default: !1 },
    lazy: { default: !1 },
    navClass: { default: void 0 },
    navWrapperClass: { default: void 0 },
    noFade: { default: !1 },
    noNavStyle: { default: !1 },
    pills: { default: !1 },
    small: { default: !1 },
    tag: { default: "div" },
    vertical: { default: !1 },
    modelValue: { default: -1 }
  },
  emits: ["update:modelValue", "activate-tab", "click"],
  setup(e, { emit: t }) {
    const a = e, l = Te(a, "modelValue", t), o = Ee(), n = c(u(a, "card")), r = c(u(a, "end")), s = c(u(a, "fill")), f = c(u(a, "justified")), m = c(u(a, "lazy")), B = c(u(a, "noFade")), h = c(u(a, "noNavStyle")), v = c(u(a, "pills")), w = c(u(a, "small")), g = c(u(a, "vertical")), k = H(l.value), y = H(""), $ = d({
      get: () => k.value,
      set: (C) => {
        k.value = C, b.value.length > 0 && C >= 0 && C < b.value.length ? y.value = b.value[C].buttonId : y.value = "", l.value = C;
      }
    }), b = d(
      () => o.default === void 0 ? [] : ha(o.default, "BTab").map((C, F) => {
        C.props || (C.props = {});
        const P = C.props["button-id"] || at("tab"), W = C.props.id || at(), j = $.value > -1 ? F === $.value : C.props.active === "", te = C.props["title-item-class"], X = C.props["title-link-attributes"];
        return {
          buttonId: P,
          contentId: W,
          active: j,
          disabled: C.props.disabled === "" || C.props.disabled === !0,
          navItemClasses: [
            {
              active: j,
              disabled: C.props.disabled === "" || C.props.disabled === !0
            },
            j && a.activeNavItemClass ? a.activeNavItemClass : null,
            C.props["title-link-class"]
          ],
          tabClasses: [
            {
              fade: !B.value
            },
            j && a.activeTabClass ? a.activeTabClass : null
          ],
          target: `#${W}`,
          title: C.props.title,
          titleItemClass: te,
          titleLinkAttributes: X,
          onClick: C.props.onClick,
          tab: C,
          //TODO remove this in future since the mapped value does not provide a direct reference to the actual slot component.
          tabComponent: () => ha(o.default, "BTab")[F]
        };
      })
    ), _ = d(() => !(b != null && b.value && b.value.length > 0)), V = d(() => ({
      "d-flex": g.value,
      "align-items-start": g.value
    })), T = zt(u(a, "align")), S = d(() => ({
      "nav-pills": v.value,
      "flex-column me-3": g.value,
      [T.value]: a.align !== void 0,
      "nav-fill": s.value,
      "card-header-tabs": n.value,
      "nav-justified": f.value,
      "nav-tabs": !h.value && !v.value,
      small: w.value
    })), O = (C) => {
      let F = !1;
      if (C !== void 0 && C > -1 && C < b.value.length && !b.value[C].disabled && ($.value < 0 || b.value[C].buttonId !== y.value)) {
        const P = new Xe("activate-tab", { cancelable: !0 });
        t("activate-tab", C, $.value, P), P.defaultPrevented || ($.value = C, F = !0);
      }
      return !F && l.value !== $.value && (l.value = $.value), F;
    }, I = (C, F) => {
      var P;
      O(F), F >= 0 && !b.value[F].disabled && ((P = b.value[F]) != null && P.onClick) && typeof b.value[F].onClick == "function" && b.value[F].onClick(C);
    };
    return O(k.value), ce(l, (C, F) => {
      if (C === F)
        return;
      if (C = Math.max(C, -1), F = Math.max(F, -1), b.value.length <= 0) {
        $.value = -1;
        return;
      }
      const P = C > F;
      let W = C;
      const j = b.value.length - 1;
      for (; W >= 0 && W <= j && b.value[W].disabled; )
        W += P ? 1 : -1;
      if (W < 0) {
        O(0);
        return;
      }
      if (W >= b.value.length) {
        O(b.value.length - 1);
        return;
      }
      O(W);
    }), ce(b, () => {
      let C = b.value.map((F) => F.active && !F.disabled).lastIndexOf(!0);
      C < 0 && ($.value >= b.value.length ? C = b.value.map((F) => !F.disabled).lastIndexOf(!0) : b.value[$.value] && !b.value[$.value].disabled && (C = $.value)), C < 0 && (C = b.value.map((F) => !F.disabled).indexOf(!0)), b.value.forEach((F, P) => F.active = P === C), O(C);
    }), Ye(() => {
      if ($.value < 0 && b.value.length > 0 && !b.value.some((C) => C.active)) {
        const C = b.value.map((F) => !F.disabled).indexOf(!0);
        O(C >= 0 ? C : -1);
      }
    }), Ze(Bo, {
      lazy: m,
      card: n
    }), (C, F) => (p(), M(le(e.tag), {
      id: e.id,
      class: R(["tabs", i(V)])
    }, {
      default: D(() => [
        i(r) ? (p(), A("div", {
          key: 0,
          class: R(["tab-content", e.contentClass])
        }, [
          (p(!0), A(fe, null, Be(i(b), ({ tabComponent: P, contentId: W, tabClasses: j, active: te }, X) => (p(), M(le(P()), {
            id: W,
            key: X,
            class: R(j),
            active: te
          }, null, 8, ["id", "class", "active"]))), 128)),
          i(_) ? (p(), A("div", {
            key: "bv-empty-tab",
            class: R(["tab-pane active", { "card-body": i(n) }])
          }, [
            x(C.$slots, "empty")
          ], 2)) : Z("", !0)
        ], 2)) : Z("", !0),
        K("div", {
          class: R([e.navWrapperClass, { "card-header": i(n), "ms-auto": e.vertical && i(r) }])
        }, [
          K("ul", {
            class: R(["nav", [i(S), e.navClass]]),
            role: "tablist"
          }, [
            x(C.$slots, "tabs-start"),
            (p(!0), A(fe, null, Be(i(b), ({ tab: P, buttonId: W, contentId: j, navItemClasses: te, active: X, target: q }, ae) => {
              var me, pe, be;
              return p(), A("li", {
                key: ae,
                class: R(["nav-item", (me = P == null ? void 0 : P.props) == null ? void 0 : me["title-item-class"]]),
                role: "presentation"
              }, [
                K("button", Q({
                  id: W,
                  class: ["nav-link", te],
                  "data-bs-toggle": "tab",
                  "data-bs-target": q,
                  role: "tab",
                  "aria-controls": j,
                  "aria-selected": X
                }, (pe = P == null ? void 0 : P.props) == null ? void 0 : pe["title-link-attributes"], {
                  onClick: ft((ne) => I(ne, ae), ["stop", "prevent"])
                }), [
                  P.children && P.children.title ? (p(), M(le(P.children.title), { key: 0 })) : (p(), A(fe, { key: 1 }, [
                    se(Y((be = P == null ? void 0 : P.props) == null ? void 0 : be.title), 1)
                  ], 64))
                ], 16, $f)
              ], 2);
            }), 128)),
            x(C.$slots, "tabs-end")
          ], 2)
        ], 2),
        i(r) ? Z("", !0) : (p(), A("div", {
          key: 1,
          class: R(["tab-content", e.contentClass])
        }, [
          (p(!0), A(fe, null, Be(i(b), ({ tabComponent: P, contentId: W, tabClasses: j, active: te }, X) => (p(), M(le(P()), {
            id: W,
            key: X,
            class: R(j),
            active: te
          }, null, 8, ["id", "class", "active"]))), 128)),
          i(_) ? (p(), A("div", {
            key: "bv-empty-tab",
            class: R(["tab-pane active", { "card-body": i(n) }])
          }, [
            x(C.$slots, "empty")
          ], 2)) : Z("", !0)
        ], 2))
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), kf = /* @__PURE__ */ N({
  __name: "BTooltip",
  setup(e) {
    return (t, a) => (p(), M(Ua, { tooltip: "" }, no({ _: 2 }, [
      Be(t.$slots, (l, o) => ({
        name: o,
        fn: D((n) => [
          x(t.$slots, o, $e(Ae(n)))
        ])
      }))
    ]), 1024));
  }
}), Cf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BAccordion: or,
  BAccordionItem: dr,
  BAlert: hr,
  BAvatar: wr,
  BAvatarGroup: kr,
  BBadge: _r,
  BBreadcrumb: Or,
  BBreadcrumbItem: cn,
  BButton: kt,
  BButtonGroup: Pr,
  BButtonToolbar: Ir,
  BCard: hn,
  BCardBody: gn,
  BCardFooter: bn,
  BCardGroup: Lr,
  BCardHeader: vn,
  BCardImg: oa,
  BCardSubtitle: pn,
  BCardText: Nr,
  BCardTitle: mn,
  BCarousel: Wr,
  BCarouselSlide: Yr,
  BCloseButton: Tt,
  BCol: xt,
  BCollapse: dn,
  BContainer: nu,
  BDropdown: wn,
  BDropdownDivider: du,
  BDropdownForm: pu,
  BDropdownGroup: yu,
  BDropdownHeader: ku,
  BDropdownItem: Su,
  BDropdownItemButton: xu,
  BDropdownText: Ou,
  BForm: kn,
  BFormCheckbox: Sn,
  BFormCheckboxGroup: Du,
  BFormFloatingLabel: Fu,
  BFormGroup: Ju,
  BFormInput: ed,
  BFormInvalidFeedback: xa,
  BFormRadio: Tn,
  BFormRadioGroup: id,
  BFormRow: qt,
  BFormSelect: cd,
  BFormSelectOption: Xa,
  BFormSelectOptionGroup: xn,
  BFormSpinButton: Dc,
  BFormTag: An,
  BFormTags: _d,
  BFormText: Aa,
  BFormTextarea: Vd,
  BFormValidFeedback: Va,
  BImg: Ka,
  BInputGroup: Nd,
  BInputGroupAddon: Ja,
  BInputGroupAppend: zd,
  BInputGroupPrepend: Rd,
  BInputGroupText: Vn,
  BLink: Ne,
  BListGroup: Hd,
  BListGroupItem: Md,
  BModal: Wd,
  BNav: Ud,
  BNavForm: Kd,
  BNavItem: Zd,
  BNavItemDropdown: ec,
  BNavText: ac,
  BNavbar: lc,
  BNavbarBrand: sc,
  BNavbarNav: ic,
  BNavbarToggle: vc,
  BOffcanvas: yc,
  BOverlay: Pn,
  BPagination: xc,
  BPlaceholder: Me,
  BPlaceholderButton: Fn,
  BPlaceholderCard: Vc,
  BPlaceholderTable: Oc,
  BPlaceholderWrapper: Pc,
  BPopover: Ua,
  BProgress: Ic,
  BProgressBar: Ln,
  BRow: Nc,
  BSpinner: fa,
  BTab: Bf,
  BTable: uf,
  BTableSimple: Za,
  BTabs: wf,
  BTbody: df,
  BTd: vf,
  BTfoot: mf,
  BTh: bf,
  BThead: hf,
  BToast: $n,
  BToastContainer: Ta,
  BToastPlugin: lu,
  BToaster: Ta,
  BTooltip: kf,
  BTr: yf,
  BTransition: _t
}, Symbol.toStringTag, { value: "Module" })), Sf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  vBColorMode: rc,
  vBModal: Oa,
  vBPopover: dc,
  vBToggle: Oa,
  vBTooltip: cc
}, Symbol.toStringTag, { value: "Module" })), xf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  createBreadcrumb: Zo,
  useBreadcrumb: Qo,
  useColorMode: Wi
}, Symbol.toStringTag, { value: "Module" })), Af = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BvCarouselEvent: io,
  BvEvent: Xe,
  BvTriggerableEvent: Ft
}, Symbol.toStringTag, { value: "Module" })), Vf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null
}, Symbol.toStringTag, { value: "Module" })), Of = {
  // TODO: use options in the future
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  install(e, t = {}) {
    Object.entries(Cf).forEach(([a, l]) => {
      e.component(a, l);
    }), Object.entries(Sf).forEach(([a, l]) => {
      a.toLowerCase().startsWith("v") ? e.directive(a.slice(1), l) : e.directive(a, l);
    }), Zo(e);
  }
};
export {
  or as BAccordion,
  dr as BAccordionItem,
  hr as BAlert,
  wr as BAvatar,
  kr as BAvatarGroup,
  _r as BBadge,
  Or as BBreadcrumb,
  cn as BBreadcrumbItem,
  kt as BButton,
  Pr as BButtonGroup,
  Ir as BButtonToolbar,
  hn as BCard,
  gn as BCardBody,
  bn as BCardFooter,
  Lr as BCardGroup,
  vn as BCardHeader,
  oa as BCardImg,
  pn as BCardSubtitle,
  Nr as BCardText,
  mn as BCardTitle,
  Wr as BCarousel,
  Yr as BCarouselSlide,
  Tt as BCloseButton,
  xt as BCol,
  dn as BCollapse,
  nu as BContainer,
  wn as BDropdown,
  du as BDropdownDivider,
  pu as BDropdownForm,
  yu as BDropdownGroup,
  ku as BDropdownHeader,
  Su as BDropdownItem,
  xu as BDropdownItemButton,
  Ou as BDropdownText,
  kn as BForm,
  Sn as BFormCheckbox,
  Du as BFormCheckboxGroup,
  Fu as BFormFloatingLabel,
  Ju as BFormGroup,
  ed as BFormInput,
  xa as BFormInvalidFeedback,
  Tn as BFormRadio,
  id as BFormRadioGroup,
  qt as BFormRow,
  cd as BFormSelect,
  Xa as BFormSelectOption,
  xn as BFormSelectOptionGroup,
  Dc as BFormSpinButton,
  An as BFormTag,
  _d as BFormTags,
  Aa as BFormText,
  Vd as BFormTextarea,
  Va as BFormValidFeedback,
  Ka as BImg,
  Nd as BInputGroup,
  Ja as BInputGroupAddon,
  zd as BInputGroupAppend,
  Rd as BInputGroupPrepend,
  Vn as BInputGroupText,
  Ne as BLink,
  Hd as BListGroup,
  Md as BListGroupItem,
  Wd as BModal,
  Ud as BNav,
  Kd as BNavForm,
  Zd as BNavItem,
  ec as BNavItemDropdown,
  ac as BNavText,
  lc as BNavbar,
  sc as BNavbarBrand,
  ic as BNavbarNav,
  vc as BNavbarToggle,
  yc as BOffcanvas,
  Pn as BOverlay,
  xc as BPagination,
  Me as BPlaceholder,
  Fn as BPlaceholderButton,
  Vc as BPlaceholderCard,
  Oc as BPlaceholderTable,
  Pc as BPlaceholderWrapper,
  Ua as BPopover,
  Ic as BProgress,
  Ln as BProgressBar,
  Nc as BRow,
  fa as BSpinner,
  Bf as BTab,
  uf as BTable,
  Za as BTableSimple,
  wf as BTabs,
  df as BTbody,
  vf as BTd,
  mf as BTfoot,
  bf as BTh,
  hf as BThead,
  $n as BToast,
  Ta as BToastContainer,
  lu as BToastPlugin,
  Ta as BToaster,
  kf as BTooltip,
  yf as BTr,
  _t as BTransition,
  Of as BootstrapVueNext,
  io as BvCarouselEvent,
  Xe as BvEvent,
  Ft as BvTriggerableEvent,
  Cf as Components,
  xf as Composables,
  Sf as Directives,
  Vf as Types,
  Af as Utils,
  Zo as createBreadcrumb,
  Of as default,
  Qo as useBreadcrumb,
  Wi as useColorMode,
  Bn as useToast,
  rc as vBColorMode,
  Oa as vBModal,
  dc as vBPopover,
  Oa as vBToggle,
  cc as vBTooltip
};
//# sourceMappingURL=bootstrap-vue-next.mjs.map
